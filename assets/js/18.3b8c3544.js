(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{427:function(t,e,n){"use strict";n.r(e);var a=n(2),s=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[t._v("#")]),t._v(" context")]),t._v(" "),e("p",[t._v("go的语言特点就是并发。官方为了管理，开发了context包。")]),t._v(" "),e("p",[t._v("context标准库，用来管理goroutine的生命周期，传递上下文，控制超时取消等操作。（非常的就是像总结）")]),t._v(" "),e("p",[t._v("context理解过来就是构建一个上下文链路树，如果某一个链路的节点断了，则子节点会有相应的行为。（自己的理解）")]),t._v(" "),e("h2",{attrs:{id:"案例学习"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#案例学习"}},[t._v("#")]),t._v(" 案例学习")]),t._v(" "),e("p",[t._v("假设我们需要从多个api接口中并发的获取数据，如果某个接口超时，就将其请求取消。")]),t._v(" "),e("h2",{attrs:{id:"context使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context使用"}},[t._v("#")]),t._v(" context使用")]),t._v(" "),e("h3",{attrs:{id:"context方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#context方法"}},[t._v("#")]),t._v(" context方法")]),t._v(" "),e("ul",[e("li",[t._v("Deadline()：返回超时的截止时间")]),t._v(" "),e("li",[t._v("Done()：上下文完成时或者取消后会调用")]),t._v(" "),e("li",[t._v("Err()：Done()返回后，使用Err可以获得结束原因")]),t._v(" "),e("li",[t._v("Value()：获取键值")])]),t._v(" "),e("h3",{attrs:{id:"_1-创建根context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-创建根context"}},[t._v("#")]),t._v(" 1.创建根context")]),t._v(" "),e("p",[t._v("context.Background()：可以创建一个非nil，空值的Context对象，不能发出取消信号，线程安全，通常作为根Context，用于派生其他Context。")]),t._v(" "),e("p",[t._v("context.TODO(): 和context.Background()一样，一般做为占位符存在。")]),t._v(" "),e("ul",[e("li",[t._v("当一个context被取消，派生的context同样被取消")]),t._v(" "),e("li",[t._v("context是线程安全的")])]),t._v(" "),e("h3",{attrs:{id:"_2-value-context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-value-context"}},[t._v("#")]),t._v(" 2.Value context")]),t._v(" "),e("p",[t._v("context可以在多个goroutines之间传值")]),t._v(" "),e("p",[t._v("context.WithValue()用来在context中存储键值对，它返回一个新的Context，这个新的Context携带了一个键值对。")]),t._v(" "),e("h4",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("p",[t._v("通过节点 传递键值对")]),t._v(" "),e("h3",{attrs:{id:"_3-cancel-context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-cancel-context"}},[t._v("#")]),t._v(" 3.Cancel context")]),t._v(" "),e("p",[t._v("通过context.WithCancel创建的context可以发出取消信号")]),t._v(" "),e("p",[t._v("通过取消信号，我们可以终止相关的goroutines，从而避免资源泄露（未能正确释放导致无法回收）")]),t._v(" "),e("p",[t._v("context.WithoutCancel()创建的context在parentContext被取消时，其不会被取消")]),t._v(" "),e("h3",{attrs:{id:"_4-timeout-context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-timeout-context"}},[t._v("#")]),t._v(" 4.Timeout context")]),t._v(" "),e("p",[t._v("context.WithTimeout用于创建一个带有超时的上下文，这个上下文会在指定的超时时间之后自动取消")]),t._v(" "),e("p",[t._v("注意：如果父 context 有一个截止时间，那么子 context 的截止时间将是父 context 的截止时间和子 context 自己的截止时间中较早的那个")]),t._v(" "),e("p",[t._v("context.WithTimeoutCause()和context.WithTimeout()区别就是错误信息可以自定义")]),t._v(" "),e("h3",{attrs:{id:"_5-deadline-context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-deadline-context"}},[t._v("#")]),t._v(" 5.Deadline context")]),t._v(" "),e("p",[t._v("context.WithDeadline和context.WithTimeout一样，区别在于时间的表示方式，context.WithDeadline的时间需要时一个具体的时刻")]),t._v(" "),e("p",[t._v("context.WithDeadlineCause()这个函数和WithDeadline用法一样，唯一的区别是可以自定义错误信息")]),t._v(" "),e("h3",{attrs:{id:"_6-afterfunc-context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-afterfunc-context"}},[t._v("#")]),t._v(" 6.AfterFunc context")]),t._v(" "),e("p",[t._v("context.AfterFunc是在parent context完成或者取消后，执行一个函数，会返回一个stop函数，用于停止parent context和func的关联")]),t._v(" "),e("p",[t._v("返回true代表成功取消，false代表context已经完成或者取消。")]),t._v(" "),e("h2",{attrs:{id:"注意问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意问题"}},[t._v("#")]),t._v(" 注意问题")]),t._v(" "),e("ul",[e("li",[t._v("不传递上下文：如果一个函数创建了上下文，但并没有传递给其他函数或协程，这些函数和协程无法响应上下文相关的处理操作")]),t._v(" "),e("li",[t._v("忘记调用取消函数：使用有取消函数的上下文时，记得取消")]),t._v(" "),e("li",[t._v("协程泄露：有上下文的协程需要检查Done channel，当接收到到信号时及时清理资源和退出")]),t._v(" "),e("li",[t._v("过度使用context.Background：没有取消和超时功能，很可能引起问题")]),t._v(" "),e("li",[t._v("传递nil的上下文：不要传递nil的上下文，会导致panic")]),t._v(" "),e("li",[t._v("阻塞调用：应该将阻塞操作（比如IO）包装成使用上下文检查的调用，可以避免被挂起")]),t._v(" "),e("li",[t._v("过度使用上下文：上下文也并不是所有场景都使用，比如处理全局资源或者共享状态等，可能更使用使用锁或者channel")]),t._v(" "),e("li",[t._v("上下文存储在结构体中：应该将context显式的传递给需要的函数，否则可能会引起数据竞态，生命周期管理等问题")])]),t._v(" "),e("h2",{attrs:{id:"源码分析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#源码分析"}},[t._v("#")]),t._v(" 源码分析")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://juejin.cn/post/7433034003668172841",target:"_blank",rel:"noopener noreferrer"}},[t._v("golang context 上下文这利器--我们要如何看待它"),e("OutboundLink")],1)]),t._v(" "),e("h3",{attrs:{id:"核心接口context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#核心接口context"}},[t._v("#")]),t._v(" 核心接口Context")]),t._v(" "),e("div",{staticClass:"language-go line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Context "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Deadline returns the time when work done on behalf of this context")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// should be canceled. Deadline returns ok==false when no deadline is")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// set.")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Deadline")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("deadline time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ok "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Done returns a channel that's closed when work done on behalf of this")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// context should be canceled.")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Done")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<-")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("chan")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Err returns a non-nil error value after Done is closed.")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Err")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Value returns the value associated with this context for key.")]),t._v("\n   "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])])])}),[],!1,null,null,null);e.default=s.exports}}]);
(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{453:function(_,v,a){"use strict";a.r(v);var t=a(2),s=Object(t.a)({},(function(){var _=this,v=_._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"javase"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javase"}},[_._v("#")]),_._v(" JavaSE")]),_._v(" "),v("h2",{attrs:{id:"第一章-java"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第一章-java"}},[_._v("#")]),_._v(" 第一章 Java")]),_._v(" "),v("p",[_._v("再牛的程序员都是从小白开始的，既然开始了，就全心投入学好技术")]),_._v(" "),v("h3",{attrs:{id:"_001学习前的话"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_001学习前的话"}},[_._v("#")]),_._v(" 001学习前的话")]),_._v(" "),v("h3",{attrs:{id:"_002就业方向"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_002就业方向"}},[_._v("#")]),_._v(" 002就业方向")]),_._v(" "),v("p",[_._v("javaee")]),_._v(" "),v("p",[_._v("大数据")]),_._v(" "),v("h3",{attrs:{id:"_003开发场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_003开发场景"}},[_._v("#")]),_._v(" 003开发场景")]),_._v(" "),v("h4",{attrs:{id:"ssm-社交"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ssm-社交"}},[_._v("#")]),_._v(" ssm(社交)")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("spring 轻量级容器框架")])]),_._v(" "),v("li",[v("p",[_._v("springMVC 分层的web开发框架")])]),_._v(" "),v("li",[v("p",[_._v("mybatis 持久化框架")])])]),_._v(" "),v("h4",{attrs:{id:"安卓"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#安卓"}},[_._v("#")]),_._v(" 安卓")]),_._v(" "),v("ul",[v("li",[_._v("大数据开发")])]),_._v(" "),v("h4",{attrs:{id:"hadoop"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#hadoop"}},[_._v("#")]),_._v(" Hadoop")]),_._v(" "),v("ul",[v("li",[_._v("异常处理")])]),_._v(" "),v("h3",{attrs:{id:"_004应用领域"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_004应用领域"}},[_._v("#")]),_._v(" 004应用领域")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("企业级应用")])]),_._v(" "),v("li",[v("p",[_._v("安卓平台应用")])]),_._v(" "),v("li",[v("p",[_._v("移动领域应用 嵌入式领域")])])]),_._v(" "),v("h3",{attrs:{id:"_005内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_005内容梳理"}},[_._v("#")]),_._v(" 005内容梳理")]),_._v(" "),v("p",[_._v("汇总整理复习")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("笔记")])]),_._v(" "),v("li",[v("p",[_._v("代码")])]),_._v(" "),v("li",[v("p",[_._v("课件")])]),_._v(" "),v("li",[v("p",[_._v("软件")])]),_._v(" "),v("li",[v("p",[_._v("视频")])]),_._v(" "),v("li",[v("p",[_._v("资料")])])]),_._v(" "),v("h2",{attrs:{id:"第二章-java概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第二章-java概述"}},[_._v("#")]),_._v(" 第二章 Java概述")]),_._v(" "),v("h3",{attrs:{id:"_006程序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_006程序"}},[_._v("#")]),_._v(" 006程序")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("什么是程序")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("有序指令集合")])]),_._v(" "),v("li",[v("p",[_._v("程序-文件")])]),_._v(" "),v("li",[v("p",[_._v("cmd 编译")])])])])]),_._v(" "),v("h3",{attrs:{id:"_007java历史"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_007java历史"}},[_._v("#")]),_._v(" 007Java历史")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java 8")])]),_._v(" "),v("li",[v("p",[_._v("95年 Java 1")])]),_._v(" "),v("li",[v("p",[_._v("甲骨文")])]),_._v(" "),v("li",[v("p",[_._v("java技术体系")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java se 标准版")])]),_._v(" "),v("li",[v("p",[_._v("java ee 企业版")])]),_._v(" "),v("li",[v("p",[_._v("java me 小型版")])])])])]),_._v(" "),v("h3",{attrs:{id:"_008java重要特点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_008java重要特点"}},[_._v("#")]),_._v(" 008Java重要特点")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("面向对象oop")])]),_._v(" "),v("li",[v("p",[_._v("健壮的，强类型机制，异常处理，垃圾自动收集")])]),_._v(" "),v("li",[v("p",[_._v("跨平台")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("test-class")])]),_._v(" "),v("li",[v("p",[_._v("widows/linux都可以运行")])]),_._v(" "),v("li",[v("p",[_._v("java虚拟机")])])])]),_._v(" "),v("li",[v("p",[_._v("解释型语言 JavaScript/php/java")]),_._v(" "),v("p",[_._v("编译型语言，编译后的代码，可以直接被机器执行，c/c++，编译后的代码不能直接由机器执行，需要解释器来执行")])])]),_._v(" "),v("h3",{attrs:{id:"_009java开发工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_009java开发工具"}},[_._v("#")]),_._v(" 009java开发工具")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("editplus")])]),_._v(" "),v("li",[v("p",[_._v("sublime")])]),_._v(" "),v("li",[v("p",[_._v("idea")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("文本编辑器本，有一定了解后")])]),_._v(" "),v("li",[v("p",[_._v("更深刻理解java技术，培养代码感")])]),_._v(" "),v("li",[v("p",[_._v("有利于面试")])])])]),_._v(" "),v("li",[v("p",[_._v("eclipse")])])]),_._v(" "),v("h3",{attrs:{id:"_010java-jdk"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_010java-jdk"}},[_._v("#")]),_._v(" 010java jdk")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("跨平台性")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("jvm java虚拟机")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("虚拟计算机")])]),_._v(" "),v("li",[v("p",[_._v("不同平台不同虚拟机")])]),_._v(" "),v("li",[v("p",[_._v("一次编译，到处运行")])])])])])]),_._v(" "),v("li",[v("p",[_._v("jdk")]),_._v(" "),v("ul",[v("li",[_._v("jre+开发工具集")])])]),_._v(" "),v("li",[v("p",[_._v("jre")]),_._v(" "),v("ul",[v("li",[_._v("jvm+java se标准类库")])])])]),_._v(" "),v("h3",{attrs:{id:"_011java我的电脑"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_011java我的电脑"}},[_._v("#")]),_._v(" 011java我的电脑")]),_._v(" "),v("h3",{attrs:{id:"_012下载jdk"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_012下载jdk"}},[_._v("#")]),_._v(" 012下载jdk")]),_._v(" "),v("h3",{attrs:{id:"_013jdk环境配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_013jdk环境配置"}},[_._v("#")]),_._v(" 013jdk环境配置")]),_._v(" "),v("ul",[v("li",[_._v("配置环境变量path")])]),_._v(" "),v("h3",{attrs:{id:"_016快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_016快速入门"}},[_._v("#")]),_._v(" 016快速入门")]),_._v(" "),v("ul",[v("li",[_._v("编码要用gbk才能生效")])]),_._v(" "),v("h3",{attrs:{id:"_017运行机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_017运行机制"}},[_._v("#")]),_._v(" 017运行机制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java文件 源文件")]),_._v(" "),v("ul",[v("li",[_._v("class文件 字节码文件\n"),v("ul",[v("li",[_._v("结果")])])])])]),_._v(" "),v("li",[v("p",[_._v("什么是编译")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("有了源文件，编译器将其编译成jvm可以识别的字节码文件")])]),_._v(" "),v("li",[v("p",[_._v("在该源文件目录下，通过javac编译工具对hello.java文件进行编译")])]),_._v(" "),v("li",[v("p",[_._v("如果程序没有错误，没有提示，当前目录下会出现一个hello.class文件，该文件称为字节码文件，也是可以执行java的程序")])])])]),_._v(" "),v("li",[v("p",[_._v("什么是运行")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("有了可执行的java程序，通过运行程序java.exe对字节码文件执行，本质就是.class装载到jvm机执行")])]),_._v(" "),v("li",[v("p",[_._v("改了之后，需要重新编译")])])])])]),_._v(" "),v("h3",{attrs:{id:"_018开发细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_018开发细节"}},[_._v("#")]),_._v(" 018开发细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java源文件 扩展名 class 类")])]),_._v(" "),v("li",[v("p",[_._v("java应用程序的执行入口是main（）方法，固定疏忽写格式")]),_._v(" "),v("ul",[v("li",[_._v("public static void main(String[] args){}")])])]),_._v(" "),v("li",[v("p",[_._v("严格区分大小写")])]),_._v(" "),v("li",[v("p",[_._v("每一个语句构成 要用分号；结束")])]),_._v(" "),v("li",[v("p",[_._v("大括号成对出现")])]),_._v(" "),v("li",[v("p",[_._v("一个源文件中最多只有一个public类，其他类的个数不限")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("每一个类编译后，都对应一个.class")])]),_._v(" "),v("li",[v("p",[_._v("文件名必跟public类同名")])])])]),_._v(" "),v("li",[v("p",[_._v("也可以将main方法写在非public类中，然后运行非public类，这样入口方法就是非public的main方法")])])]),_._v(" "),v("h3",{attrs:{id:"_019学习方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_019学习方法"}},[_._v("#")]),_._v(" 019学习方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("如何快速学习技术和知识点，心得分享")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("需求")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("工作需要")])]),_._v(" "),v("li",[v("p",[_._v("跳槽")])]),_._v(" "),v("li",[v("p",[_._v("技术控")])])])]),_._v(" "),v("li",[v("p",[_._v("看看能否使用传统技术解决")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("能解决，但是不完美")])]),_._v(" "),v("li",[v("p",[_._v("解决不了")])])])]),_._v(" "),v("li",[v("p",[_._v("提出我们要学习的新技术和知识点")])]),_._v(" "),v("li",[v("p",[_._v("学习新技术和知识点的基本原理和基本语法 可以不考虑细节")])]),_._v(" "),v("li",[v("p",[_._v("快速入门 基本程序 crud 增删改查")])]),_._v(" "),v("li",[v("p",[_._v("开始研究技术的注意事项，使用细节，使用规范，如何优化 没有止境，技术魅力，不断循环，工资高低")])])])])]),_._v(" "),v("h3",{attrs:{id:"_020java转义字符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_020java转义字符"}},[_._v("#")]),_._v(" 020Java转义字符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("\\t")]),_._v(" "),v("ul",[v("li",[_._v("制表符")])])]),_._v(" "),v("li",[v("p",[_._v("\\n")]),_._v(" "),v("ul",[v("li",[_._v("换行符")])])]),_._v(" "),v("li",[v("p",[_._v("\\\\")]),_._v(" "),v("ul",[v("li",[_._v("一个\\")])])]),_._v(" "),v("li",[v("p",[_._v("\\“")]),_._v(" "),v("ul",[v("li",[_._v("一个”")])])]),_._v(" "),v("li",[v("p",[_._v("\\‘")]),_._v(" "),v("ul",[v("li",[_._v("一个’")])])]),_._v(" "),v("li",[v("p",[_._v("\\r")]),_._v(" "),v("ul",[v("li",[_._v("回车")])])])]),_._v(" "),v("h3",{attrs:{id:"_021易犯错误"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_021易犯错误"}},[_._v("#")]),_._v(" 021易犯错误")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("找不到文件")]),_._v(" "),v("ul",[v("li",[_._v("源文件名错误，路径错误")])])]),_._v(" "),v("li",[v("p",[_._v("主类应与文件名一致")]),_._v(" "),v("ul",[v("li",[_._v("声明为public的主类应与文件名一致，否则编译失败")])])]),_._v(" "),v("li",[v("p",[_._v("缺少分号")]),_._v(" "),v("ul",[v("li",[_._v("注意错误出现的行数，再到源代码中指定位置改错")])])]),_._v(" "),v("li",[v("p",[_._v("常见错误总结")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("语法要求")])]),_._v(" "),v("li",[v("p",[_._v("不好修改的错误")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("业务错误")])]),_._v(" "),v("li",[v("p",[_._v("环境错误")])])])])])])]),_._v(" "),v("h3",{attrs:{id:"_022注释"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_022注释"}},[_._v("#")]),_._v(" 022注释")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("源码")])]),_._v(" "),v("li",[v("p",[_._v("良好的习惯")])]),_._v(" "),v("li",[v("p",[_._v("src源码")])]),_._v(" "),v("li",[v("p",[_._v("out字节码")])])]),_._v(" "),v("h3",{attrs:{id:"_023多行注释"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_023多行注释"}},[_._v("#")]),_._v(" 023多行注释")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("单行注释")])]),_._v(" "),v("li",[v("p",[_._v("多行注释（块注释）")]),_._v(" "),v("ul",[v("li",[_._v("/*    */")])])]),_._v(" "),v("li",[v("p",[_._v("多行注释不要嵌套注释")])])]),_._v(" "),v("h3",{attrs:{id:"_024文档注释"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_024文档注释"}},[_._v("#")]),_._v(" 024文档注释")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("javadoc")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("基本格式")]),_._v(" "),v("ul",[v("li",[_._v("/**  *  *  */")])])]),_._v(" "),v("li",[v("p",[_._v("如何生成对应的文档注释")])]),_._v(" "),v("li",[v("p",[_._v("javadoc标签")])])])])]),_._v(" "),v("h3",{attrs:{id:"_025代码规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_025代码规范"}},[_._v("#")]),_._v(" 025代码规范")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("类、方法的注释，要用javadoc来描述")])]),_._v(" "),v("li",[v("p",[_._v("非javaadoc注释，给代码维护者看的")])]),_._v(" "),v("li",[v("p",[_._v("使用tab操作，实现同时左移右移")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("tab")])]),_._v(" "),v("li",[v("p",[_._v("shift + tab")])])])]),_._v(" "),v("li",[v("p",[_._v("运算符和=两边习惯性各加一个空格")])]),_._v(" "),v("li",[v("p",[_._v("源文件用utf8编码")])]),_._v(" "),v("li",[v("p",[_._v("行宽不要超过80字符")])]),_._v(" "),v("li",[v("p",[_._v("代码编写 次行风格 行尾风格（！！）")])])]),_._v(" "),v("h3",{attrs:{id:"_026dos原理-了解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_026dos原理-了解"}},[_._v("#")]),_._v(" 026dos原理（了解）")]),_._v(" "),v("p",[_._v("disk operating system 磁盘操作系统")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("磁盘操作系统，目录结构，相对路径，绝对路径")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("接受指令")])]),_._v(" "),v("li",[v("p",[_._v("解析指令")])]),_._v(" "),v("li",[v("p",[_._v("执行指令")])])])]),_._v(" "),v("li",[v("p",[_._v("常用的doc指令")]),_._v(" "),v("ul",[v("li",[_._v("dir 查看当前目录有什么内容")]),_._v(" "),v("li",[_._v("cd 切换到其他盘下或者其他目录 ..\\表示上一级目录")]),_._v(" "),v("li",[_._v("cd.. 切换到上一级")]),_._v(" "),v("li",[_._v("cd\\ 切换到根目录")]),_._v(" "),v("li",[_._v("tree 查看指定目录下所有的子集目录")]),_._v(" "),v("li",[_._v("cls 清屏")]),_._v(" "),v("li",[_._v("DOS exit 退出")])])])]),_._v(" "),v("h3",{attrs:{id:"_027路径详解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_027路径详解"}},[_._v("#")]),_._v(" 027路径详解")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("相对路径")]),_._v(" "),v("ul",[v("li",[_._v("从当前目录开始定位，形成一个路径\n"),v("ul",[v("li",[_._v("......\\abc2\\test200\\hello.txt")])])])])]),_._v(" "),v("li",[v("p",[_._v("绝对路径")]),_._v(" "),v("ul",[v("li",[_._v("从顶级目录d，开始定位，形成的路径\n"),v("ul",[v("li",[_._v("d:\\abc2\\test200\\hello.txt")])])])])])]),_._v(" "),v("h3",{attrs:{id:"_028dos指令1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_028dos指令1"}},[_._v("#")]),_._v(" 028dos指令1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("查看当前目录有什么内容")]),_._v(" "),v("ul",[v("li",[_._v("dir d:\\abc2\\test200")])])]),_._v(" "),v("li",[v("p",[_._v("切换到其他盘下：盘符号 cd")]),_._v(" "),v("ul",[v("li",[_._v("切换到c盘\n"),v("ul",[v("li",[_._v("cd /D c")])])])])]),_._v(" "),v("li",[v("p",[_._v("切换到当前盘的其他目录下")]),_._v(" "),v("ul",[v("li",[_._v("cd d:\\abc\\test200")])])]),_._v(" "),v("li",[v("p",[_._v("切换到上一级 ..\\ 表示上一级目录")])]),_._v(" "),v("li",[v("p",[_._v("切换到根目录")]),_._v(" "),v("ul",[v("li",[_._v("cd\\")])])])]),_._v(" "),v("h3",{attrs:{id:"_029dos指令2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_029dos指令2"}},[_._v("#")]),_._v(" 029dos指令2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("查看指定的目录下所有的子集目录")]),_._v(" "),v("ul",[v("li",[_._v("d:\\tree d:\\abc200")])])]),_._v(" "),v("li",[v("p",[_._v("清屏")]),_._v(" "),v("ul",[v("li",[_._v("d:>cls")])])]),_._v(" "),v("li",[v("p",[_._v("退出dos")])])]),_._v(" "),v("h3",{attrs:{id:"_030dos指令3-了解-linux"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_030dos指令3-了解-linux"}},[_._v("#")]),_._v(" 030dos指令3(了解)linux")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("md（创建目录）,rd（删除目录）,copy（拷贝文件）,del（删除文件）,echo（输入内容到文件）,type,move（剪切）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("echo ok>pic.txt")])]),_._v(" "),v("li",[v("p",[_._v("move ok.txt f:\\ok.txt")])])])])]),_._v(" "),v("h3",{attrs:{id:"_031-032本章作业"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_031-032本章作业"}},[_._v("#")]),_._v(" 031 032本章作业")]),_._v(" "),v("h3",{attrs:{id:"_033内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_033内容梳理"}},[_._v("#")]),_._v(" 033内容梳理")]),_._v(" "),v("p",[_._v("动手去做就会一步步走向成功")]),_._v(" "),v("h2",{attrs:{id:"第三章-变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第三章-变量"}},[_._v("#")]),_._v(" 第三章 变量")]),_._v(" "),v("h3",{attrs:{id:"_035为什么需要变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_035为什么需要变量"}},[_._v("#")]),_._v(" 035为什么需要变量")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("变量是程序的基本组成单位")])]),_._v(" "),v("li",[v("p",[_._v("变量的三基本要素")]),_._v(" "),v("ul",[v("li",[_._v("类型+名称+值")])])]),_._v(" "),v("li",[v("p",[_._v("声明变量 赋值 使用System.out.println(a);输出")])])]),_._v(" "),v("h3",{attrs:{id:"_036变量入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_036变量入门"}},[_._v("#")]),_._v(" 036变量入门")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("int")])]),_._v(" "),v("li",[v("p",[_._v("char")])]),_._v(" "),v("li",[v("p",[_._v("double")])]),_._v(" "),v("li",[v("p",[_._v("String")]),_._v(" "),v("ul",[v("li",[_._v("字符串")])])])]),_._v(" "),v("h3",{attrs:{id:"_037变量细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_037变量细节"}},[_._v("#")]),_._v(" 037变量细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("变量表示内存中的一个存储区域，不同变量类型不同占用空间大小不同")])]),_._v(" "),v("li",[v("p",[_._v("该区域有自己的名称"),v("code",[_._v("[")]),_._v("变量名"),v("code",[_._v("]``[")]),_._v("数据类型"),v("code",[_._v("]")])])]),_._v(" "),v("li",[v("p",[_._v("变量必须先声明，后使用，即有顺序")])]),_._v(" "),v("li",[v("p",[_._v("该区域的数据可以在同一类型范围内任意变化")])]),_._v(" "),v("li",[v("p",[_._v("变量在同一个作用域内不能重名")])])]),_._v(" "),v("h3",{attrs:{id:"_038java-号使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_038java-号使用"}},[_._v("#")]),_._v(" 038java+号使用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("左右两边都是数值型时，则做加法运算")])]),_._v(" "),v("li",[v("p",[_._v("当左右两边有一方为字符串，则做拼接运算")])])]),_._v(" "),v("h3",{attrs:{id:"_039数据类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_039数据类型"}},[_._v("#")]),_._v(" 039数据类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("基本数据类型（8种）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("数值型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("整数类型")]),_._v(" "),v("ul",[v("li",[_._v("存放整数(byte[1],short[2],int[4],long[8])")])])]),_._v(" "),v("li",[v("p",[_._v("浮点小数类型")]),_._v(" "),v("ul",[v("li",[_._v("float[4],double[8]")])])])])]),_._v(" "),v("li",[v("p",[_._v("字符型char[2]")]),_._v(" "),v("ul",[v("li",[_._v("存放单个字符")])])]),_._v(" "),v("li",[v("p",[_._v("布尔型boolean[1]")]),_._v(" "),v("ul",[v("li",[_._v("存放true，false")])])])])]),_._v(" "),v("li",[v("p",[_._v("引用数据类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("类（class）")])]),_._v(" "),v("li",[v("p",[_._v("接口（interface）")])]),_._v(" "),v("li",[v("p",[_._v("数组 （[ ]）")])])])])]),_._v(" "),v("h3",{attrs:{id:"_040整数类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_040整数类型"}},[_._v("#")]),_._v(" 040整数类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("字节")]),_._v(" "),v("ul",[v("li",[_._v("1B")])])]),_._v(" "),v("li",[v("p",[_._v("短整型")]),_._v(" "),v("ul",[v("li",[_._v("2B")])])]),_._v(" "),v("li",[v("p",[_._v("整型")]),_._v(" "),v("ul",[v("li",[_._v("4B")])])]),_._v(" "),v("li",[v("p",[_._v("长整型")]),_._v(" "),v("ul",[v("li",[_._v("8B")])])])]),_._v(" "),v("h3",{attrs:{id:"_041整型细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_041整型细节"}},[_._v("#")]),_._v(" 041整型细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("可移植性")])]),_._v(" "),v("li",[v("p",[_._v("默认int，声明long型常量后须加l或L")])]),_._v(" "),v("li",[v("p",[_._v("尽量用小的，不浪费空间")])]),_._v(" "),v("li",[v("p",[_._v("bit，byte")])])]),_._v(" "),v("h3",{attrs:{id:"_042浮点数的使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_042浮点数的使用"}},[_._v("#")]),_._v(" 042浮点数的使用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("浮点型的分类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("单精度float")])]),_._v(" "),v("li",[v("p",[_._v("双精度double")])])])]),_._v(" "),v("li",[v("p",[_._v("浮点数")]),_._v(" "),v("ul",[v("li",[_._v("符号+阶码+尾数位")])])])]),_._v(" "),v("h3",{attrs:{id:"_043-044浮点数细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_043-044浮点数细节"}},[_._v("#")]),_._v(" 043 044浮点数细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("固定范围和字段长度")])]),_._v(" "),v("li",[v("p",[_._v("java默认为double型，声明float型常量须加f或F")])]),_._v(" "),v("li",[v("p",[_._v("浮点型常量的两种表示形式")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("十进制数形式")])]),_._v(" "),v("li",[v("p",[_._v("科学计数法")])])])]),_._v(" "),v("li",[v("p",[_._v("通常情况下，应该使用double型")])]),_._v(" "),v("li",[v("p",[_._v("浮点数使用陷阱")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("2.7 和 8.1/3是个近似值，精度返回的值")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("不要对运算结果是小数的数进行比较")])]),_._v(" "),v("li",[v("p",[_._v("可以差值比较差值范围")])])])]),_._v(" "),v("li",[v("p",[_._v("乘法呢能判断吗")]),_._v(" "),v("ul",[v("li",[_._v("也不能判断2.7*3==8.1")])])]),_._v(" "),v("li",[v("p",[_._v("应该是以两个数的差值的绝对值，在某个精度范围类判断")])])])])]),_._v(" "),v("h3",{attrs:{id:"_045-java-api文档"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_045-java-api文档"}},[_._v("#")]),_._v(" 045 java api文档")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("API 是java提供的基本编程接口")]),_._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"http://matools.com/",target:"_blank",rel:"noopener noreferrer"}},[_._v("matools.com"),v("OutboundLink")],1)])])]),_._v(" "),v("li",[v("p",[_._v("java提供了大量的基础类")])]),_._v(" "),v("li",[v("p",[_._v("java类的组织形式")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("jdk8,11")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("包1（java.lang)")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("接口")])]),_._v(" "),v("li",[v("p",[_._v("类（···）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("字段")])]),_._v(" "),v("li",[v("p",[_._v("构造器")])]),_._v(" "),v("li",[v("p",[_._v("方法")])])])]),_._v(" "),v("li",[v("p",[_._v("异常")])])])]),_._v(" "),v("li",[v("p",[_._v("包2")])]),_._v(" "),v("li",[v("p",[_._v("包3")])])])])])]),_._v(" "),v("li",[v("p",[_._v("举例如何使用API")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("ArraryList")]),_._v(" "),v("ul",[v("li",[_._v("安：包 类 方法")])])]),_._v(" "),v("li",[v("p",[_._v("Math")])])])])]),_._v(" "),v("h3",{attrs:{id:"_046-字符类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_046-字符类型"}},[_._v("#")]),_._v(" 046 字符类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("表示单个字符")])]),_._v(" "),v("li",[v("p",[_._v("快捷键")])])]),_._v(" "),v("h3",{attrs:{id:"_047-字符细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_047-字符细节"}},[_._v("#")]),_._v(" 047 字符细节")]),_._v(" "),v("ul",[v("li",[_._v("字符常量用单引号‘’括起来的单个字符")]),_._v(" "),v("li",[_._v("java中还允许转义字符")]),_._v(" "),v("li",[_._v("char类型是可以进行运算的，char本质是一个整数，输出的是unicode码对应的字符")]),_._v(" "),v("li",[_._v("可以给char赋一个整数，那么也可以输出对应的unicode码")])]),_._v(" "),v("h3",{attrs:{id:"_048-字符类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_048-字符类型"}},[_._v("#")]),_._v(" 048 字符类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("字符型存储到计算机，字符相对应的码值")])]),_._v(" "),v("li",[v("p",[_._v("字符编码表")])])]),_._v(" "),v("h3",{attrs:{id:"_049-常用编码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_049-常用编码"}},[_._v("#")]),_._v(" 049 常用编码")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("ASCLL")])]),_._v(" "),v("li",[v("p",[_._v("utf-8")])])]),_._v(" "),v("h3",{attrs:{id:"_050-布尔类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_050-布尔类型"}},[_._v("#")]),_._v(" 050 布尔类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Boolean")]),_._v(" "),v("ul",[v("li",[_._v("TRUE FALSE")])])]),_._v(" "),v("li",[v("p",[_._v("不可用0或非0替代")])])]),_._v(" "),v("h3",{attrs:{id:"_051-自动类型转换基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_051-自动类型转换基础"}},[_._v("#")]),_._v(" 051 自动类型转换基础")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("精度小的类型自动转换为精度大的")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("char int long float double")])]),_._v(" "),v("li",[v("p",[_._v("byte short int long float double")])])])])]),_._v(" "),v("h3",{attrs:{id:"_052-053-自动类型转换细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_052-053-自动类型转换细节"}},[_._v("#")]),_._v(" 052 053 自动类型转换细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("有多种类型的数据混合运算是，系统首先自动将所有数据转换成容量最大的那种数据类型，然后进行计算（浮点数默认是double）")])]),_._v(" "),v("li",[v("p",[_._v("当把精度大的赋给精度小的就会报错")])]),_._v(" "),v("li",[v("p",[_._v("类型有自己的范围，如果在就可以表示")]),_._v(" "),v("ul",[v("li",[_._v("如果是变量赋值，注意范围")])])]),_._v(" "),v("li",[v("p",[_._v("byte short char不能自动转换")])]),_._v(" "),v("li",[v("p",[_._v("byte short char他们三者可以计算，先转成了int型")])]),_._v(" "),v("li",[v("p",[_._v("bool类型不参与转换")])]),_._v(" "),v("li",[v("p",[_._v("自动提升原则：表达式结果的类型自动提升为操作数最大的类型")])])]),_._v(" "),v("h3",{attrs:{id:"_054-强制类型转换基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_054-强制类型转换基础"}},[_._v("#")]),_._v(" 054 强制类型转换基础")]),_._v(" "),v("ul",[v("li",[_._v("自动的逆过程，将容量大的数据类型转换为容量小的数据类型，使用时要加上强制转换符，但可能造成精度降低或者溢出，用（int）来转换")])]),_._v(" "),v("h3",{attrs:{id:"_055-强制类型转换细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_055-强制类型转换细节"}},[_._v("#")]),_._v(" 055 强制类型转换细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("数据的大小从 大 到 小")])]),_._v(" "),v("li",[v("p",[_._v("强转符号只对最近的数有效，往往会使用小括号提升优先级")])]),_._v(" "),v("li",[v("p",[_._v("char可以保存int的常量值，但不能保存int的变量值，需要强转")])])]),_._v(" "),v("h3",{attrs:{id:"_056-类型转换练习题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_056-类型转换练习题"}},[_._v("#")]),_._v(" 056 类型转换练习题")]),_._v(" "),v("h3",{attrs:{id:"_057-基本数据类型和string类型的转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_057-基本数据类型和string类型的转换"}},[_._v("#")]),_._v(" 057 基本数据类型和String类型的转换")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("将基本类型的值+“ ”即可")])]),_._v(" "),v("li",[v("p",[_._v("通过基本的包装类调用parsexx方法即可")])]),_._v(" "),v("li",[v("p",[_._v("怎么把字符串转成字符char含义是指 把字符串的第一个字符得到")])])]),_._v(" "),v("h3",{attrs:{id:"_058-string转基本类型细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_058-string转基本类型细节"}},[_._v("#")]),_._v(" 058 String转基本类型细节")]),_._v(" "),v("h3",{attrs:{id:"_059-060-本章作业"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_059-060-本章作业"}},[_._v("#")]),_._v(" 059 060 本章作业")]),_._v(" "),v("h3",{attrs:{id:"_061-本章小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_061-本章小结"}},[_._v("#")]),_._v(" 061 本章小结")]),_._v(" "),v("h2",{attrs:{id:"第四章-运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第四章-运算符"}},[_._v("#")]),_._v(" 第四章 运算符")]),_._v(" "),v("h3",{attrs:{id:"_062-算数运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_062-算数运算符"}},[_._v("#")]),_._v(" 062 算数运算符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("运算符是一种特殊的符号，用以表示数据的运算、赋值和比较")])]),_._v(" "),v("li",[v("p",[_._v("+ - * / % 自增 自减 字符串相加")])])]),_._v(" "),v("h3",{attrs:{id:"_063-算数运算符的使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_063-算数运算符的使用"}},[_._v("#")]),_._v(" 063 算数运算符的使用")]),_._v(" "),v("ul",[v("li",[_._v("ArithmeticOperator.java")])]),_._v(" "),v("h3",{attrs:{id:"_064-算数运算符练习1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_064-算数运算符练习1"}},[_._v("#")]),_._v(" 064 算数运算符练习1")]),_._v(" "),v("ul",[v("li",[_._v("int i=1 i++ ++i 输出i会等于什么呢")])]),_._v(" "),v("h3",{attrs:{id:"_065-算数运算符练习2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_065-算数运算符练习2"}},[_._v("#")]),_._v(" 065 算数运算符练习2")]),_._v(" "),v("ul",[v("li",[_._v("自增 自减的问题")])]),_._v(" "),v("h3",{attrs:{id:"_066-算数运算符练习3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_066-算数运算符练习3"}},[_._v("#")]),_._v(" 066 算数运算符练习3")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("假设59天放假")])]),_._v(" "),v("li",[v("p",[_._v("变量保存华氏温度")])])]),_._v(" "),v("h3",{attrs:{id:"_067-关系运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_067-关系运算符"}},[_._v("#")]),_._v(" 067 关系运算符")]),_._v(" "),v("ul",[v("li",[_._v("relational")])]),_._v(" "),v("h3",{attrs:{id:"_068关系运算符介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_068关系运算符介绍"}},[_._v("#")]),_._v(" 068关系运算符介绍")]),_._v(" "),v("h3",{attrs:{id:"_069关系运算符使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_069关系运算符使用"}},[_._v("#")]),_._v(" 069关系运算符使用")]),_._v(" "),v("h3",{attrs:{id:"_070-逻辑运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_070-逻辑运算符"}},[_._v("#")]),_._v(" 070 逻辑运算符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("逻辑与")]),_._v(" "),v("ul",[v("li",[_._v("&")])])]),_._v(" "),v("li",[v("p",[_._v("短路与")]),_._v(" "),v("ul",[v("li",[_._v("&&")])])]),_._v(" "),v("li",[v("p",[_._v("短路或")]),_._v(" "),v("ul",[v("li",[_._v("||")])])]),_._v(" "),v("li",[v("p",[_._v("逻辑或")]),_._v(" "),v("ul",[v("li",[v("code",[_._v("|")])])])]),_._v(" "),v("li",[v("p",[_._v("取反")]),_._v(" "),v("ul",[v("li",[_._v("！")])])]),_._v(" "),v("li",[v("p",[_._v("逻辑异或")]),_._v(" "),v("ul",[v("li",[_._v("^")])])])]),_._v(" "),v("h3",{attrs:{id:"_071-短路与逻辑与"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_071-短路与逻辑与"}},[_._v("#")]),_._v(" 071 短路与逻辑与")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("短路与&&")]),_._v(" "),v("ul",[v("li",[_._v("第一个为错，后面不会判断，最终结果为false")])])]),_._v(" "),v("li",[v("p",[_._v("逻辑与&")]),_._v(" "),v("ul",[v("li",[_._v("不管第一个是不是FALSE，都要判断第二个条件")])])])]),_._v(" "),v("h3",{attrs:{id:"_072-短路或逻辑或"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_072-短路或逻辑或"}},[_._v("#")]),_._v(" 072 短路或逻辑或")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("短路或||")]),_._v(" "),v("ul",[v("li",[_._v("第一个对就对，后面不用判断了")])])]),_._v(" "),v("li",[v("p",[_._v("逻辑或|")]),_._v(" "),v("ul",[v("li",[_._v("第一个对了，第二个也判断")])])])]),_._v(" "),v("h3",{attrs:{id:"_073-逻辑运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_073-逻辑运算符"}},[_._v("#")]),_._v(" 073 逻辑运算符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("取反 ！")]),_._v(" "),v("ul",[v("li",[_._v("如果条件成立，结果为false，否则为true")])])]),_._v(" "),v("li",[v("p",[_._v("逻辑异或 ^")]),_._v(" "),v("ul",[v("li",[_._v("当a b不同时，结果为true，否则为false")])])])]),_._v(" "),v("h3",{attrs:{id:"_074-逻辑运算符的练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_074-逻辑运算符的练习"}},[_._v("#")]),_._v(" 074 逻辑运算符的练习")]),_._v(" "),v("p",[_._v("走起，拿出纸和笔，但是我没有呜呜")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("逻辑与 6 6")])]),_._v(" "),v("li",[v("p",[_._v("短路与 6 5")])]),_._v(" "),v("li",[v("p",[_._v("逻辑或 11 6")])]),_._v(" "),v("li",[v("p",[_._v("短路或 11 5")])]),_._v(" "),v("li",[v("p",[_._v("短路与 46 47 48 短路或 假 继续运行 50")])])]),_._v(" "),v("h3",{attrs:{id:"_075-076赋值运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_075-076赋值运算符"}},[_._v("#")]),_._v(" 075 076赋值运算符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("+=")])]),_._v(" "),v("li",[v("p",[_._v("从右往左")])]),_._v(" "),v("li",[v("p",[_._v("左边只能是变量，右边可以使变量、表达式、常量值")])]),_._v(" "),v("li",[v("p",[_._v("复合赋值运算符有等价效果")])]),_._v(" "),v("li",[v("p",[_._v("复合赋值运算符会进行类型转换")])])]),_._v(" "),v("h3",{attrs:{id:"_077-三元运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_077-三元运算符"}},[_._v("#")]),_._v(" 077 三元运算符")]),_._v(" "),v("ul",[v("li",[_._v("条件表达式？表达式1：表达式2\n"),v("ul",[v("li",[_._v("真1假2")])])])]),_._v(" "),v("h3",{attrs:{id:"_078-079-三元运算符使用细节和练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_078-079-三元运算符使用细节和练习"}},[_._v("#")]),_._v(" 078 079 三元运算符使用细节和练习")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("实现三个数的最大值")])]),_._v(" "),v("li",[v("p",[_._v("要为可以赋给接收变量的类型，或者使用强转")])]),_._v(" "),v("li",[v("p",[_._v("底层是if else语句")])])]),_._v(" "),v("h3",{attrs:{id:"_080-运算符优先级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_080-运算符优先级"}},[_._v("#")]),_._v(" 080 运算符优先级")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("运算符有不同的优先级，运算顺序")])]),_._v(" "),v("li",[v("p",[_._v("只有单目运算符，赋值运算符是从右向左运算的")])])]),_._v(" "),v("h3",{attrs:{id:"_081-标识符的命名规则和规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_081-标识符的命名规则和规范"}},[_._v("#")]),_._v(" 081 标识符的命名规则和规范")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("只能数字_字母或$")])]),_._v(" "),v("li",[v("p",[_._v("数字不可以开头")])]),_._v(" "),v("li",[v("p",[_._v("不可以用关键字")])]),_._v(" "),v("li",[v("p",[_._v("严格区分大小写")])]),_._v(" "),v("li",[v("p",[_._v("标识符中不能有空格")])])]),_._v(" "),v("h3",{attrs:{id:"_082-标识符练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_082-标识符练习"}},[_._v("#")]),_._v(" 082 标识符练习")]),_._v(" "),v("h3",{attrs:{id:"_083-标识符规范"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_083-标识符规范"}},[_._v("#")]),_._v(" 083 标识符规范")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("包名：小写")])]),_._v(" "),v("li",[v("p",[_._v("类名、接口：大写 驼峰命名法")])]),_._v(" "),v("li",[v("p",[_._v("变量名、方法名：小驼峰")])]),_._v(" "),v("li",[v("p",[_._v("常量名：全大写，下划线连接")])])]),_._v(" "),v("h3",{attrs:{id:"_084-关键字-保留字"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_084-关键字-保留字"}},[_._v("#")]),_._v(" 084 关键字 保留字")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("被java语言赋予了特殊含义，用做专门的含义")])]),_._v(" "),v("li",[v("p",[_._v("保留字，java保留的")])])]),_._v(" "),v("h3",{attrs:{id:"_085-键盘输入语句"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_085-键盘输入语句"}},[_._v("#")]),_._v(" 085 键盘输入语句")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("import java.util.Scanner")])]),_._v(" "),v("li",[v("p",[_._v("input")])]),_._v(" "),v("li",[v("p",[_._v("扫描器(对象)")])])]),_._v(" "),v("h3",{attrs:{id:"_086-四种进制的介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_086-四种进制的介绍"}},[_._v("#")]),_._v(" 086 四种进制的介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("二进制")])]),_._v(" "),v("li",[v("p",[_._v("十进制")]),_._v(" "),v("ul",[v("li",[_._v("0b")])])]),_._v(" "),v("li",[v("p",[_._v("八进制")])]),_._v(" "),v("li",[v("p",[_._v("十六进制")]),_._v(" "),v("ul",[v("li",[_._v("0x")])])])]),_._v(" "),v("h3",{attrs:{id:"_087-二进制转十进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_087-二进制转十进制"}},[_._v("#")]),_._v(" 087 二进制转十进制")]),_._v(" "),v("h3",{attrs:{id:"_088-八进制转成十进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_088-八进制转成十进制"}},[_._v("#")]),_._v(" 088 八进制转成十进制")]),_._v(" "),v("h3",{attrs:{id:"_089-十六进制转十进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_089-十六进制转十进制"}},[_._v("#")]),_._v(" 089 十六进制转十进制")]),_._v(" "),v("h3",{attrs:{id:"_090-十进制转二进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_090-十进制转二进制"}},[_._v("#")]),_._v(" 090 十进制转二进制")]),_._v(" "),v("h3",{attrs:{id:"_091-十进制转八进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_091-十进制转八进制"}},[_._v("#")]),_._v(" 091 十进制转八进制")]),_._v(" "),v("h3",{attrs:{id:"_092-十进制转十六进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_092-十进制转十六进制"}},[_._v("#")]),_._v(" 092 十进制转十六进制")]),_._v(" "),v("h3",{attrs:{id:"_093-二进制转八进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_093-二进制转八进制"}},[_._v("#")]),_._v(" 093 二进制转八进制")]),_._v(" "),v("ul",[v("li",[_._v("三位一组")])]),_._v(" "),v("h3",{attrs:{id:"_094-二进制转十六进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_094-二进制转十六进制"}},[_._v("#")]),_._v(" 094 二进制转十六进制")]),_._v(" "),v("ul",[v("li",[_._v("四位一组")])]),_._v(" "),v("h3",{attrs:{id:"_095-096-八-十六转二进制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_095-096-八-十六转二进制"}},[_._v("#")]),_._v(" 095 096 八 十六转二进制")]),_._v(" "),v("ul",[v("li",[_._v("一分三 一分四")])]),_._v(" "),v("h3",{attrs:{id:"_097-位运算"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_097-位运算"}},[_._v("#")]),_._v(" 097 位运算")]),_._v(" "),v("ul",[v("li",[_._v("向右位移两位")])]),_._v(" "),v("h3",{attrs:{id:"_098-原码-补码-反码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_098-原码-补码-反码"}},[_._v("#")]),_._v(" 098 原码 补码 反码")]),_._v(" "),v("ul",[v("li",[_._v("java没有无符号数")])]),_._v(" "),v("h3",{attrs:{id:"_099-100位运算符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_099-100位运算符"}},[_._v("#")]),_._v(" 099 100位运算符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("按位与&")]),_._v(" "),v("ul",[v("li",[_._v("两位全为1，结果为1，否则为0")])])]),_._v(" "),v("li",[v("p",[_._v("按位或|")]),_._v(" "),v("ul",[v("li",[_._v("两位有1个为1，结果为1，否则为0")])])]),_._v(" "),v("li",[v("p",[_._v("按位异或^")]),_._v(" "),v("ul",[v("li",[_._v("两位一个为0一个为1，结果为1，否则为0")])])]),_._v(" "),v("li",[v("p",[_._v("按位取反~")]),_._v(" "),v("ul",[v("li",[_._v("0变1 1变0")])])]),_._v(" "),v("li",[v("p",[_._v(">><<")]),_._v(" "),v("ul",[v("li",[_._v("算术右移，算术左移")])])]),_._v(" "),v("li",[v("p",[_._v("逻辑右移>>>")]),_._v(" "),v("ul",[v("li",[_._v("无符号移动")])])])]),_._v(" "),v("h3",{attrs:{id:"_101-102作业-小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_101-102作业-小结"}},[_._v("#")]),_._v(" 101 102作业 小结")]),_._v(" "),v("ul",[v("li",[_._v("3 2 0 -1.5")])]),_._v(" "),v("h2",{attrs:{id:"第五章-程序控制结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第五章-程序控制结构"}},[_._v("#")]),_._v(" 第五章 程序控制结构")]),_._v(" "),v("p",[_._v("0154 听懂！=会做 要学会灵活使用\n​游泳的例子")]),_._v(" "),v("h3",{attrs:{id:"_103-顺序控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_103-顺序控制"}},[_._v("#")]),_._v(" 103 顺序控制")]),_._v(" "),v("ul",[v("li",[_._v("从上到下逐行运行，中间没有特别的判断和跳转")])]),_._v(" "),v("h3",{attrs:{id:"_104-单分支的使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_104-单分支的使用"}},[_._v("#")]),_._v(" 104 单分支的使用")]),_._v(" "),v("ul",[v("li",[_._v("基本语法 if（条件表达式）{执行代码块；}")])]),_._v(" "),v("h3",{attrs:{id:"_105-单分支流程图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_105-单分支流程图"}},[_._v("#")]),_._v(" 105  单分支流程图")]),_._v(" "),v("ul",[v("li",[_._v("if else")])]),_._v(" "),v("h3",{attrs:{id:"_106-双分支"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_106-双分支"}},[_._v("#")]),_._v(" 106  双分支")]),_._v(" "),v("h3",{attrs:{id:"_107-双分支流程图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_107-双分支流程图"}},[_._v("#")]),_._v(" 107 双分支流程图")]),_._v(" "),v("h3",{attrs:{id:"_108-双分支"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_108-双分支"}},[_._v("#")]),_._v(" 108 双分支")]),_._v(" "),v("h3",{attrs:{id:"_109-多分支使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_109-多分支使用"}},[_._v("#")]),_._v(" 109 多分支使用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("多分支可以没有else，如果所有的条件表达式都不成立，则一个执行入口都没有")])]),_._v(" "),v("li",[v("p",[_._v("如果有else，如果所有的条件表达式都不成立，则默认执行else板块")])])]),_._v(" "),v("h3",{attrs:{id:"_110-多分支练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_110-多分支练习"}},[_._v("#")]),_._v(" 110 多分支练习")]),_._v(" "),v("h3",{attrs:{id:"_111-多分支练习二"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_111-多分支练习二"}},[_._v("#")]),_._v(" 111 多分支练习二")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("没改输出 b")])]),_._v(" "),v("li",[v("p",[_._v("改了输出 c")])])]),_._v(" "),v("h3",{attrs:{id:"_112-嵌套分支"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_112-嵌套分支"}},[_._v("#")]),_._v(" 112 嵌套分支")]),_._v(" "),v("ul",[v("li",[_._v("外层分支 内层分支 不要超过三层")])]),_._v(" "),v("h3",{attrs:{id:"_113-嵌套分支课后练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_113-嵌套分支课后练习"}},[_._v("#")]),_._v(" 113 嵌套分支课后练习")]),_._v(" "),v("h3",{attrs:{id:"_114-switch分支结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_114-switch分支结构"}},[_._v("#")]),_._v(" 114 Switch分支结构")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("switch关键字 表示Switch分支")])]),_._v(" "),v("li",[v("p",[_._v("表达式对应一个值")])]),_._v(" "),v("li",[v("p",[_._v("case 常量1：当表达式的值等于常量1，就执行语句块1")])]),_._v(" "),v("li",[v("p",[_._v("break：表示退出switch")])]),_._v(" "),v("li",[v("p",[_._v("如果和case常量1匹配，就执行语句块1，如果没有匹配就继续匹配case常量2")])]),_._v(" "),v("li",[v("p",[_._v("如果一个都没匹配上，执行default")])])]),_._v(" "),v("h3",{attrs:{id:"_115-switch流程图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_115-switch流程图"}},[_._v("#")]),_._v(" 115 Switch流程图")]),_._v(" "),v("ul",[v("li",[_._v("没有breaking语句，直接全部都输出")])]),_._v(" "),v("h3",{attrs:{id:"_116-switch快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_116-switch快速入门"}},[_._v("#")]),_._v(" 116 Switch快速入门")]),_._v(" "),v("h3",{attrs:{id:"_117-switch细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_117-switch细节"}},[_._v("#")]),_._v(" 117 switch细节")]),_._v(" "),v("p",[_._v("万丈高楼平地起，辉煌都要靠自己")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("表达式数据类型必须一致，可以转换")])]),_._v(" "),v("li",[v("p",[_._v("返回值，必须是byte short int char enum【枚举】 String")])]),_._v(" "),v("li",[v("p",[_._v("case的值必须是常量，不能是变量，‘b’+1也是常量")])]),_._v(" "),v("li",[v("p",[_._v("default子句是可选的，当没有匹配的case时，执行default")])]),_._v(" "),v("li",[v("p",[_._v("break语句用来在执行完一个case分支后使程序跳出switch语句块；如果没有写break，程序会顺序执行到switch结尾，除非遇到break")])])]),_._v(" "),v("h3",{attrs:{id:"_118-119-switch课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_118-119-switch课堂练习"}},[_._v("#")]),_._v(" 118 119 switch课堂练习")]),_._v(" "),v("ul",[v("li",[_._v("1√ 2√ 3√")])]),_._v(" "),v("h3",{attrs:{id:"_120-switch和if选择"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_120-switch和if选择"}},[_._v("#")]),_._v(" 120 switch和if选择")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("判断的具体数据不多，用switch")])]),_._v(" "),v("li",[v("p",[_._v("如果出现了布尔类型，用if用的更广泛")])])]),_._v(" "),v("h3",{attrs:{id:"_121-for循环控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_121-for循环控制"}},[_._v("#")]),_._v(" 121 for循环控制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("基本语法")])]),_._v(" "),v("li",[v("p",[_._v("关键字，表示循环控制")])]),_._v(" "),v("li",[v("p",[_._v("for 四要素 循环变量的初始化 循环条件 循环变量迭代")])]),_._v(" "),v("li",[v("p",[_._v("循环操作，这里可以有多条语句，我们要循环的代码")])]),_._v(" "),v("li",[v("p",[_._v("如果循环操作（语句只有一句话），可以省略{}，建议不要省略")])])]),_._v(" "),v("h3",{attrs:{id:"_122-for执行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_122-for执行流程"}},[_._v("#")]),_._v(" 122 for执行流程")]),_._v(" "),v("h3",{attrs:{id:"_123-for细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_123-for细节"}},[_._v("#")]),_._v(" 123 for细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("循环条件是返回一个布尔值的表达式")])]),_._v(" "),v("li",[v("p",[_._v("for(;循环判断条件;) 中的初始化和变量迭代可以写到其它地方，但是两边的分号不能省略。")])]),_._v(" "),v("li",[v("p",[_._v("循环初始值可以有多条初始化语句，但要求类型一样，并且中间用逗号隔开，循环变量迭代也可以有多条变量迭代语句，中间用逗号隔开。")])])]),_._v(" "),v("h3",{attrs:{id:"_124-125-for编程思想"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_124-125-for编程思想"}},[_._v("#")]),_._v(" 124 125 for编程思想")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("化繁为简")])]),_._v(" "),v("li",[v("p",[_._v("先死后活")])])]),_._v(" "),v("h3",{attrs:{id:"_126-while基本语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_126-while基本语法"}},[_._v("#")]),_._v(" 126 while基本语法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("循环变量初始化 循环条件 循环体 循环变量迭代")])]),_._v(" "),v("li",[v("p",[_._v("放的位置不同")])])]),_._v(" "),v("h3",{attrs:{id:"_127-while执行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_127-while执行流程"}},[_._v("#")]),_._v(" 127 while执行流程")]),_._v(" "),v("p",[_._v("认真听，仔细想")]),_._v(" "),v("h3",{attrs:{id:"_128-while练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_128-while练习"}},[_._v("#")]),_._v(" 128 while练习")]),_._v(" "),v("h3",{attrs:{id:"_129-do-while语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_129-do-while语法"}},[_._v("#")]),_._v(" 129 do while语法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("关键字")])]),_._v(" "),v("li",[v("p",[_._v("先执行一次，再判断")])])]),_._v(" "),v("h3",{attrs:{id:"_130-dowhile执行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_130-dowhile执行流程"}},[_._v("#")]),_._v(" 130 dowhile执行流程")]),_._v(" "),v("h3",{attrs:{id:"_131-132-dowhile练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_131-132-dowhile练习"}},[_._v("#")]),_._v(" 131 132 dowhile练习")]),_._v(" "),v("h3",{attrs:{id:"_133-多重循环控制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_133-多重循环控制"}},[_._v("#")]),_._v(" 133 多重循环控制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("将一个循环放在另一个循环体内，就形成了嵌套循环。其中，for ,while ,do…while 均可以作为外层循环和内层循环。")])]),_._v(" "),v("li",[v("p",[_._v("实质上，嵌套循环就是把内层循环当成外层循环的循环体。当只有内层循环的循环条件为 false\n时，才会完全跳出内层循环，才可结束外层的当次循环，开始下一次的循环[")])]),_._v(" "),v("li",[v("p",[_._v("设外层循环次数为 m 次，内层为 n 次，则内层循环体实际上需要执行 m*n 次")])])]),_._v(" "),v("h3",{attrs:{id:"_134-多重循环执行流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_134-多重循环执行流程"}},[_._v("#")]),_._v(" 134 多重循环执行流程")]),_._v(" "),v("h3",{attrs:{id:"_135-136-多重循环练习-空心金字塔"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_135-136-多重循环练习-空心金字塔"}},[_._v("#")]),_._v(" 135 136 多重循环练习 空心金字塔")]),_._v(" "),v("h3",{attrs:{id:"_137-break需求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_137-break需求"}},[_._v("#")]),_._v(" 137 break需求")]),_._v(" "),v("h3",{attrs:{id:"_138-break执行语句"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_138-break执行语句"}},[_._v("#")]),_._v(" 138 break执行语句")]),_._v(" "),v("ul",[v("li",[_._v("加一个break直接跳出循环")])]),_._v(" "),v("h3",{attrs:{id:"_139-快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_139-快速入门"}},[_._v("#")]),_._v(" 139 快速入门")]),_._v(" "),v("h3",{attrs:{id:"_140-break细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_140-break细节"}},[_._v("#")]),_._v(" 140 break细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("break出现在多层嵌套的语句块中，可以通过标签指明终止的是哪一层语句块")])]),_._v(" "),v("li",[v("p",[_._v("标签的使用")])]),_._v(" "),v("li",[v("p",[_._v("break语句可以指定退出哪层")])]),_._v(" "),v("li",[v("p",[_._v("标签名字由程序员指定")])]),_._v(" "),v("li",[v("p",[_._v("break指定到哪个标签就退出到哪里")])]),_._v(" "),v("li",[v("p",[_._v("尽量不要用 默认退出最近的循环体")])])]),_._v(" "),v("h3",{attrs:{id:"_141-142-break课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_141-142-break课堂练习"}},[_._v("#")]),_._v(" 141 142 break课堂练习")]),_._v(" "),v("h3",{attrs:{id:"_143-144-145-continue"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_143-144-145-continue"}},[_._v("#")]),_._v(" 143 144 145 continue")]),_._v(" "),v("h3",{attrs:{id:"_146-return使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_146-return使用"}},[_._v("#")]),_._v(" 146 return使用")]),_._v(" "),v("h3",{attrs:{id:"_147-152-本章作业"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_147-152-本章作业"}},[_._v("#")]),_._v(" 147-152 本章作业")]),_._v(" "),v("p",[_._v("大约1个多小时写完了")]),_._v(" "),v("h3",{attrs:{id:"_153-内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_153-内容梳理"}},[_._v("#")]),_._v(" 153 内容梳理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("穿透，要不要带break")])]),_._v(" "),v("li",[v("p",[_._v("return 写在main里面直接跳出方法")])])]),_._v(" "),v("h2",{attrs:{id:"第六章-数组、排序和查找"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第六章-数组、排序和查找"}},[_._v("#")]),_._v(" 第六章 数组、排序和查找")]),_._v(" "),v("h3",{attrs:{id:"_155-数组的必要性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_155-数组的必要性"}},[_._v("#")]),_._v(" 155 数组的必要性")]),_._v(" "),v("ul",[v("li",[_._v("六只鸡")])]),_._v(" "),v("h3",{attrs:{id:"_156-数组快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_156-数组快速入门"}},[_._v("#")]),_._v(" 156 数组快速入门")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("数组可以存放多个同一类型的数据")])]),_._v(" "),v("li",[v("p",[_._v("数组也是一个数据类型，是一种引用类型")])]),_._v(" "),v("li",[v("p",[_._v("数组就是一组数据")])]),_._v(" "),v("li",[v("p",[_._v("循环遍历")])]),_._v(" "),v("li",[v("p",[_._v("数组长度")])])]),_._v(" "),v("h3",{attrs:{id:"_157-158-159数组使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_157-158-159数组使用"}},[_._v("#")]),_._v(" 157 158 159数组使用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("动态初始化")]),_._v(" "),v("ul",[v("li",[_._v("数据类型 数组名[]=new 数据类型[大小]")])])]),_._v(" "),v("li",[v("p",[_._v("数组的引用")])]),_._v(" "),v("li",[v("p",[_._v("动态初始化")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("数据类型 数组名[]")])]),_._v(" "),v("li",[v("p",[_._v("创建数组 数组名=new 数据类型[大小]")])])])]),_._v(" "),v("li",[v("p",[_._v("静态初始化")]),_._v(" "),v("ul",[v("li",[_._v("数据类型 数组名[]={元素值，元素值……}")])])])]),_._v(" "),v("h3",{attrs:{id:"_160-数组注意事项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_160-数组注意事项"}},[_._v("#")]),_._v(" 160 数组注意事项")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("同一数据类型")])]),_._v(" "),v("li",[v("p",[_._v("可以任何类型，包括基本和引用")])]),_._v(" "),v("li",[v("p",[_._v("数组如果没有赋值，有默认值（脏数据？）")])]),_._v(" "),v("li",[v("p",[_._v("使用数组的步骤 1声明数组并开辟空间 2给数组各个元素赋值 3使用数组")])]),_._v(" "),v("li",[v("p",[_._v("下标从0开始")])]),_._v(" "),v("li",[v("p",[_._v("必须在指定的范围内使用，否则报错！！遇到过")])]),_._v(" "),v("li",[v("p",[_._v("数组属于引用类型，数组型数据是对象（object）")])])]),_._v(" "),v("h3",{attrs:{id:"_161-162-数组练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_161-162-数组练习"}},[_._v("#")]),_._v(" 161 162 数组练习")]),_._v(" "),v("h3",{attrs:{id:"_163-164-数组赋值机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_163-164-数组赋值机制"}},[_._v("#")]),_._v(" 163 164 数组赋值机制")]),_._v(" "),v("ul",[v("li",[_._v("值传递和引用传递（地址拷贝）的区别")])]),_._v(" "),v("h3",{attrs:{id:"_165-数组拷贝"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_165-数组拷贝"}},[_._v("#")]),_._v(" 165 数组拷贝")]),_._v(" "),v("p",[_._v("开辟新空间 for循环赋值")]),_._v(" "),v("h3",{attrs:{id:"_166-167-数组翻转"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_166-167-数组翻转"}},[_._v("#")]),_._v(" 166 167 数组翻转")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("两种方法")])]),_._v(" "),v("li",[v("p",[_._v("加强for idea功能")])]),_._v(" "),v("li",[v("p",[_._v("数组复制 idea功能")])])]),_._v(" "),v("h3",{attrs:{id:"_168-169数组添加"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_168-169数组添加"}},[_._v("#")]),_._v(" 168 169数组添加")]),_._v(" "),v("ul",[v("li",[_._v("开辟一个新的数组，所以很慢")]),_._v(" "),v("li",[_._v("可以加点判断语句 问用户还添加不")])]),_._v(" "),v("h3",{attrs:{id:"_170-数组缩减"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_170-数组缩减"}},[_._v("#")]),_._v(" 170 数组缩减")]),_._v(" "),v("p",[_._v("课后题")]),_._v(" "),v("h3",{attrs:{id:"_171-排序介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_171-排序介绍"}},[_._v("#")]),_._v(" 171 排序介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("讲点基础的")])]),_._v(" "),v("li",[v("p",[_._v("内部排序")]),_._v(" "),v("ul",[v("li",[_._v("指将需要处理的所有数据都加载到内部存储器中进行排序。包括交换式排序法、选择式排序法、插入式排序法")])])]),_._v(" "),v("li",[v("p",[_._v("外部排序")]),_._v(" "),v("ul",[v("li",[_._v("数据量过大，无法全部加载到内存中，需要借助外部存储进行排序。包括合并排序法、直接合并排序法")])])])]),_._v(" "),v("h3",{attrs:{id:"_172-173-冒泡排序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_172-173-冒泡排序"}},[_._v("#")]),_._v(" 172 173 冒泡排序")]),_._v(" "),v("ul",[v("li",[_._v("怎么优化\n"),v("ul",[v("li",[_._v("最后或者开头的元素已经是顺序好的了，每次遍历可以少一次比较")])])])]),_._v(" "),v("h3",{attrs:{id:"_174-查找"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_174-查找"}},[_._v("#")]),_._v(" 174 查找")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("顺序查找")])]),_._v(" "),v("li",[v("p",[_._v("二分查找")])])]),_._v(" "),v("h3",{attrs:{id:"_175-二维数组的使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_175-二维数组的使用"}},[_._v("#")]),_._v(" 175 二维数组的使用")]),_._v(" "),v("h3",{attrs:{id:"_176-二维数组内存布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_176-二维数组内存布局"}},[_._v("#")]),_._v(" 176 二维数组内存布局")]),_._v(" "),v("h3",{attrs:{id:"_177-178-179-二维数组的使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_177-178-179-二维数组的使用"}},[_._v("#")]),_._v(" 177 178 179 二维数组的使用")]),_._v(" "),v("h3",{attrs:{id:"_180-二维数组练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_180-二维数组练习"}},[_._v("#")]),_._v(" 180 二维数组练习")]),_._v(" "),v("h3",{attrs:{id:"_181-杨辉三角"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_181-杨辉三角"}},[_._v("#")]),_._v(" 181 杨辉三角")]),_._v(" "),v("p",[_._v("难度不小 当时也不会做")]),_._v(" "),v("h3",{attrs:{id:"_182-二维数组的细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_182-二维数组的细节"}},[_._v("#")]),_._v(" 182 二维数组的细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("int[][] y")])]),_._v(" "),v("li",[v("p",[_._v("int[] y[]")])]),_._v(" "),v("li",[v("p",[_._v("int y[][]")])])]),_._v(" "),v("h3",{attrs:{id:"_183-二维数组练习2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_183-二维数组练习2"}},[_._v("#")]),_._v(" 183 二维数组练习2")]),_._v(" "),v("ul",[v("li",[_._v("b、e")])]),_._v(" "),v("h3",{attrs:{id:"_184-185-186-187-188-题目训练"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_184-185-186-187-188-题目训练"}},[_._v("#")]),_._v(" 184 185 186 187 188 题目训练")]),_._v(" "),v("h3",{attrs:{id:"_189-内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_189-内容梳理"}},[_._v("#")]),_._v(" 189 内容梳理")]),_._v(" "),v("h3",{attrs:{id:"_190-专业和前景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_190-专业和前景"}},[_._v("#")]),_._v(" 190 专业和前景")]),_._v(" "),v("h2",{attrs:{id:"第七章-面向对象初级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第七章-面向对象初级"}},[_._v("#")]),_._v(" 第七章  面向对象初级")]),_._v(" "),v("h3",{attrs:{id:"_191-类与对象的引出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_191-类与对象的引出"}},[_._v("#")]),_._v(" 191 类与对象的引出")]),_._v(" "),v("h3",{attrs:{id:"_192-类与对象的关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_192-类与对象的关系"}},[_._v("#")]),_._v(" 192 类与对象的关系")]),_._v(" "),v("p",[_._v("类是抽象的概念的，它是数据类型")]),_._v(" "),v("p",[_._v("对象是具体的实际的，它是实例")]),_._v(" "),v("p",[_._v("类时对象的模板，对象是类的一个个体，对应一个实例")]),_._v(" "),v("h3",{attrs:{id:"_193-类与对象的概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_193-类与对象的概述"}},[_._v("#")]),_._v(" 193 类与对象的概述")]),_._v(" "),v("h3",{attrs:{id:"_194-对象内存布局"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_194-对象内存布局"}},[_._v("#")]),_._v(" 194 对象内存布局")]),_._v(" "),v("p",[_._v("栈：一般存放基本数据类型（局部变量）")]),_._v(" "),v("p",[_._v("堆：存放对象")]),_._v(" "),v("p",[_._v("方法区：常量池、类加载信息")]),_._v(" "),v("h3",{attrs:{id:"_195-196属性概念-注意细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_195-196属性概念-注意细节"}},[_._v("#")]),_._v(" 195 196属性概念 注意细节")]),_._v(" "),v("ul",[v("li",[_._v("访问修饰符")])]),_._v(" "),v("h3",{attrs:{id:"_197-创建对象访问属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_197-创建对象访问属性"}},[_._v("#")]),_._v(" 197 创建对象访问属性")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("先声明再创建")])]),_._v(" "),v("li",[v("p",[_._v("直接创建")])]),_._v(" "),v("li",[v("p",[_._v("访问 对象名.属性名")])])]),_._v(" "),v("h3",{attrs:{id:"_198-对象分配机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_198-对象分配机制"}},[_._v("#")]),_._v(" 198 对象分配机制")]),_._v(" "),v("h3",{attrs:{id:"_199-对象创建过程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_199-对象创建过程"}},[_._v("#")]),_._v(" 199 对象创建过程")]),_._v(" "),v("h3",{attrs:{id:"_200-对象机制练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_200-对象机制练习"}},[_._v("#")]),_._v(" 200 对象机制练习")]),_._v(" "),v("ul",[v("li",[_._v("空指针异常")])]),_._v(" "),v("h3",{attrs:{id:"_201-202-方法快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_201-202-方法快速入门"}},[_._v("#")]),_._v(" 201 202 方法快速入门")]),_._v(" "),v("h3",{attrs:{id:"_203-方法的调用机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_203-方法的调用机制"}},[_._v("#")]),_._v(" 203 方法的调用机制")]),_._v(" "),v("h3",{attrs:{id:"_204-方法的妙用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_204-方法的妙用"}},[_._v("#")]),_._v(" 204 方法的妙用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("解决代码冗余")])]),_._v(" "),v("li",[v("p",[_._v("提高代码的复用性")])]),_._v(" "),v("li",[v("p",[_._v("可以将实现的细节封装起来，供其他用户调用即可")])])]),_._v(" "),v("h3",{attrs:{id:"_205-成员方法的定义"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_205-成员方法的定义"}},[_._v("#")]),_._v(" 205 成员方法的定义")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("访问修饰符")])]),_._v(" "),v("li",[v("p",[_._v("返回数据类型")])]),_._v(" "),v("li",[v("p",[_._v("方法名")])]),_._v(" "),v("li",[v("p",[_._v("形参列表")])]),_._v(" "),v("li",[v("p",[_._v("返回值")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("void没有返回值")])]),_._v(" "),v("li",[v("p",[_._v("有return不用void")])])])])]),_._v(" "),v("h3",{attrs:{id:"_206-207-208方法使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_206-207-208方法使用细节"}},[_._v("#")]),_._v(" 206 207 208方法使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("访问修饰符 四种")])]),_._v(" "),v("li",[v("p",[_._v("返回类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("一个方法一个返回值")])]),_._v(" "),v("li",[v("p",[_._v("返回类型可以为任意类型")])]),_._v(" "),v("li",[v("p",[_._v("如果方法要求有返回数据类型，则方法题中最后执行的语句必须为return值，而且要求返回值类型必须和return的值类型一致或兼容")])]),_._v(" "),v("li",[v("p",[_._v("void")])])])])]),_._v(" "),v("h3",{attrs:{id:"_209-成员方法-类定义完善"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_209-成员方法-类定义完善"}},[_._v("#")]),_._v(" 209 成员方法 类定义完善")]),_._v(" "),v("h3",{attrs:{id:"_210-211方法传参机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_210-211方法传参机制"}},[_._v("#")]),_._v(" 210 211方法传参机制")]),_._v(" "),v("h3",{attrs:{id:"_213-克隆对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_213-克隆对象"}},[_._v("#")]),_._v(" 213 克隆对象")]),_._v(" "),v("h3",{attrs:{id:"_214-递归解决什么问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_214-递归解决什么问题"}},[_._v("#")]),_._v(" 214 递归解决什么问题")]),_._v(" "),v("h3",{attrs:{id:"_215-216-217-218递归执行机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_215-216-217-218递归执行机制"}},[_._v("#")]),_._v(" 215 216 217 218递归执行机制")]),_._v(" "),v("h3",{attrs:{id:"_219-递归斐波那契"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_219-递归斐波那契"}},[_._v("#")]),_._v(" 219 递归斐波那契")]),_._v(" "),v("h3",{attrs:{id:"_220-猴子吃桃"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_220-猴子吃桃"}},[_._v("#")]),_._v(" 220 猴子吃桃")]),_._v(" "),v("h3",{attrs:{id:"_221-222-223-224-老鼠出迷宫"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_221-222-223-224-老鼠出迷宫"}},[_._v("#")]),_._v(" 221 222 223 224 老鼠出迷宫")]),_._v(" "),v("h3",{attrs:{id:"_225-汉诺塔"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_225-汉诺塔"}},[_._v("#")]),_._v(" 225 汉诺塔")]),_._v(" "),v("h3",{attrs:{id:"_226-八皇后"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_226-八皇后"}},[_._v("#")]),_._v(" 226 八皇后")]),_._v(" "),v("h3",{attrs:{id:"_227-重载overload"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_227-重载overload"}},[_._v("#")]),_._v(" 227 重载overload")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java允许同一个类中，多个同名方法的存在，但要求形参列表不一致")])]),_._v(" "),v("li",[v("p",[_._v("System.out.println(); out 是 PrintStream 类型")])]),_._v(" "),v("li",[v("p",[_._v("减轻了起名 记名的麻烦")])])]),_._v(" "),v("h3",{attrs:{id:"_228-重载快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_228-重载快速入门"}},[_._v("#")]),_._v(" 228 重载快速入门")]),_._v(" "),v("h3",{attrs:{id:"_229-重载注意细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_229-重载注意细节"}},[_._v("#")]),_._v(" 229 重载注意细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("方法名必须相同")])]),_._v(" "),v("li",[v("p",[_._v("形参列表必须不同（形参类型和个数或顺序，至少有一样不同，参数名无要求）")])]),_._v(" "),v("li",[v("p",[_._v("返回类型没有要求")])])]),_._v(" "),v("h3",{attrs:{id:"_230-231-232重载练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_230-231-232重载练习"}},[_._v("#")]),_._v(" 230 231 232重载练习")]),_._v(" "),v("h3",{attrs:{id:"_233-可变参数的使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_233-可变参数的使用"}},[_._v("#")]),_._v(" 233 可变参数的使用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java允许将同一个类中多个同名同功能但参数个数不同的方法，封装成一个方法")])]),_._v(" "),v("li",[v("p",[_._v("基本语法 访问修饰符 返回类型 方法名{数据类型... 形参名}")])])]),_._v(" "),v("h3",{attrs:{id:"_234-235可变参数细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_234-235可变参数细节"}},[_._v("#")]),_._v(" 234 235可变参数细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("可变参数的实参个数不定 0-n")])]),_._v(" "),v("li",[v("p",[_._v("可变参数的实参可以为数组")])]),_._v(" "),v("li",[v("p",[_._v("可变参数的本质就是数组")])]),_._v(" "),v("li",[v("p",[_._v("可变参数可以和普通类型的参数一起放在形参列表，但必须保证可变参数在最后")])]),_._v(" "),v("li",[v("p",[_._v("一个形参列表中只能出现一个可变参数")])])]),_._v(" "),v("h3",{attrs:{id:"_236-作用域"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_236-作用域"}},[_._v("#")]),_._v(" 236 作用域")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("scope 变量作用域")])]),_._v(" "),v("li",[v("p",[_._v("局部变量一般指在成员方法中定义的变量，也就是除了属性之外的其他变量，作用域为定义它的代码块中")])]),_._v(" "),v("li",[v("p",[_._v("java中的全局变量 也就是属性 作用域为整个类体")])]),_._v(" "),v("li",[v("p",[_._v("全局变量可以不赋值，直接使用，因为有默认值，局部变量必须赋值后，才能使用，因为没有默认值")])])]),_._v(" "),v("h3",{attrs:{id:"_237-238作用域的使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_237-238作用域的使用细节"}},[_._v("#")]),_._v(" 237 238作用域的使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("属性和变量可以同名，满足就近原则")])]),_._v(" "),v("li",[v("p",[_._v("在同一个作用域中，比如同一个成员方法中，两个局部变量，不能重名")])]),_._v(" "),v("li",[v("p",[_._v("属性生命周期较长，伴随着对象")])]),_._v(" "),v("li",[v("p",[_._v("局部变量的生命周期较短，伴随着它的代码块，即在一次方法调用过程中")])]),_._v(" "),v("li",[v("p",[_._v("作用域的范围不同")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("全局变量 可以被本类使用，或者被其他类使用（通过对象调用）")])]),_._v(" "),v("li",[v("p",[_._v("局部变量 只能在本类中对应的方法中使用")])])])]),_._v(" "),v("li",[v("p",[_._v("修饰符不同")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("全局变量可以加修饰符")])]),_._v(" "),v("li",[v("p",[_._v("局部变量不可以加修饰符")])])])])]),_._v(" "),v("h3",{attrs:{id:"_239-240构造器-构造方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_239-240构造器-构造方法"}},[_._v("#")]),_._v(" 239 240构造器 构造方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("创建人类对象时，直接指定这个对象的年龄和姓名")])]),_._v(" "),v("li",[v("p",[_._v("修饰符 方法名（形参列表）{方法体}")])]),_._v(" "),v("li",[v("p",[_._v("构造器的修饰符可以默认")])]),_._v(" "),v("li",[v("p",[_._v("构造器没有返回值")])]),_._v(" "),v("li",[v("p",[_._v("方法名 和 类名字必须一样")])]),_._v(" "),v("li",[v("p",[_._v("参数列表和成员方法一样的规则")])]),_._v(" "),v("li",[v("p",[_._v("构造器的调用系统完成")])]),_._v(" "),v("li",[v("p",[_._v("新对象的初始化")]),_._v(" "),v("ul",[v("li",[_._v("类的一种特殊方法，主要作用是完成新对象的初始化")])])])]),_._v(" "),v("h3",{attrs:{id:"_241-242-243构造器使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_241-242-243构造器使用细节"}},[_._v("#")]),_._v(" 241 242 243构造器使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("一个类可以定义多个不同的构造器，即构造器重载")])]),_._v(" "),v("li",[v("p",[_._v("在创建对象时，系统自动的调用该类的构造方法")])]),_._v(" "),v("li",[v("p",[_._v("构造器不能像成员方法一样直接调用")])]),_._v(" "),v("li",[v("p",[_._v("如果程序员没有定义构造器，系统会自动给类生成一个默认的无参构造器，反编译给你搂一把")])]),_._v(" "),v("li",[v("p",[_._v("一旦定义了自己的构造器，默认的构造器就覆盖了")])])]),_._v(" "),v("h3",{attrs:{id:"_244-对象创建流程详解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_244-对象创建流程详解"}},[_._v("#")]),_._v(" 244 对象创建流程详解")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("面试题")]),_._v(" "),v("ul",[v("li",[_._v("加载person类信息，只会加载一次\n"),v("ul",[v("li",[_._v("在堆中分配空间（地址） 完成对象初始化 默认初始化 显示初始化 构造器的初始化 在对象在堆中的地址返回给p p是对象名")])])])])]),_._v(" "),v("li",[v("p",[_._v("栈 堆 方法区 常量池")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("堆默认初始化，而不是创建对象")])]),_._v(" "),v("li",[v("p",[_._v("对象在堆里 栈里的p是对象的引用")])])])])]),_._v(" "),v("h3",{attrs:{id:"_245-引出this"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_245-引出this"}},[_._v("#")]),_._v(" 245 引出this")]),_._v(" "),v("h3",{attrs:{id:"_246-this入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_246-this入门"}},[_._v("#")]),_._v(" 246 this入门")]),_._v(" "),v("ul",[v("li",[_._v("java虚拟机会给每个对象分配this，代表当前对象，代词")])]),_._v(" "),v("h3",{attrs:{id:"_247-this本质"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_247-this本质"}},[_._v("#")]),_._v(" 247 this本质")]),_._v(" "),v("ul",[v("li",[_._v("this 隐藏的 指向自己")])]),_._v(" "),v("h3",{attrs:{id:"_248-this小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_248-this小结"}},[_._v("#")]),_._v(" 248 this小结")]),_._v(" "),v("h3",{attrs:{id:"_249-this使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_249-this使用细节"}},[_._v("#")]),_._v(" 249 this使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("this关键字可以用来访问本类的属性、方法、构造器")])]),_._v(" "),v("li",[v("p",[_._v("this用于区分当前类的局部变量和属性")])]),_._v(" "),v("li",[v("p",[_._v("访问成员方法的语法：this.方法名（参数列表）；")])]),_._v(" "),v("li",[v("p",[_._v("访问构造器语法：this（参数列表）；注意只能在构造器中使用")])]),_._v(" "),v("li",[v("p",[_._v("this不能在类定义的外部使用。只能在类定义的方法中使用")])])]),_._v(" "),v("h3",{attrs:{id:"_250-this练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_250-this练习"}},[_._v("#")]),_._v(" 250 this练习")]),_._v(" "),v("h3",{attrs:{id:"_251-252-253-254-255-256-257-258-259-260-261-作业"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_251-252-253-254-255-256-257-258-259-260-261-作业"}},[_._v("#")]),_._v(" 251 252 253 254 255 256 257 258 259 260 261 作业")]),_._v(" "),v("h3",{attrs:{id:"_257"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_257"}},[_._v("#")]),_._v(" 257")]),_._v(" "),v("p",[_._v("new Test（）.count1（）匿名对象 没有名字的对象 只能用一次 然后销毁")]),_._v(" "),v("ul",[v("li",[_._v("257 10 9 10")])]),_._v(" "),v("h3",{attrs:{id:"_262-内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_262-内容梳理"}},[_._v("#")]),_._v(" 262 内容梳理")]),_._v(" "),v("p",[_._v("眼高手低")]),_._v(" "),v("h2",{attrs:{id:"第八章-面向对象中级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第八章-面向对象中级"}},[_._v("#")]),_._v(" 第八章 面向对象中级")]),_._v(" "),v("h3",{attrs:{id:"_263-264-idea"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_263-264-idea"}},[_._v("#")]),_._v(" 263 264 idea")]),_._v(" "),v("h3",{attrs:{id:"_265-266-267-idea使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_265-266-267-idea使用"}},[_._v("#")]),_._v(" 265 266 267 idea使用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("文件储存")])]),_._v(" "),v("li",[v("p",[_._v("设置字体")])])]),_._v(" "),v("h3",{attrs:{id:"_268-269-270-idea快捷键"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_268-269-270-idea快捷键"}},[_._v("#")]),_._v(" 268 269 270 idea快捷键")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("删除当前行 ctrl+y")])]),_._v(" "),v("li",[v("p",[_._v("复制当前行 ctrl+d")])]),_._v(" "),v("li",[v("p",[_._v("main 直接打印一个主方法")])]),_._v(" "),v("li",[v("p",[_._v("sout 直接输出")])]),_._v(" "),v("li",[v("p",[_._v("补全代码键 alt+ /")])]),_._v(" "),v("li",[v("p",[_._v("添加注释ctrl + /")])]),_._v(" "),v("li",[v("p",[_._v("快速格式化 ctrl + shift +L")])]),_._v(" "),v("li",[v("p",[_._v("快速运行")])]),_._v(" "),v("li",[v("p",[_._v("生成构造器 alt + insert")])]),_._v(" "),v("li",[v("p",[_._v("查看一个类的层级关系 ctrl + H")])]),_._v(" "),v("li",[v("p",[_._v("找到方法 ctrl + B/鼠标左键")])]),_._v(" "),v("li",[v("p",[_._v("自动分配变量名 .var")])]),_._v(" "),v("li",[v("p",[_._v("还有其他快捷键")])])]),_._v(" "),v("h3",{attrs:{id:"_271-idea模板"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_271-idea模板"}},[_._v("#")]),_._v(" 271 idea模板")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("自定义模板 高效完成开发")])]),_._v(" "),v("li",[v("p",[_._v("sout")])]),_._v(" "),v("li",[v("p",[_._v("fori")])])]),_._v(" "),v("h3",{attrs:{id:"_272-包基本介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_272-包基本介绍"}},[_._v("#")]),_._v(" 272 包基本介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("区分相同名字的类")])]),_._v(" "),v("li",[v("p",[_._v("当类很多是，可以很好的管理类")])]),_._v(" "),v("li",[v("p",[_._v("控制访问范围")])]),_._v(" "),v("li",[v("p",[_._v("基本语法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("package com.hspedu")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("package 关键字，表示打爆")])]),_._v(" "),v("li",[v("p",[_._v("com.hspedu 表示包名")])])])])])])]),_._v(" "),v("h3",{attrs:{id:"_273-包原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_273-包原理"}},[_._v("#")]),_._v(" 273 包原理")]),_._v(" "),v("ul",[v("li",[_._v("实际上就是创建不同的文件夹/目录来保存类文件")])]),_._v(" "),v("h3",{attrs:{id:"_274-包快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_274-包快速入门"}},[_._v("#")]),_._v(" 274 包快速入门")]),_._v(" "),v("h3",{attrs:{id:"_275-包的命名"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_275-包的命名"}},[_._v("#")]),_._v(" 275 包的命名")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("只能包含数字、字母、下划线、小圆点 不能数字开头，不能是关键字或保留字")])]),_._v(" "),v("li",[v("p",[_._v("com.公司名.项目名.业务模块名")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("com.sina.crm.user")])]),_._v(" "),v("li",[v("p",[_._v("com.hspedu.oa.model")])])])])]),_._v(" "),v("h3",{attrs:{id:"_276-常用的包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_276-常用的包"}},[_._v("#")]),_._v(" 276 常用的包")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java.lang.* 基本包，默认引入，不需要在引入")])]),_._v(" "),v("li",[v("p",[_._v("java.util.* util包，系统提供的工具包，工具类，使用scanner")])]),_._v(" "),v("li",[v("p",[_._v("java.net.* 网络包 网络开发")])]),_._v(" "),v("li",[v("p",[_._v("java.awt.* java的界面开发，GUI")])])]),_._v(" "),v("h3",{attrs:{id:"_277-如何引入包"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_277-如何引入包"}},[_._v("#")]),_._v(" 277 如何引入包")]),_._v(" "),v("p",[_._v("类定义逐渐完善")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("import 用什么导入什么")])]),_._v(" "),v("li",[v("p",[_._v("package的作用是声明当前类所在的包，需要放在类的最上面，一个类中最多只有一句package")])]),_._v(" "),v("li",[v("p",[_._v("import指令 位置放在package的下面，在类定义前面，可以有多句没有顺序要求")])]),_._v(" "),v("li",[v("p",[_._v("package import class parameter method constructor")]),_._v(" "),v("ul",[v("li",[_._v("包 引入 类 成员类型 构造器 成员方法")])])])]),_._v(" "),v("h3",{attrs:{id:"_278-访问修饰符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_278-访问修饰符"}},[_._v("#")]),_._v(" 278 访问修饰符")]),_._v(" "),v("p",[_._v("同类 同包 子类 不同包")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java提供四种访问控制修饰符号，用于控制方法和属性的访问权限")])]),_._v(" "),v("li",[v("p",[_._v("公开级别 public 对外公开")])]),_._v(" "),v("li",[v("p",[_._v("受保护级别 protected 对子类和同一个包中的类公开")])]),_._v(" "),v("li",[v("p",[_._v("默认级别 向同一个包的类公开")])]),_._v(" "),v("li",[v("p",[_._v("私有级别 用private修饰 只有类本身可以访问 不对外公开")])])]),_._v(" "),v("h3",{attrs:{id:"_279-访问修饰符细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_279-访问修饰符细节"}},[_._v("#")]),_._v(" 279 访问修饰符细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("修饰符可以用来修饰类中的属性 成员方法 以及 类")])]),_._v(" "),v("li",[v("p",[_._v("只有默认的 和 public 才能修饰类 并且遵循上述 访问权限的特点")])]),_._v(" "),v("li",[v("p",[_._v("学习继承后 才能讲子类")])]),_._v(" "),v("li",[v("p",[_._v("成员方法的访问规则和属性完全一样")])])]),_._v(" "),v("h3",{attrs:{id:"_280-封装介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_280-封装介绍"}},[_._v("#")]),_._v(" 280 封装介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("面向对象的变成三大特征")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("封装 encapsulation")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("把抽象出的数据（属性）和对数据的操作（方法）封装在一起，数据被保护在内部，程序的其他部分只有通过授权的操作（方法），才能对数据进行操作\n对电视机的操作就是典型的封装")])]),_._v(" "),v("li",[v("p",[_._v("隐藏实现细节 方法（连接数据库） <- 调用（传入参数）")])]),_._v(" "),v("li",[v("p",[_._v("可以对数据进行验证，保证安全合理")])])])]),_._v(" "),v("li",[v("p",[_._v("继承")])]),_._v(" "),v("li",[v("p",[_._v("多态")])])])])]),_._v(" "),v("h3",{attrs:{id:"_281-封装步骤"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_281-封装步骤"}},[_._v("#")]),_._v(" 281 封装步骤")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("将属性进行私有化private 不能直接修改属性")])]),_._v(" "),v("li",[v("p",[_._v("提供一个公共的public set方法 用于对属性判断并赋值public void setxxx 类型 参数名 {xxx表示某个属性 加入数据验证业务罗家集\n属性 = 参数名")])]),_._v(" "),v("li",[v("p",[_._v("提供一个公共的 get 用于获取属性的值 public 数据类型 getxxx {权限判断 ，xxx 某个属性 return xx；}")])])]),_._v(" "),v("h3",{attrs:{id:"_282-封装快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_282-封装快速入门"}},[_._v("#")]),_._v(" 282 封装快速入门")]),_._v(" "),v("ul",[v("li",[_._v("java报错 一个有关于对象的问题")])]),_._v(" "),v("h3",{attrs:{id:"_283封装和构造器"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_283封装和构造器"}},[_._v("#")]),_._v(" 283封装和构造器")]),_._v(" "),v("h3",{attrs:{id:"_284-封装课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_284-封装课堂练习"}},[_._v("#")]),_._v(" 284 封装课堂练习")]),_._v(" "),v("h3",{attrs:{id:"_285-为什么需要继承"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_285-为什么需要继承"}},[_._v("#")]),_._v(" 285 为什么需要继承")]),_._v(" "),v("ul",[v("li",[_._v("继承解决代码的复用性")])]),_._v(" "),v("h3",{attrs:{id:"_286-继承原理图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_286-继承原理图"}},[_._v("#")]),_._v(" 286 继承原理图")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("多个类存在形同的属性和方法时，可以从这些类中抽象出父类，在父类中定义这些相同的属性和方法，所有子类不需要重新定义这些属性和方法，只需要通过extends来声明继承父类即可")])]),_._v(" "),v("li",[v("p",[_._v("父类 基类 超类")]),_._v(" "),v("ul",[v("li",[_._v("子类 派生类\n"),v("ul",[v("li",[_._v("还能接着继承")])])])])]),_._v(" "),v("li",[v("p",[_._v("class 子类 extends 父类{}")])])]),_._v(" "),v("h3",{attrs:{id:"_287-继承快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_287-继承快速入门"}},[_._v("#")]),_._v(" 287 继承快速入门")]),_._v(" "),v("h3",{attrs:{id:"_288-289-290-291-292继承细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_288-289-290-291-292继承细节"}},[_._v("#")]),_._v(" 288 289 290 291 292继承细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("子类继承了所有的属性和方法，私有属性和方法不能在子类直接访问，可以通过父类提供公共的方法去访问")])]),_._v(" "),v("li",[v("p",[_._v("子类必须调用父类的构造器，完成父类的初始化")])]),_._v(" "),v("li",[v("p",[_._v("当创建子类对象时，不管使用子类的哪个构造器，默认情况下总会去调用父类的无参构造器，则必须在子类的构造器中用super去指定使用父类的哪个构造器完成对父类的初始化工作，否则编译不会通过")])]),_._v(" "),v("li",[v("p",[_._v("如果希望指定去调用父类的某个构造器，则 显示的调用一下：super（参数列表）")])]),_._v(" "),v("li",[v("p",[_._v("super必须放在子类构造器的第一行 只能在构造器中使用")])]),_._v(" "),v("li",[v("p",[_._v("super和this都只能放在构造器第一行，因此两个方法不能共存在一个构造器")])]),_._v(" "),v("li",[v("p",[_._v("java所有类都是object子类，object是所有类的基类")])]),_._v(" "),v("li",[v("p",[_._v("父类构造器的调用不限于直接父类！将一直往上追溯知道object类，顶级父类")])]),_._v(" "),v("li",[v("p",[_._v("子类最多只能继承一个父类 直接继承 java中是单继承机制")])]),_._v(" "),v("li",[v("p",[_._v("不能滥用继承，子类和父类之间必须满足is a的逻辑关系")])])]),_._v(" "),v("h3",{attrs:{id:"_293-继承本质"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_293-继承本质"}},[_._v("#")]),_._v(" 293 继承本质")]),_._v(" "),v("ul",[v("li",[_._v("当子类对象创建好后，建立查找的关系")])]),_._v(" "),v("h3",{attrs:{id:"_294-295-296继承练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_294-295-296继承练习"}},[_._v("#")]),_._v(" 294 295 296继承练习")]),_._v(" "),v("h3",{attrs:{id:"_297-super基本语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_297-super基本语法"}},[_._v("#")]),_._v(" 297 super基本语法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("super代表父类的引用，用于访问父类的属性、方法、构造器")])]),_._v(" "),v("li",[v("p",[_._v("访问父类的属性，但不能访问父类的私有属性 super.属性名")])]),_._v(" "),v("li",[v("p",[_._v("访问父类的方法，同上")])]),_._v(" "),v("li",[v("p",[_._v("访问父类的构造器")])])]),_._v(" "),v("h3",{attrs:{id:"_298-299-300-super使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_298-299-300-super使用细节"}},[_._v("#")]),_._v(" 298 299 300 super使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("调用父类的构造器好处 分工明确 父类属性由父类初始化 子类的属性由子类初始化")])]),_._v(" "),v("li",[v("p",[_._v("当子类中和父类中的成员重名时，是为了访问父类的成员，必须通过super。如果没有重名，使用super，this，直接访问是一样的结果")])]),_._v(" "),v("li",[v("p",[_._v("super的访问不限于直接父类 爷爷类也可以 多个基类同名 使用super访问遵循就近原则")])]),_._v(" "),v("li",[v("p",[_._v("super 和 this的区别")])])]),_._v(" "),v("h3",{attrs:{id:"_301-方法重写-覆盖"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_301-方法重写-覆盖"}},[_._v("#")]),_._v(" 301 方法重写 覆盖")]),_._v(" "),v("ul",[v("li",[_._v("解释子类有一个方法，和父类的某个方法名称、返回类型、参数一样、我们就说子类这个方法覆盖父类的方法")])]),_._v(" "),v("h3",{attrs:{id:"_302-方法重写的细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_302-方法重写的细节"}},[_._v("#")]),_._v(" 302 方法重写的细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("子类的方法参数，方法名称要和父类方法的都一样")])]),_._v(" "),v("li",[v("p",[_._v("子类方法的返回类型和父类方法返回类型一样，或者是父类返回类型的子类，比如 父类 object 子类 String")])]),_._v(" "),v("li",[v("p",[_._v("子类方法不能缩小父类方法的访问权限")])])]),_._v(" "),v("h3",{attrs:{id:"_303-304重写课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_303-304重写课堂练习"}},[_._v("#")]),_._v(" 303 304重写课堂练习")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("重载")]),_._v(" "),v("ul",[v("li",[_._v("本类 方法名必须一样\n"),v("ul",[v("li",[_._v("形参列表 个数或者顺序至少有一个不同\n"),v("ul",[v("li",[_._v("返回类型 无要求\n"),v("ul",[v("li",[_._v("修饰符 无要求")])])])])])])])])]),_._v(" "),v("li",[v("p",[_._v("重写")]),_._v(" "),v("ul",[v("li",[_._v("父子类 方法名必须一样\n"),v("ul",[v("li",[_._v("同上\n"),v("ul",[v("li",[_._v("子类重写的方法，返回类型和父类返回的类型一致，或者是子类\n"),v("ul",[v("li",[_._v("子类方法不能缩小父类方法")])])])])])])])])])]),_._v(" "),v("h3",{attrs:{id:"_305-养宠物引出多态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_305-养宠物引出多态"}},[_._v("#")]),_._v(" 305 养宠物引出多态")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("polymorphic 多态的")])]),_._v(" "),v("li",[v("p",[_._v("提高代码的复用性")])])]),_._v(" "),v("h3",{attrs:{id:"_306-方法的多态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_306-方法的多态"}},[_._v("#")]),_._v(" 306 方法的多态")]),_._v(" "),v("ul",[v("li",[_._v("方法或对象具有多种形态，是面向对象的第三大特征，多态是建立在封装和继承基础上的")])]),_._v(" "),v("h3",{attrs:{id:"_307-对象的多态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_307-对象的多态"}},[_._v("#")]),_._v(" 307 对象的多态")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("一个对象的编译类型和运行类型可以不一致")])]),_._v(" "),v("li",[v("p",[_._v("编译类型在定义对象时，就确定了，不能改变")]),_._v(" "),v("ul",[v("li",[_._v("左父 右子")])])]),_._v(" "),v("li",[v("p",[_._v("运行类型是可以变化的")])]),_._v(" "),v("li",[v("p",[_._v("编译类型看定义时 = 号 的 左边，运行类型 = 号的右边")]),_._v(" "),v("ul",[v("li",[_._v("父类的引用指向子类的对象")])])])]),_._v(" "),v("h3",{attrs:{id:"_308-多态快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_308-多态快速入门"}},[_._v("#")]),_._v(" 308 多态快速入门")]),_._v(" "),v("h3",{attrs:{id:"_309-向上转型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_309-向上转型"}},[_._v("#")]),_._v(" 309 向上转型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("两个对象 类 存在继承关系")])]),_._v(" "),v("li",[v("p",[_._v("多态的向上转型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("本质 父类引用指向了子类的对象")])]),_._v(" "),v("li",[v("p",[_._v("语法 父类类型 引用名 = new 子类类型名（）；")])]),_._v(" "),v("li",[v("p",[_._v("特点 编译类型看左边，运行类型看右边")])]),_._v(" "),v("li",[v("p",[_._v("可以调用父类中所有成员 需遵守访问权限 不能调用子类中特有成员")])]),_._v(" "),v("li",[v("p",[_._v("最终运行效果看子类的具体实现")])])])])]),_._v(" "),v("h3",{attrs:{id:"_310-向下转型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_310-向下转型"}},[_._v("#")]),_._v(" 310 向下转型")]),_._v(" "),v("p",[_._v("引用 对象")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("语法 子类类型 引用名 = （子类类型）父类引用")])]),_._v(" "),v("li",[v("p",[_._v("只能强转父类的引用，不能强转父类的对象")])]),_._v(" "),v("li",[v("p",[_._v("要求父类的引用必须指向的是当前目标类型的对象")])]),_._v(" "),v("li",[v("p",[_._v("可以调用子类类型的所有成员")])])]),_._v(" "),v("h3",{attrs:{id:"_311-属性重写问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_311-属性重写问题"}},[_._v("#")]),_._v(" 311 属性重写问题")]),_._v(" "),v("p",[_._v("编译 运行")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("属性没有重写之说")])]),_._v(" "),v("li",[v("p",[_._v("instance Of 比较操作符，用于判断对象的类型是否为XX类型或XX类型的子类型")])])]),_._v(" "),v("h3",{attrs:{id:"_312-313-多态练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_312-313-多态练习"}},[_._v("#")]),_._v(" 312 313 多态练习")]),_._v(" "),v("h3",{attrs:{id:"_314-动态绑定机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_314-动态绑定机制"}},[_._v("#")]),_._v(" 314 动态绑定机制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当调用对象方法时，该方法会和该对象的内存地址，运行类型绑定")])]),_._v(" "),v("li",[v("p",[_._v("当调用对象属性时，没有动态绑定机制，哪里声明，哪里使用")])])]),_._v(" "),v("h3",{attrs:{id:"_315-316多态数组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_315-316多态数组"}},[_._v("#")]),_._v(" 315 316多态数组")]),_._v(" "),v("h3",{attrs:{id:"_317-多态参数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_317-多态参数"}},[_._v("#")]),_._v(" 317 多态参数")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("方法定义的形参类型为父类类型，实参类型允许为子类类型")])]),_._v(" "),v("li",[v("p",[_._v("实例1 前面的主人喂食动物")])]),_._v(" "),v("li",[v("p",[_._v("实例2 经理和员工")])])]),_._v(" "),v("h3",{attrs:{id:"_318-object类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_318-object类"}},[_._v("#")]),_._v(" 318 object类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("clone equals finalize getclass hashcode notifyall tostring wait")])]),_._v(" "),v("li",[v("p",[_._v("以上都是方法")])]),_._v(" "),v("li",[v("p",[_._v("equals 和 == 的对比 面试题")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("==既可以判断基本类型又可以判断引用类型")])]),_._v(" "),v("li",[v("p",[_._v("==如果判断基本类型，判断的值是否相等")])]),_._v(" "),v("li",[v("p",[_._v("==如果判断引用类型，判断的是地址是否相等")])])])])]),_._v(" "),v("h3",{attrs:{id:"_319-查看jdk源码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_319-查看jdk源码"}},[_._v("#")]),_._v(" 319 查看jdk源码")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("equals是object类中的方法，只能判断引用类型")])]),_._v(" "),v("li",[v("p",[_._v("默认判断的是地址是否相等，子类中往往重写该方法")])])]),_._v(" "),v("h3",{attrs:{id:"_320-子类重写equals"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_320-子类重写equals"}},[_._v("#")]),_._v(" 320 子类重写equals")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("查看 object源码 值或者地址")])]),_._v(" "),v("li",[v("p",[_._v("数据类型 比较值是否相等 方法是重写了的")])])]),_._v(" "),v("h3",{attrs:{id:"_321-322-323-equals练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_321-322-323-equals练习"}},[_._v("#")]),_._v(" 321 322 323 equals练习")]),_._v(" "),v("h3",{attrs:{id:"_324-hashcode"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_324-hashcode"}},[_._v("#")]),_._v(" 324 hashcode")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("提高具有哈希结构的容器的效率")])]),_._v(" "),v("li",[v("p",[_._v("两个引用，如果指向同一个对象，则哈希值肯定是不一样的")])]),_._v(" "),v("li",[v("p",[_._v("如果指向的是不同对象，哈希值不一样")])]),_._v(" "),v("li",[v("p",[_._v("哈希值主要是根据地址号来的，不能完全将哈希值等价于地址")])]),_._v(" "),v("li",[v("p",[_._v("案例演示")])]),_._v(" "),v("li",[v("p",[_._v("后面在集合中 hashcode如果有需要的话，也会重写")])])]),_._v(" "),v("h3",{attrs:{id:"_325-tostring"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_325-tostring"}},[_._v("#")]),_._v(" 325 tostring")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("全类名+@+哈希值的十六进制 子类往往重写toString方法，由于返回对象的属性值")])]),_._v(" "),v("li",[v("p",[_._v("重写toString方法 把对象的属性值输出 当然程序员也能自己定义")])]),_._v(" "),v("li",[v("p",[_._v("当我们直接输出一个对象时，tostring方法会被调用")])])]),_._v(" "),v("h3",{attrs:{id:"_326-finalize"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_326-finalize"}},[_._v("#")]),_._v(" 326 finalize")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当对象被回收时，系统自动调用该对象的finalize方法，子类可以重写该方法，做一些释放资源的操作")])]),_._v(" "),v("li",[v("p",[_._v("什么时候被回收：当某个对象没有任何引用时，则jvm就认为这个对象时一个垃圾对象，就会使用垃圾回收机制来销毁该对象，在销毁该对象前，会调用finalize方法")])]),_._v(" "),v("li",[v("p",[_._v("垃圾回收机制的调用，是由系统来决定，也可以通过System.gc()主动触发回收机制 测试car（）")])])]),_._v(" "),v("h3",{attrs:{id:"_327-断点调试介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_327-断点调试介绍"}},[_._v("#")]),_._v(" 327 断点调试介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("断点调试过程中，是运行状态，是以对象的运行类型来执行的")])]),_._v(" "),v("li",[v("p",[_._v("断点调试 是指某一行设置一个断点，调试时，程序运行到这一行就会停住")])]),_._v(" "),v("li",[v("p",[_._v("快捷键")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("f7 跳入")])]),_._v(" "),v("li",[v("p",[_._v("f8 跳过")])]),_._v(" "),v("li",[v("p",[_._v("f9 执行到下一个断点")])]),_._v(" "),v("li",[v("p",[_._v("shift + f8跳出方法")])])])]),_._v(" "),v("li",[v("p",[_._v("代码执行区 变量区 控制 下一个断点 console切换到输出控制台 调试器情况")])])]),_._v(" "),v("h3",{attrs:{id:"_328-debug1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_328-debug1"}},[_._v("#")]),_._v(" 328 debug1")]),_._v(" "),v("ul",[v("li",[_._v("右键选择调试debug fn+f8")])]),_._v(" "),v("h3",{attrs:{id:"_329-debug2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_329-debug2"}},[_._v("#")]),_._v(" 329 debug2")]),_._v(" "),v("ul",[v("li",[_._v("发生异常后的调试 可以自己下断点")])]),_._v(" "),v("h3",{attrs:{id:"_330-debug3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_330-debug3"}},[_._v("#")]),_._v(" 330 debug3")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("如何追源码，看看java设计者怎么实现的")])]),_._v(" "),v("li",[v("p",[_._v("将光标放在某个变量上，可以看到最新的数据")])]),_._v(" "),v("li",[v("p",[_._v("强制进入 alt + shift + f7")]),_._v(" "),v("ul",[v("li",[_._v("红色向下箭头 + 横杠")])])]),_._v(" "),v("li",[v("p",[_._v("构造器 debug 取消勾选 按步进一步步进入底层源码 f7")])]),_._v(" "),v("li",[v("p",[_._v("回到上一级方法的代码的下一行 shift + f8")])]),_._v(" "),v("li",[v("p",[_._v("7进8出")])])]),_._v(" "),v("h3",{attrs:{id:"_331-debug4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_331-debug4"}},[_._v("#")]),_._v(" 331 debug4")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("进入到下一个断点 f9")])]),_._v(" "),v("li",[v("p",[_._v("两个断点，动态的给自己的代码下断点，也可以给系统下断点")])]),_._v(" "),v("li",[v("p",[_._v("多线程的时候会遇到")])])]),_._v(" "),v("h3",{attrs:{id:"_332-debug5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_332-debug5"}},[_._v("#")]),_._v(" 332 debug5")]),_._v(" "),v("ul",[v("li",[_._v("自己看看person类如何运行的")])]),_._v(" "),v("h3",{attrs:{id:"_333-debug6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_333-debug6"}},[_._v("#")]),_._v(" 333 debug6")]),_._v(" "),v("ul",[v("li",[_._v("看看动态绑定机制")])]),_._v(" "),v("h3",{attrs:{id:"_334-零钱通介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_334-零钱通介绍"}},[_._v("#")]),_._v(" 334 零钱通介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("微信的一个项目")])]),_._v(" "),v("li",[v("p",[_._v("主要是把之前的java基础语法考了一下子")])])]),_._v(" "),v("h3",{attrs:{id:"_335-零钱通菜单"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_335-零钱通菜单"}},[_._v("#")]),_._v(" 335 零钱通菜单")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("问题")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("用户输入正确后，进入下一级并完成相应任务，但如何选择返回上层界面")])]),_._v(" "),v("li",[v("p",[_._v("用户输入错误后 如何返回该级顶层 叫对方重新输入或者返回上一级")])]),_._v(" "),v("li",[v("p",[_._v("用户输入完成后 怎么不用输出 并保存数据 并把信息返回到明细")])]),_._v(" "),v("li",[v("p",[_._v("存钱和消费 代码有重复部分 并没有做到方法的重载")])]),_._v(" "),v("li",[v("p",[_._v("其实也不知道要定义多少个变量")])]),_._v(" "),v("li",[v("p",[_._v("代码没有可持续性 没有想开就开 想关就关的能力 只能程序一条路运行到底")])])])]),_._v(" "),v("li",[v("p",[_._v("已解决")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("封面")])]),_._v(" "),v("li",[v("p",[_._v("用户不想输入可以直接退出")])]),_._v(" "),v("li",[v("p",[_._v("部分输入功能是完善的")])])])]),_._v(" "),v("li",[v("p",[_._v("一些思路")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("把主体用能想到的方法写出来 再进行方法简写封装")])]),_._v(" "),v("li",[v("p",[_._v("数据可以用字符串数组进行保存")])])])])]),_._v(" "),v("h3",{attrs:{id:"_336-337-338-339-340-341"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_336-337-338-339-340-341"}},[_._v("#")]),_._v(" 336 337 338 339 340 341")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("我的缺点")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("while 可以是无限循环 怎么break出去很有学问 不能死磕for循环")])]),_._v(" "),v("li",[v("p",[_._v("适当运用标签 定义开关等常量 可以用do while 等触发一定条件后即可跳出循环")])]),_._v(" "),v("li",[v("p",[_._v("break continue语句其实还不是很熟练的")])])])]),_._v(" "),v("li",[v("p",[_._v("老韩建议")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("一行代码完成一个功能")])]),_._v(" "),v("li",[v("p",[_._v("do while 和switch分支结构能写的更好")])]),_._v(" "),v("li",[v("p",[_._v("oop app 面向对象的方法 真的很秒 多调用 维护性强 思想一定要改变过来")])])])])]),_._v(" "),v("h3",{attrs:{id:"_342-homework1-15min"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_342-homework1-15min"}},[_._v("#")]),_._v(" 342 homework1 15min")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("创建对象数组 新对象的输入 应该是person[i] = new Person{......}")])]),_._v(" "),v("li",[v("p",[_._v("冒泡排序的过程是要get一些数据的")])])]),_._v(" "),v("h3",{attrs:{id:"_343-homework2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_343-homework2"}},[_._v("#")]),_._v(" 343 homework2")]),_._v(" "),v("ul",[v("li",[_._v("各种访问修饰符的权限")])]),_._v(" "),v("h3",{attrs:{id:"_344-homework3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_344-homework3"}},[_._v("#")]),_._v(" 344 homework3")]),_._v(" "),v("ul",[v("li",[_._v("老师 构造器 输出一下")])]),_._v(" "),v("h3",{attrs:{id:"_345-homework4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_345-homework4"}},[_._v("#")]),_._v(" 345 homework4")]),_._v(" "),v("ul",[v("li",[_._v("工人 经理 在多态数组的时候自己已经写过一个类似的了\n"),v("ul",[v("li",[_._v("主要是讲了继承这些")])])])]),_._v(" "),v("h3",{attrs:{id:"_346-homework5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_346-homework5"}},[_._v("#")]),_._v(" 346 homework5")]),_._v(" "),v("ul",[v("li",[_._v("薪资方法的重写 override")])]),_._v(" "),v("h3",{attrs:{id:"_347-homework6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_347-homework6"}},[_._v("#")]),_._v(" 347 homework6")]),_._v(" "),v("ul",[v("li",[_._v("this super这些关键字的使用 访问属性和方法呀之类的")])]),_._v(" "),v("h3",{attrs:{id:"_348-homework7"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_348-homework7"}},[_._v("#")]),_._v(" 348 homework7")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("属性没有动态绑定机制")])]),_._v(" "),v("li",[v("p",[_._v("成员方法遵循就近原则")])]),_._v(" "),v("li",[v("p",[_._v("匿名对象")])]),_._v(" "),v("li",[v("p",[_._v("走的无参构造器还是有参构造器的区别")])]),_._v(" "),v("li",[v("p",[_._v("考的继承！！！")])])]),_._v(" "),v("h3",{attrs:{id:"_349-homework8"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_349-homework8"}},[_._v("#")]),_._v(" 349 homework8")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("继承")])]),_._v(" "),v("li",[v("p",[_._v("new 新东西的时候 构造器一定要写全 仔细检查构造器 有多少项")])]),_._v(" "),v("li",[v("p",[_._v("如何将老师的代码更快的复制过来")])]),_._v(" "),v("li",[v("p",[_._v("加入新的逻辑给代码实现新的功能")])])]),_._v(" "),v("h3",{attrs:{id:"_350-homework9"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_350-homework9"}},[_._v("#")]),_._v(" 350 homework9")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("通过需求反推构造器")])]),_._v(" "),v("li",[v("p",[_._v("new要一个构造器")])])]),_._v(" "),v("h3",{attrs:{id:"_351-homework10"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_351-homework10"}},[_._v("#")]),_._v(" 351 homework10")]),_._v(" "),v("ul",[v("li",[_._v("向上转型 向下转型")])]),_._v(" "),v("h3",{attrs:{id:"_353-homework12"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_353-homework12"}},[_._v("#")]),_._v(" 353 homework12")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("==")]),_._v(" "),v("ul",[v("li",[_._v("比较运算符 基本数据类型比较 引用类型，判断对象是否相等")])])]),_._v(" "),v("li",[v("p",[_._v("equals")]),_._v(" "),v("ul",[v("li",[_._v("object类的方法 java类都可以使用equals 只能用于判断对象是否相等，但是子类往往重写该方法，比较对象的属性是否相等比如\nstring integer")])])])]),_._v(" "),v("h3",{attrs:{id:"_354-355-homework13-14"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_354-355-homework13-14"}},[_._v("#")]),_._v(" 354 355 homework13 14")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Exception in thread “main” java.lang.NullPointerException")])]),_._v(" "),v("li",[v("p",[_._v("该报错意味着你的数组里还有没有赋值的")])]),_._v(" "),v("li",[v("p",[_._v("老师new的对象和我的对象不同 这里要知道你要传入的实参是什么以及方法里的形参名该写成什么")])]),_._v(" "),v("li",[v("p",[_._v("对于父类要调用子类的方法 应该先判断是不是运行类型和子类一致 再向下转型调用方法")])]),_._v(" "),v("li",[v("p",[_._v("对于要排序的数组 要传入整个数组 而不是单个对象 同时取值要用方法get 并排序")])]),_._v(" "),v("li",[v("p",[_._v("下次写方法也不用专门写一个类 在外层写一个方法就好了 不用写成 类到方法 直接在主函数外public写方法")])])]),_._v(" "),v("h3",{attrs:{id:"_356-homework-15"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_356-homework-15"}},[_._v("#")]),_._v(" 356 homework 15")]),_._v(" "),v("ul",[v("li",[_._v("什么是多态")])]),_._v(" "),v("h3",{attrs:{id:"_357-homework-16"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_357-homework-16"}},[_._v("#")]),_._v(" 357 homework 16")]),_._v(" "),v("h3",{attrs:{id:"_358-homework17"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_358-homework17"}},[_._v("#")]),_._v(" 358 homework17")]),_._v(" "),v("h3",{attrs:{id:"_359-本章内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_359-本章内容梳理"}},[_._v("#")]),_._v(" 359 本章内容梳理")]),_._v(" "),v("h3",{attrs:{id:"_360-不要让懒惰毁了你"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_360-不要让懒惰毁了你"}},[_._v("#")]),_._v(" 360 不要让懒惰毁了你")]),_._v(" "),v("h2",{attrs:{id:"第九章-房屋出租系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第九章-房屋出租系统"}},[_._v("#")]),_._v(" 第九章 房屋出租系统")]),_._v(" "),v("h3",{attrs:{id:"_361-房屋出租系统-界面"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_361-房屋出租系统-界面"}},[_._v("#")]),_._v(" 361 房屋出租系统 界面")]),_._v(" "),v("h3",{attrs:{id:"_362-设计思路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_362-设计思路"}},[_._v("#")]),_._v(" 362 设计思路")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("项目设计 程序框架图")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("分层模式 -> 当软件比较复杂的时候")])]),_._v(" "),v("li",[v("p",[_._v("系统有哪些类文件 明确类与类的调用关系")])])])]),_._v(" "),v("li",[v("p",[_._v("houseview 界面")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("显示界面")])]),_._v(" "),v("li",[v("p",[_._v("接收用户的输入 数据显示")])]),_._v(" "),v("li",[v("p",[_._v("调用其他类完成对房屋信息的各种操作")])])])]),_._v(" "),v("li",[v("p",[_._v("houseservice 业务层")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("定义house[] 保存house对象")])]),_._v(" "),v("li",[v("p",[_._v("响应houseview的调用")])]),_._v(" "),v("li",[v("p",[_._v("完成对房屋信息的各种操作，crud，数据处理")])])])]),_._v(" "),v("li",[v("p",[_._v("house 类 数据层")]),_._v(" "),v("ul",[v("li",[_._v("一个house对象表示一个房屋信息")])])]),_._v(" "),v("li",[v("p",[_._v("houserent main")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("创建houseview对象")])]),_._v(" "),v("li",[v("p",[_._v("调用该对象，显示主菜单")])])])]),_._v(" "),v("li",[v("p",[_._v("工具类")])])]),_._v(" "),v("h3",{attrs:{id:"_363-实现-工具类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_363-实现-工具类"}},[_._v("#")]),_._v(" 363 实现 工具类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("找资料包")])]),_._v(" "),v("li",[v("p",[_._v("工具库")])]),_._v(" "),v("li",[v("p",[_._v("开发库")])]),_._v(" "),v("li",[v("p",[_._v("程序员也需要能看懂别人的代码")])])]),_._v(" "),v("h3",{attrs:{id:"_364-house类domain"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_364-house类domain"}},[_._v("#")]),_._v(" 364 house类domain")]),_._v(" "),v("ul",[v("li",[_._v("通过界面 看看需要哪些基本属性")])]),_._v(" "),v("h3",{attrs:{id:"_365-房屋出租系统-主菜单"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_365-房屋出租系统-主菜单"}},[_._v("#")]),_._v(" 365 房屋出租系统 主菜单")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("实现功能三部曲 明确功能")]),_._v(" "),v("ul",[v("li",[_._v("用户打开软件 可以看到主菜单 可以退出软件")])])]),_._v(" "),v("li",[v("p",[_._v("明确完成功能 思路分析 代码实现")])]),_._v(" "),v("li",[v("p",[_._v("编写mainmenu ，可以显示主菜单")])])]),_._v(" "),v("h3",{attrs:{id:"_366-完成显示房屋列表的功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_366-完成显示房屋列表的功能"}},[_._v("#")]),_._v(" 366 完成显示房屋列表的功能")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("思路分析要写 view和service功能")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("编写一个方法list（）//返回所有的房屋信息")])]),_._v(" "),v("li",[v("p",[_._v("所有的房屋信息用数组定义 用数组保存house对象")])])])]),_._v(" "),v("li",[v("p",[_._v("编写listhouse（）界面")])]),_._v(" "),v("li",[v("p",[_._v("各司其职")])])]),_._v(" "),v("h3",{attrs:{id:"_367-房屋出租添加"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_367-房屋出租添加"}},[_._v("#")]),_._v(" 367 房屋出租添加")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("需要编写view和service")])]),_._v(" "),v("li",[v("p",[_._v("规定 新添加的房屋的id按照自增长来")])]),_._v(" "),v("li",[v("p",[_._v("加入houses数组")])])]),_._v(" "),v("h3",{attrs:{id:"_368-完成删除房屋信息的功能"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_368-完成删除房屋信息的功能"}},[_._v("#")]),_._v(" 368 完成删除房屋信息的功能")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("编号自增长 一个规定的编号 一人一个 用过了就丢弃")])]),_._v(" "),v("li",[v("p",[_._v("删除后要把数组元素往上提")])])]),_._v(" "),v("h3",{attrs:{id:"_369-退出方法的实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_369-退出方法的实现"}},[_._v("#")]),_._v(" 369 退出方法的实现")]),_._v(" "),v("ul",[v("li",[_._v("编写到一个函数里 善用类里面的方法")])]),_._v(" "),v("h3",{attrs:{id:"_370-查找"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_370-查找"}},[_._v("#")]),_._v(" 370 查找")]),_._v(" "),v("h3",{attrs:{id:"_371-修改房屋的信息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_371-修改房屋的信息"}},[_._v("#")]),_._v(" 371 修改房屋的信息")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("数组的增删改查 调用的过程 调用 基础数据类型还是引用数据类型呢")])]),_._v(" "),v("li",[v("h3",{attrs:{id:"_372-第一阶段结束语"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_372-第一阶段结束语"}},[_._v("#")]),_._v(" 372 第一阶段结束语")])])]),_._v(" "),v("h2",{attrs:{id:"第十章-面向对象高级"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第十章-面向对象高级"}},[_._v("#")]),_._v(" 第十章 面向对象高级")]),_._v(" "),v("h3",{attrs:{id:"p373-类变量引出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p373-类变量引出"}},[_._v("#")]),_._v(" p373 类变量引出")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("count独立于对象，很尴尬")])]),_._v(" "),v("li",[v("p",[_._v("以后我们访问count很麻烦，没有使用到oop")])]),_._v(" "),v("li",[v("p",[_._v("我们引出类变量 静态变量")])])]),_._v(" "),v("h3",{attrs:{id:"p374-类变量的快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p374-类变量的快速入门"}},[_._v("#")]),_._v(" p374 类变量的快速入门")]),_._v(" "),v("h3",{attrs:{id:"p375-类变量的内存剖析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p375-类变量的内存剖析"}},[_._v("#")]),_._v(" p375 类变量的内存剖析")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("count可能在堆 可能在对象区 就是被指着用了 看jdk版本")])]),_._v(" "),v("li",[v("p",[_._v("java中的静态变量和class对象究竟存放在哪个区域中")])])]),_._v(" "),v("h3",{attrs:{id:"p376-类变量定义访问"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p376-类变量定义访问"}},[_._v("#")]),_._v(" p376 类变量定义访问")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("类变量也叫静态变量 静态属性，是该类的所有对象共享的变量，任何一个该类的对象去访问它是，取到的都是相同的值，同样任何一个该类的的对象去修改它是，修改的也是同一个变量")])]),_._v(" "),v("li",[v("p",[_._v("定义语法 访问修饰符 static 数据类型 变量名")]),_._v(" "),v("ul",[v("li",[_._v("static也可以在前面")])])]),_._v(" "),v("li",[v("p",[_._v("如何访问类变量 类名.类变量名 或者 对象.类变量名 推荐前者")])])]),_._v(" "),v("h3",{attrs:{id:"p377-类变量使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p377-类变量使用细节"}},[_._v("#")]),_._v(" p377 类变量使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("共享同一个变量")])]),_._v(" "),v("li",[v("p",[_._v("加上static 普通属性 普通成员变量 非静态属性 非静态成员变量")])]),_._v(" "),v("li",[v("p",[_._v("实例变量是每个对象单独享有 或称实例变量 普通变量 非静态变量")])]),_._v(" "),v("li",[v("p",[_._v("类名访问类变量 满足修饰符")])]),_._v(" "),v("li",[v("p",[_._v("实例变量不能通过类变量名")])]),_._v(" "),v("li",[v("p",[_._v("类变量是在类加载的时候就初始化了，即使没有创建对象，只要类加载了，就可以使用类变量")])]),_._v(" "),v("li",[v("p",[_._v("类变量的生命周期随类的加载开始，随着类消失而销毁")])])]),_._v(" "),v("h3",{attrs:{id:"p378-类方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p378-类方法"}},[_._v("#")]),_._v(" p378 类方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("静态方法 static修饰一下")])]),_._v(" "),v("li",[v("p",[_._v("类名类方法名")])])]),_._v(" "),v("h3",{attrs:{id:"p379-类方法最佳实践"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p379-类方法最佳实践"}},[_._v("#")]),_._v(" p379 类方法最佳实践")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当方法不涉及任何和对象相关的成员，可以将方法设计成静态方法，提高开发效率")])]),_._v(" "),v("li",[v("p",[_._v("工具中的方法utils math array collection")])]),_._v(" "),v("li",[v("p",[_._v("有自己的工具库 提高工作效率")])])]),_._v(" "),v("h3",{attrs:{id:"p380-注意细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p380-注意细节"}},[_._v("#")]),_._v(" p380 注意细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("类方法和普通方法都是随着类的加载而加载，将结构信息存储在方法区 类方法中this的参数 普通方法中无this的参数 普通方法中隐含this的参数")])]),_._v(" "),v("li",[v("p",[_._v("类方法可以类名调用，也可对象调用")])]),_._v(" "),v("li",[v("p",[_._v("类方法只能访问静态变量和静态方法 重要")])]),_._v(" "),v("li",[v("p",[_._v("类方法不允许使用和对象有关的关键字 比如this super")])])]),_._v(" "),v("h3",{attrs:{id:"p381类成员课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p381类成员课堂练习"}},[_._v("#")]),_._v(" p381类成员课堂练习")]),_._v(" "),v("ul",[v("li",[_._v("9 10 11")])]),_._v(" "),v("h3",{attrs:{id:"p382-main语法说明"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p382-main语法说明"}},[_._v("#")]),_._v(" p382 main语法说明")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("main方法时虚拟机调用的")])]),_._v(" "),v("li",[v("p",[_._v("解释main方法的形式 访问权限是public")])]),_._v(" "),v("li",[v("p",[_._v("java虚拟机在执行main方法时不必创建对象，所以方法必须是static")])]),_._v(" "),v("li",[v("p",[_._v("该方法接收String类型的数组参数args，该数组中保存java命令时传递给所运行的类的参数")])]),_._v(" "),v("li",[v("p",[_._v("java执行的程序参数1 2 3")])])]),_._v(" "),v("h3",{attrs:{id:"p383-理解main语法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p383-理解main语法"}},[_._v("#")]),_._v(" p383 理解main语法")]),_._v(" "),v("ul",[v("li",[_._v("我们直接调用main方法所在类的静态方法或静态属性")])]),_._v(" "),v("h3",{attrs:{id:"p384-main动态传值"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p384-main动态传值"}},[_._v("#")]),_._v(" p384 main动态传值")]),_._v(" "),v("ul",[v("li",[_._v("动态传递参数")])]),_._v(" "),v("h3",{attrs:{id:"p385-代码块"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p385-代码块"}},[_._v("#")]),_._v(" p385 代码块")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("初始化块 类中的成员 类似于方法 逻辑语句封装在方法体中 通过大括号包住")])]),_._v(" "),v("li",[v("p",[_._v("但是和方法不同 无方法名 无返回 无参数 只有方法体 而且不通过对象和类显示调用，加载类 创建对象隐式调用")])]),_._v(" "),v("li",[v("p",[_._v("基本语法 写或static")]),_._v(" "),v("ul",[v("li",[_._v("静态 非静态 逻辑语句可以是输入输出方法调用 循环 判断")])])]),_._v(" "),v("li",[v("p",[_._v("相当于另外一种形式的构造器 对构造器的补充机制")])]),_._v(" "),v("li",[v("p",[_._v("如果多个构造器中有重读的语句，可以抽取到初始块中，提高代码的重用型")])])]),_._v(" "),v("h3",{attrs:{id:"p386-387-388-389-代码块使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p386-387-388-389-代码块使用细节"}},[_._v("#")]),_._v(" p386 387 388 389 代码块使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("static代码块 静态代码块 类初始化 类加载执行 执行一个 普通代码块 创建一个就执行")])]),_._v(" "),v("li",[v("p",[_._v("类什么时候被加载")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("创建对象实例是 new")])]),_._v(" "),v("li",[v("p",[_._v("创建子类对象实例，父类也会被加载")])]),_._v(" "),v("li",[v("p",[_._v("使用类的静态成员时， A类extendsB类的静态块")])])])]),_._v(" "),v("li",[v("p",[_._v("普通的代码块，在创建对象实例时，会被隐式的调用，被创建一次，就会调用一次")])]),_._v(" "),v("li",[v("p",[_._v("如果只是使用类的静态成员时，普通代码块并不会执行")])]),_._v(" "),v("li",[v("p",[_._v("创建一个对象时，在一个类调用顺序是：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("1.调用静态代码块和静态属性初始化 静态代码块和静态属性调用的优先级一样，如果有多个，则按他们定义的顺序调用")])]),_._v(" "),v("li",[v("p",[_._v("2.调用普通代码块和普通属性的初始化 普通代码块和普通属性初始化调用的优先级一样，如果有多个普通代码块和多个普通属性初始化，则按定义顺序调用")])]),_._v(" "),v("li",[v("p",[_._v("3.调用构造方法")])])])]),_._v(" "),v("li",[v("p",[_._v("构造器的最前面其实隐含了super 和调用普通代码块，有一个顶级父类")])]),_._v(" "),v("li",[v("p",[_._v("看一下创建子类时的继承关系")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("1父类静态")])]),_._v(" "),v("li",[v("p",[_._v("2子类静态")])]),_._v(" "),v("li",[v("p",[_._v("3父类普通")])]),_._v(" "),v("li",[v("p",[_._v("4父类构造")])]),_._v(" "),v("li",[v("p",[_._v("5子类普通")])]),_._v(" "),v("li",[v("p",[_._v("6子类构造")])])])]),_._v(" "),v("li",[v("p",[_._v("静态代码块只能直接调用静态成员，普通代码块可以调用任意成员\n学习比较麻烦，工作轻松")])])]),_._v(" "),v("h3",{attrs:{id:"p390代码块练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p390代码块练习"}},[_._v("#")]),_._v(" p390代码块练习")]),_._v(" "),v("h3",{attrs:{id:"p391-392-单例模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p391-392-单例模式"}},[_._v("#")]),_._v(" p391 392 单例模式")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("所谓类的单例设计模式，就是采取一定的方法保证在整个的软件系统中，对某个类只能存在一个对象实例，并且只提供一个取得去对象实例的方法")])]),_._v(" "),v("li",[v("p",[_._v("懒汉式")])]),_._v(" "),v("li",[v("p",[_._v("饿汉式")]),_._v(" "),v("ul",[v("li",[_._v("构造器私有化 防止直接new 类的内部创建对象 向外暴露一个静态的公共方法 getinstance")])])]),_._v(" "),v("li",[v("p",[_._v("区别")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("二者最主要的区别在于创建对象的时机不同 饿汉式是在类加载就创建了对象实例，懒汉式是在使用时才创建")])]),_._v(" "),v("li",[v("p",[_._v("饿汉式不存在线程安全问题，懒汉式存在线程安全问题")])]),_._v(" "),v("li",[v("p",[_._v("饿汉式存在浪费资源的可能，因为如果程序员一个对象实例都没有使用，那么饿汉式创建的对象就浪费了，懒汉式是使用时才创建，就不存在这个问题")])]),_._v(" "),v("li",[v("p",[_._v("在我们javase标准类中，java lang runtime就是经典的单例模式")])])])])]),_._v(" "),v("h3",{attrs:{id:"p393-final基本使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p393-final基本使用"}},[_._v("#")]),_._v(" p393 final基本使用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("可以修饰类、属性、方法和局部变量")])]),_._v(" "),v("li",[v("p",[_._v("使用情况")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当不希望类被继承是，可以用final修饰")])]),_._v(" "),v("li",[v("p",[_._v("当不希望父类的某个方法被子类覆盖 重写，可以用final关键字修饰")])]),_._v(" "),v("li",[v("p",[_._v("当不希望类的某个属性的值被修改，可以用final修饰")])]),_._v(" "),v("li",[v("p",[_._v("当不希望某个局部变量被修改，可以使用final修饰")])])])])]),_._v(" "),v("h3",{attrs:{id:"p394-395final使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p394-395final使用细节"}},[_._v("#")]),_._v(" p394 395final使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("1 final修饰的属性又叫常量，一般用 xx_xx_xx来命名")])]),_._v(" "),v("li",[v("p",[_._v("2 final修饰的属性在定义时，必须赋初值，并且以后不能再修改，赋值可以在如下位置之一")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("定义时")])]),_._v(" "),v("li",[v("p",[_._v("在构造器中")])]),_._v(" "),v("li",[v("p",[_._v("在代码块中")])])])]),_._v(" "),v("li",[v("p",[_._v("3 如果final修饰的属性是静态的，则初始化的位置只能是 定义时 静态代码块 不能在构造器中赋值")])]),_._v(" "),v("li",[v("p",[_._v("final类 不能继承，但可以实例化对象")])]),_._v(" "),v("li",[v("p",[_._v("如果类不是final类，但是含有final方法，则该方法虽然不能重写，但是可以被继承")])]),_._v(" "),v("li",[v("p",[_._v("一般来说，如果一个类已经是final类了，就没有必要在讲方法修饰成final方法了")])]),_._v(" "),v("li",[v("p",[_._v("final不能修饰构造方法")])]),_._v(" "),v("li",[v("p",[_._v("final和static往往搭配使用，效率更高，不会导致类加载 底层编译器做了优化处理")])])]),_._v(" "),v("h3",{attrs:{id:"p396-final课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p396-final课堂练习"}},[_._v("#")]),_._v(" p396 final课堂练习")]),_._v(" "),v("h3",{attrs:{id:"p397-抽象类的引出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p397-抽象类的引出"}},[_._v("#")]),_._v(" p397 抽象类的引出")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当父类的某些方法，需要声明，但又不确定如何实现时，可以将其声明为抽象方法，那么这个类就是抽象类")])]),_._v(" "),v("li",[v("p",[_._v("当父类的一些方法不能确定是，可以用abstract关键字来修饰该方法，这个方法就是抽象方法，用abstract来修饰该类就是抽象类")])]),_._v(" "),v("li",[v("p",[_._v("看看如何吧animal做抽象类，并让子类cat实现")])])]),_._v(" "),v("h3",{attrs:{id:"p398-抽象类的细节1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p398-抽象类的细节1"}},[_._v("#")]),_._v(" p398 抽象类的细节1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("修饰类 抽象类")])]),_._v(" "),v("li",[v("p",[_._v("修饰方法 抽象方法没有方法体")])]),_._v(" "),v("li",[v("p",[_._v("抽象类的价值更多作用在于设计，是设计者设计好后，让子类继承并实现抽象类")])]),_._v(" "),v("li",[v("p",[_._v("面试官喜欢文，框架和设计模式使用较多")])]),_._v(" "),v("li",[v("p",[_._v("抽象类不能被实例化")])]),_._v(" "),v("li",[v("p",[_._v("抽象类不一定要包含abstract方法")])]),_._v(" "),v("li",[v("p",[_._v("一旦类包含了abstract方法，则这个类必须声明为abstract")])]),_._v(" "),v("li",[v("p",[_._v("abstract只能修饰类和方法 不能修饰属性和其他的")])])]),_._v(" "),v("h3",{attrs:{id:"p399-抽象类细节2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p399-抽象类细节2"}},[_._v("#")]),_._v(" p399 抽象类细节2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("抽象类可以有任意成员 抽象类本质还是类 比如 非抽象方法 构造器 静态属性")])]),_._v(" "),v("li",[v("p",[_._v("抽象方法不能有主体，即不能实现")])]),_._v(" "),v("li",[v("p",[_._v("如果一个类继承了抽象类，则它必须实现抽象类，除非它自己声明为abstract类")])]),_._v(" "),v("li",[v("p",[_._v("抽象方法不能使用private、final和static来修饰，因为这些关键字都是和重写相违背的")])])]),_._v(" "),v("h3",{attrs:{id:"p400-抽象类练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p400-抽象类练习"}},[_._v("#")]),_._v(" p400 抽象类练习")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("不能 不能 不能")])]),_._v(" "),v("li",[v("p",[_._v("static关键字和重写无关")])]),_._v(" "),v("li",[v("p",[_._v("私有的方法不能重写")])]),_._v(" "),v("li",[v("p",[_._v("final是不能继承的 而抽象类一定要子类完成它的方法")])])]),_._v(" "),v("h3",{attrs:{id:"p401-抽象模板模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p401-抽象模板模式"}},[_._v("#")]),_._v(" p401 抽象模板模式")]),_._v(" "),v("ul",[v("li",[_._v("需求 有多个类 完成不同的任务 要求统计得到各自完成任务的时间")])]),_._v(" "),v("h3",{attrs:{id:"p402-接口快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p402-接口快速入门"}},[_._v("#")]),_._v(" p402 接口快速入门")]),_._v(" "),v("ul",[v("li",[_._v("这样的设计需求在java编程 php net go中也会是大量存在的")])]),_._v(" "),v("h3",{attrs:{id:"p403-接口基本介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p403-接口基本介绍"}},[_._v("#")]),_._v(" p403 接口基本介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("一些没有实现的方法 封装到一起，到某个类要使用的时候，在根据具体情况把这些方法写出来")])]),_._v(" "),v("li",[v("p",[_._v("interface 接口名{属性 抽象方法}")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("class 类名 implements 接口{自己属性 自己方法 必须实现的接口的抽象方法")])]),_._v(" "),v("li",[v("p",[_._v("接口是更加抽象的抽象的类，抽象类里的方法可以有方法体，接口里的所有方法都没有方法体。接口体现了程序设计的多态和高内聚低耦合的设计思想")])]),_._v(" "),v("li",[v("p",[_._v("jdk8后接口类可以有静态方法，默认方法，也就是说接口中可以有方法的具体实现")])])])])]),_._v(" "),v("h3",{attrs:{id:"p404-接口应用场景"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p404-接口应用场景"}},[_._v("#")]),_._v(" p404 接口应用场景")]),_._v(" "),v("h3",{attrs:{id:"p405-接口使用细节1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p405-接口使用细节1"}},[_._v("#")]),_._v(" p405 接口使用细节1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("接口不能被实例化")])]),_._v(" "),v("li",[v("p",[_._v("接口中所有的方法时public方法，接口中抽象方法，可以不用abstract修饰 void aaa();实际上是abstract void aaa（）；")])]),_._v(" "),v("li",[v("p",[_._v("一个普通类实现接口，就必须将该接口的所有方法都实现")])]),_._v(" "),v("li",[v("p",[_._v("抽象类实现接口，可以不用实现接口的方法")])])]),_._v(" "),v("h3",{attrs:{id:"p406-接口使用细节2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p406-接口使用细节2"}},[_._v("#")]),_._v(" p406 接口使用细节2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("一个类同时可以实现多个接口")])]),_._v(" "),v("li",[v("p",[_._v("接口中的属性，只能是final，而且是public static final修饰符，比如int a = 1；必须初始化")])]),_._v(" "),v("li",[v("p",[_._v("接口中属性的访问形式 接口名.属性名")])]),_._v(" "),v("li",[v("p",[_._v("接口不能继承其它的类，但是可以继承多个别的接口 interface A extends B，C{}")])]),_._v(" "),v("li",[v("p",[_._v("接口的修饰符只能是public和默认，这点和类的修饰符是一样的")])])]),_._v(" "),v("h3",{attrs:{id:"p407-接口练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p407-接口练习"}},[_._v("#")]),_._v(" p407 接口练习")]),_._v(" "),v("ul",[v("li",[_._v("接口的属性继承")])]),_._v(" "),v("h3",{attrs:{id:"p408-接口vs继承"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p408-接口vs继承"}},[_._v("#")]),_._v(" p408 接口vs继承")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("继承的价值在于 解决代码的复用性和可维护性")]),_._v(" "),v("ul",[v("li",[_._v("子类继承父类，就自动拥有父类的功能")])])]),_._v(" "),v("li",[v("p",[_._v("接口的价值在于 设计号各种规范，让其他类来实现这些方法，即更加的灵活")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("如果子类需要扩展功能，可以通过实现接口的方式扩展")])]),_._v(" "),v("li",[v("p",[_._v("可以理解 实现接口是对java单继承机制的一种补充")])])])]),_._v(" "),v("li",[v("p",[_._v("接口比继承更加灵活，继承是满足is-a的关系，而接口只需满足like-a的关系")])]),_._v(" "),v("li",[v("p",[_._v("接口在一定程度上实现代码的解耦 即 接口规范性+动态绑定机制")])]),_._v(" "),v("li")]),_._v(" "),v("h3",{attrs:{id:"p409-接口多态特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p409-接口多态特性"}},[_._v("#")]),_._v(" p409 接口多态特性")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("前面的usb接口案例，既可以接收手机对象，又可以接收相机对象，体现了 接口 的多态 即 接口引用可以指向实现了接口的类的对象")])]),_._v(" "),v("li",[v("p",[_._v("多态数组 自己写了一下")])]),_._v(" "),v("li",[v("p",[_._v("接口存在多态传递现象")])])]),_._v(" "),v("h3",{attrs:{id:"p410-接口多态传递"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p410-接口多态传递"}},[_._v("#")]),_._v(" p410 接口多态传递")]),_._v(" "),v("ul",[v("li",[_._v("就是 同级 可以传递")])]),_._v(" "),v("h3",{attrs:{id:"p411-接口练习2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p411-接口练习2"}},[_._v("#")]),_._v(" p411 接口练习2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("访问接口 父类的属性该如何访问了")])]),_._v(" "),v("li",[v("p",[_._v("类的五大成员")]),_._v(" "),v("ul",[v("li",[_._v("属性 方法 构造器 代码块 内部类")])])]),_._v(" "),v("li",[v("p",[_._v("包名 类名 继承父类 接口")])])]),_._v(" "),v("h3",{attrs:{id:"p412-内部类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p412-内部类"}},[_._v("#")]),_._v(" p412 内部类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("如果定义类在局部位置 即方法中 代码块 1局部内部类 2匿名内部类")])]),_._v(" "),v("li",[v("p",[_._v("定义在成员位置 1 成员内部类 2 静态内部类")])]),_._v(" "),v("li",[v("p",[_._v("一个类的内部有完整嵌套了另一个类结构 被嵌套的类称为内部类，嵌套其他类的类称为外部类，类的五大成员之一 属性 构造器 方法\n代码块 内部类")])]),_._v(" "),v("li",[v("p",[_._v("内部类最大的特点就是可以直接访问私有属性，并且可以体现类与类之间的包含关系，注意：内部类时学习的难点 看底层源码是，有大量的内部类")])]),_._v(" "),v("li",[v("p",[_._v("外部类 内部类 外部其他类")])]),_._v(" "),v("li",[v("p",[_._v("分类1 定义在外部类局部位置上 比如方法类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("局部内部类 有类名")])]),_._v(" "),v("li",[v("p",[_._v("匿名内部类 没有类名")])])])]),_._v(" "),v("li",[v("p",[_._v("分类2 定义在外部类的成员位置上")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("成员内部类 没有static修饰")])]),_._v(" "),v("li",[v("p",[_._v("静态内部类")])])])])]),_._v(" "),v("h3",{attrs:{id:"p413-414局部内部类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p413-414局部内部类"}},[_._v("#")]),_._v(" p413 414局部内部类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("局部内部类是定义在外部类的局部位置，比如方法中，并且有类名")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("1 可以直接访问外部类的所有成员 包含私有的")])]),_._v(" "),v("li",[v("p",[_._v("2 不能添加访问修饰符，因为它的地位是一个局部变量，局部变量是不能使用修饰符的。但是可以使用final修饰，因为局部变量也可以使用final")])]),_._v(" "),v("li",[v("p",[_._v("3 作用域 仅仅在定义它的方法或代码块中")])]),_._v(" "),v("li",[v("p",[_._v("4 局部内部类 访问 外部类的成员 直接访问")])]),_._v(" "),v("li",[v("p",[_._v("5 外部类 访问 局部内部类的成员 创建对象 在访问")])]),_._v(" "),v("li",[v("p",[_._v("局部内部类定义在方法代码块中 作用在方法体或者代码块中 本质仍然是一个类")])]),_._v(" "),v("li",[v("p",[_._v("外部其他类 不能访问 局部内部类 因为局部内部类的地位是一个局部变量")])]),_._v(" "),v("li",[v("p",[_._v("如果外部类和局部内部类的成员重名时，默认遵循就近原则，如果想访问外部类的成员，则可以使用 外部类名.this.成员 去访问\nsout 外部类n2= + 外部类名.this.n2")])])])])]),_._v(" "),v("h3",{attrs:{id:"p415-匿名内部类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p415-匿名内部类"}},[_._v("#")]),_._v(" p415 匿名内部类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("本质是类 内部类 该类没有名字 同时还是一个对象")])]),_._v(" "),v("li",[v("p",[_._v("匿名内部类是定义在外部类的局部位置，比如方法中，并且没有类名")])]),_._v(" "),v("li",[v("p",[_._v("基本语法 new 类或接口（参数列表）{类体}；")])]),_._v(" "),v("li",[v("p",[_._v("基于接口 基于类 基于抽象类")])])]),_._v(" "),v("h3",{attrs:{id:"p416-细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p416-细节"}},[_._v("#")]),_._v(" p416 细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("匿名内部类的语法比较奇特，因为匿名内部类既是一个类的定义，同时它本身也是一个对象，因此从语法上看，它既有定义类的特征，也有创建对象的特征，因此可以调用匿名内部类的方法")])]),_._v(" "),v("li",[v("p",[_._v("可以直接访问外部类的所有成员，包含私有的")])]),_._v(" "),v("li",[v("p",[_._v("不能添加访问修饰符，因为它的地位就是一个局部变量")])]),_._v(" "),v("li",[v("p",[_._v("作用域：仅仅定义它的方法或代码块中")])]),_._v(" "),v("li",[v("p",[_._v("匿名内部类 访问 外部类成员")])]),_._v(" "),v("li",[v("p",[_._v("外部其他类 不能访问 匿名内部类 因为匿名内部类地位是一个局部变量")])]),_._v(" "),v("li",[v("p",[_._v("如果外部类和匿名内部类的成员重名时，匿名内部类访问的话，默认遵循就近原则，如果想访问外部类成员 可以使用外部类名.this.成员\n去访问")])])]),_._v(" "),v("h3",{attrs:{id:"p417-实践"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p417-实践"}},[_._v("#")]),_._v(" p417 实践")]),_._v(" "),v("ul",[v("li",[_._v("匿名内部类直接当实参传递")])]),_._v(" "),v("h3",{attrs:{id:"p418-练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p418-练习"}},[_._v("#")]),_._v(" p418 练习")]),_._v(" "),v("h3",{attrs:{id:"p419-p420成员内部类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p419-p420成员内部类"}},[_._v("#")]),_._v(" p419 p420成员内部类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("成员内部类是定义在外部类的成员位置，并且没有static修饰")])]),_._v(" "),v("li",[v("p",[_._v("可以直接访问外部类的所有成员，包含私有的")])]),_._v(" "),v("li",[v("p",[_._v("可以添加任意访问修饰符，因为它的地位就是一个成员")])]),_._v(" "),v("li",[v("p",[_._v("作用域 和外部类的其他成员一样，为整个类体比如前面案例，在外部类的成员方法中创建成员内部类对象，再调用方法")])]),_._v(" "),v("li",[v("p",[_._v("成员内部类 访问 外部类成员 比如 属性 直接访问")])]),_._v(" "),v("li",[v("p",[_._v("外部类 询问 成员内部类 创建对象再访问")])]),_._v(" "),v("li",[v("p",[_._v("外部其他类 成员内部类")])]),_._v(" "),v("li",[v("p",[_._v("如果外部类和内部类的成员重名是，内部类访问的话，默认遵循就近原则，如果像访问外部类的成员，则可以使用 外部类名.this.成员\n去访问")])])]),_._v(" "),v("h3",{attrs:{id:"p421-422-静态内部类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p421-422-静态内部类"}},[_._v("#")]),_._v(" p421 422 静态内部类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("静态内部类时定义在外部类的成员位置")])]),_._v(" "),v("li",[v("p",[_._v("可以直接访问外部类的所有静态成员，包含私有的，但不能直接访问非静态成员")])]),_._v(" "),v("li",[v("p",[_._v("可以添加任意访问修饰符，因为它的地位就是一个成员")])]),_._v(" "),v("li",[v("p",[_._v("作用域：同其他成员，为整个类体")])]),_._v(" "),v("li",[v("p",[_._v("静态内部类 访问 外部类 直接访问")])]),_._v(" "),v("li",[v("p",[_._v("外部类 访问 静态内部类 创建对象，再访问")])]),_._v(" "),v("li",[v("p",[_._v("外部其他类 访问 静态内部类")])]),_._v(" "),v("li",[v("p",[_._v("如果外部类和静态类内部类的成员重名是，就近 访问外部类 外类类名.成员访问")])])]),_._v(" "),v("h2",{attrs:{id:"第11章-枚举和注解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第11章-枚举和注解"}},[_._v("#")]),_._v(" 第11章 枚举和注解")]),_._v(" "),v("h3",{attrs:{id:"p424-枚举类的引出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p424-枚举类的引出"}},[_._v("#")]),_._v(" p424 枚举类的引出")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("季节的值是有限的几个值")])]),_._v(" "),v("li",[v("p",[_._v("只读不需要修改")])])]),_._v(" "),v("h3",{attrs:{id:"p425-自定义枚举"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p425-自定义枚举"}},[_._v("#")]),_._v(" p425 自定义枚举")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("枚举 对应英文 enumeration")])]),_._v(" "),v("li",[v("p",[_._v("枚举是一组常量的集合")])]),_._v(" "),v("li",[v("p",[_._v("可以理解：枚举属于一种特殊的类，里面只包含有一组有限的特定的对象")])]),_._v(" "),v("li",[v("p",[_._v("构造器私有化")])]),_._v(" "),v("li",[v("p",[_._v("本类内部创建一组对象")])]),_._v(" "),v("li",[v("p",[_._v("对外暴露对象 通过为对象添加public final static修饰符")])]),_._v(" "),v("li",[v("p",[_._v("可以提供get方法，但是不要提供set")])])]),_._v(" "),v("h3",{attrs:{id:"p426-枚举类1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p426-枚举类1"}},[_._v("#")]),_._v(" p426 枚举类1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("自定义类实现枚举")])]),_._v(" "),v("li",[v("p",[_._v("使用enum关键字实现枚举")])]),_._v(" "),v("li",[v("p",[_._v("不需要提供setXxx方法，因为枚举对象值通常为只读")])]),_._v(" "),v("li",[v("p",[_._v("对枚举对象通常使用全部大写，常量的命名规范")])]),_._v(" "),v("li",[v("p",[_._v("枚举对象根据需要，也可以有多个属性")])])]),_._v(" "),v("h3",{attrs:{id:"p427-枚举类2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p427-枚举类2"}},[_._v("#")]),_._v(" p427 枚举类2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当我们使用enum关键字开发一个枚举类，默认会继承Enum类，而且是一个final类，老师用javap反编译来证明一下")])]),_._v(" "),v("li",[v("p",[_._v("传统的 public static final Season2 SPRING = new Season2（）；简化为Spring，这里必须知道，它调用的是哪个构造器")])]),_._v(" "),v("li",[v("p",[_._v("如果使用无参构造器 创建枚举对象，则实参列表和小括号都可以省略")])]),_._v(" "),v("li",[v("p",[_._v("当有多个枚举对象时，使用，间隔，最后有一个分号结尾")])]),_._v(" "),v("li",[v("p",[_._v("枚举对象必须放在枚举类的行首")])])]),_._v(" "),v("h3",{attrs:{id:"p428-枚举类3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p428-枚举类3"}},[_._v("#")]),_._v(" p428 枚举类3")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("语法ok 有一个枚举类 没有属性 使用的无参构造器")])]),_._v(" "),v("li",[v("p",[_._v("源码 看看")])])]),_._v(" "),v("h3",{attrs:{id:"p429-enum成员方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p429-enum成员方法"}},[_._v("#")]),_._v(" p429 Enum成员方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用关键字enum时，会隐式继承，这样我们就可以使用该类相关的方法")])]),_._v(" "),v("li",[v("p",[_._v("tostring 返回当前对象名，子类可以重写该方法，用于返回对象")])]),_._v(" "),v("li",[v("p",[_._v("name 返回当前对象名 常量名 子类不能重写")])]),_._v(" "),v("li",[v("p",[_._v("ordinary 返回当前对象的位置号，默认从0开始")])]),_._v(" "),v("li",[v("p",[_._v("values 返回当前枚举类中所有的常量")])]),_._v(" "),v("li",[v("p",[_._v("valuesof 将字符串换成枚举对象，要求字符串必须为已有的常量名，否则报异常")])]),_._v(" "),v("li",[v("p",[_._v("compare to 比较两个枚举常量，比较的就是编号")])]),_._v(" "),v("li",[v("p",[_._v("增强for循环 数组类型 数组元素 ：数组")])])]),_._v(" "),v("h3",{attrs:{id:"p430-enum课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p430-enum课堂练习"}},[_._v("#")]),_._v(" p430 enum课堂练习")]),_._v(" "),v("h3",{attrs:{id:"p431-enum实现接口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p431-enum实现接口"}},[_._v("#")]),_._v(" P431 enum实现接口")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用enum关键字后，不能再继承其他类了，因为enum会隐式继承enum，而java是单继承机制")])]),_._v(" "),v("li",[v("p",[_._v("枚举类和普通类一样，可以实现接口")])])]),_._v(" "),v("h3",{attrs:{id:"p432-override注解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p432-override注解"}},[_._v("#")]),_._v(" p432 override注解")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("注解annotation也被成为元数据metadata，用于修饰 包 类 方法 属性 构造器 局部变量等数据信息")])]),_._v(" "),v("li",[v("p",[_._v("和注释一样，注解不影响程序逻辑，但注解可以被编译运行，相当于嵌入在代码中的补充信息")])]),_._v(" "),v("li",[v("p",[_._v("在javase中，注解的使用目的比较简单，例如标记果实的功能，忽略警告等，在javaee中注解占据了更重要的角色，例如用来配置应用程序的任何切面，代替javaee旧版中所遗留的繁冗代码和xml配置等")])]),_._v(" "),v("li",[v("p",[_._v("使用annotation时，要在其前面加“@”，并把该annotation当成一个修饰符。用于修饰它支持的程序元素。")])]),_._v(" "),v("li",[v("p",[_._v("@override")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("表示指定重写的父类方法，如果父类没有fly方法，则会报错")])]),_._v(" "),v("li",[v("p",[_._v("如果不写，而父类仍有fly，仍然构成重写")])]),_._v(" "),v("li",[v("p",[_._v("只能修饰方法，不能修饰其他类，包，属性")])]),_._v(" "),v("li",[v("p",[_._v("查看 注解源码 说明只能修饰方法")])]),_._v(" "),v("li",[v("p",[_._v("@target")]),_._v(" "),v("ul",[v("li",[_._v("是修饰注解的注解，称为元注解")])])])])])]),_._v(" "),v("h3",{attrs:{id:"p433-deprecated注解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p433-deprecated注解"}},[_._v("#")]),_._v(" p433 deprecated注解")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("用于表示某个程序元素 类 方法等 已过时")])]),_._v(" "),v("li",[v("p",[_._v("可以修饰方法，类，字段，包，参数 等等")])]),_._v(" "),v("li",[v("p",[_._v("可以做到新旧版本的兼容和过渡")])])]),_._v(" "),v("h3",{attrs:{id:"p434-suppress注解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p434-suppress注解"}},[_._v("#")]),_._v(" p434 suppress注解")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("all 所有警告全部删除")])]),_._v(" "),v("li",[v("p",[_._v("unchecked是忽略没有检查的警告")])]),_._v(" "),v("li",[v("p",[_._v("rawtypes是忽略没有指定泛型的警告 传参没有指定泛型的警告错误")])]),_._v(" "),v("li",[v("p",[_._v("unused是忽略没有使用某个变量的警告错误")])]),_._v(" "),v("li",[v("p",[_._v("可以修饰的程序元素为 查看")])]),_._v(" "),v("li",[v("p",[_._v("生成时，不用背直接点击左侧的的黄色提示，就可以选择")])])]),_._v(" "),v("h3",{attrs:{id:"p435-元注解-了解即可"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p435-元注解-了解即可"}},[_._v("#")]),_._v(" p435 元注解 了解即可")]),_._v(" "),v("h3",{attrs:{id:"p436-437-438-439-440-441"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p436-437-438-439-440-441"}},[_._v("#")]),_._v(" p436 437 438 439 440 441")]),_._v(" "),v("h3",{attrs:{id:"_436-静态方法-共享属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_436-静态方法-共享属性"}},[_._v("#")]),_._v(" 436 静态方法 共享属性")]),_._v(" "),v("h3",{attrs:{id:"p442-内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p442-内容梳理"}},[_._v("#")]),_._v(" p442 内容梳理")]),_._v(" "),v("h2",{attrs:{id:"第12章-异常exception"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第12章-异常exception"}},[_._v("#")]),_._v(" 第12章 异常Exception")]),_._v(" "),v("h3",{attrs:{id:"p443-444-异常入门介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p443-444-异常入门介绍"}},[_._v("#")]),_._v(" p443 444 异常入门介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java语言中，将程序执行中发生的不正常情况 称为异常 语法和逻辑错误不是异常")])]),_._v(" "),v("li",[v("p",[_._v("exception 其他编程错误或偶然的外在因素导致的一般性问题，可以使用针对性的代码进行处理，例如空指针访问，试图读取不存在的文件，网络连接中断等等，分为两大类\n运行时异常 编译时异常")])]),_._v(" "),v("li",[v("p",[_._v("error java虚拟机无法解决的严重问题，如：jvm系统内部错误，资源等严重情况，栈溢出，oom，程序会崩溃")])]),_._v(" "),v("li",[v("p",[_._v("运行代码看看问题")])])]),_._v(" "),v("h3",{attrs:{id:"p445-异常体系图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p445-异常体系图"}},[_._v("#")]),_._v(" p445 异常体系图")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("两大类")])]),_._v(" "),v("li",[v("p",[_._v("runtime")])]),_._v(" "),v("li",[v("p",[_._v("效率")])]),_._v(" "),v("li",[v("p",[_._v("编译异常 必须处置的异常")])])]),_._v(" "),v("h3",{attrs:{id:"p446-五大运行时异常"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p446-五大运行时异常"}},[_._v("#")]),_._v(" p446 五大运行时异常")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("空指针异常")])]),_._v(" "),v("li",[v("p",[_._v("数学运算异常")])]),_._v(" "),v("li",[v("p",[_._v("数组下标越界异常")])]),_._v(" "),v("li",[v("p",[_._v("类型转换异常")])]),_._v(" "),v("li",[v("p",[_._v("数字格式不正确异常")])])]),_._v(" "),v("h3",{attrs:{id:"p447-编译异常"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p447-编译异常"}},[_._v("#")]),_._v(" p447 编译异常")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("sql")])]),_._v(" "),v("li",[v("p",[_._v("io")])]),_._v(" "),v("li",[v("p",[_._v("filenotfound")])]),_._v(" "),v("li",[v("p",[_._v("classnotfound")])]),_._v(" "),v("li",[v("p",[_._v("eofe")]),_._v(" "),v("ul",[v("li",[_._v("操作文件 到文件末尾 发生异常")])])]),_._v(" "),v("li",[v("p",[_._v("illegalargument")])])]),_._v(" "),v("h3",{attrs:{id:"p448-异常处理机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p448-异常处理机制"}},[_._v("#")]),_._v(" p448 异常处理机制")]),_._v(" "),v("ul",[v("li",[_._v("try catch finally")]),_._v(" "),v("li",[_._v("throws 抛出 调用者 方法来处理 最顶级的处理者jvm 直接输出异常信息 退出程序")]),_._v(" "),v("li",[_._v("有示意图，没有显示是处理异常，默认throws")])]),_._v(" "),v("h3",{attrs:{id:"p449-trycatch"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p449-trycatch"}},[_._v("#")]),_._v(" p449 trycatch")]),_._v(" "),v("h3",{attrs:{id:"p450-trycatch练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p450-trycatch练习"}},[_._v("#")]),_._v(" p450 trycatch练习")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("catch到 finally要执行 执行finally")])]),_._v(" "),v("li",[v("p",[_._v("++i 4")])]),_._v(" "),v("li",[v("p",[_._v("return不能马上执行 所以又回到3 答案 4 3")])]),_._v(" "),v("li",[v("p",[_._v("如果没有异常，则执行try块中所有语句，不执行catch块中的语句，如果有finally，最后还学要执行finally里面的语句")])]),_._v(" "),v("li",[v("p",[_._v("如果出现异常，则try块中异常发生后，try块剩下的语句不再执行。将执行catch块中的语句，如果有finally，最后还需要执行finally里面的语句")])])]),_._v(" "),v("h3",{attrs:{id:"p451-trycatch最佳实践"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p451-trycatch最佳实践"}},[_._v("#")]),_._v(" p451 trycatch最佳实践")]),_._v(" "),v("ul",[v("li",[_._v("用户输入不是一个整数，就提示他反复输入，用异常来写")])]),_._v(" "),v("h3",{attrs:{id:"p452-throws入门案例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p452-throws入门案例"}},[_._v("#")]),_._v(" p452 throws入门案例")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("如果一个方法可能生成某种异常，但并能确定如何处理这种异常，则此方法应显示的声明抛出异常，表明方法将不对这些异常进行处理，而有该方法的调用者负责处理")])]),_._v(" "),v("li",[v("p",[_._v("在方法声明中用throws语句可以声明抛出异常的列表，throws后面的异常类型可以是方法中产生的异常类型，也可以是它的父类")])])]),_._v(" "),v("h3",{attrs:{id:"p453-异常细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p453-异常细节"}},[_._v("#")]),_._v(" p453 异常细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("必须处理 两种方法")])]),_._v(" "),v("li",[v("p",[_._v("运行时异常，程序中如果没有处理，默认就是throws的方式处理")])]),_._v(" "),v("li",[v("p",[_._v("子类重写父类的方法时，对抛出异常的规定，子类的重写方法，所抛出的异常类型要么和父类抛出的异常一致，要么父类抛出的异常的类型的子类型")])]),_._v(" "),v("li",[v("p",[_._v("在throws过程中，如果有方法try catch，就相当于处理异常，就可以不必throws")])]),_._v(" "),v("li",[v("p",[_._v("f3抛出一个编译异常 f1必须处理这个编译异常 要么try要么throws")])]),_._v(" "),v("li",[v("p",[_._v("ok 运行异常 不要求显示处理 有默认处理机制")])])]),_._v(" "),v("h3",{attrs:{id:"p454-自定义异常"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p454-自定义异常"}},[_._v("#")]),_._v(" p454 自定义异常")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当程序中出现了某些错误，但该错误信息并没有在throwable子类中描述处理，这个时候可以自己设计异常类，用于描述该错误信息")])]),_._v(" "),v("li",[v("p",[_._v("自定义异常的步骤")]),_._v(" "),v("ul",[v("li",[_._v("定义类：自定义异常类名 程序员自己写 继承exception或runtimeexception描述处理，前者编译异常，后者运行异常")])])]),_._v(" "),v("li",[v("p",[_._v("接受person对象年龄，要求18-120之间，否则抛出一个自定义异常")])])]),_._v(" "),v("h3",{attrs:{id:"p455-throws和throw区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p455-throws和throw区别"}},[_._v("#")]),_._v(" p455 throws和throw区别")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("异常处理的一种方式 犯法声明处 异常类型")])]),_._v(" "),v("li",[v("p",[_._v("手动生成异常对象的关键字 方法体中 异常对象")])]),_._v(" "),v("li",[v("p",[_._v("进入方法a，用a的finally，制造异常，进入方法b，调用b的finally")])])]),_._v(" "),v("h3",{attrs:{id:"p456-457"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p456-457"}},[_._v("#")]),_._v(" p456 457")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("数据 number format 命令行 array index out of bounds 除0 arithmetic")])]),_._v(" "),v("li",[v("p",[_._v("错误 空指针异常 向上转型 错误 发生class cast 字符串和基本数据类型不同")])]),_._v(" "),v("li",[v("p",[_._v("CBAD 抛出异常b c d p449")])]),_._v(" "),v("li",[v("p",[_._v("bcd 程序不崩溃接着输出")])])]),_._v(" "),v("h3",{attrs:{id:"p458-异常处理小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p458-异常处理小结"}},[_._v("#")]),_._v(" p458 异常处理小结")]),_._v(" "),v("h2",{attrs:{id:"第13章-常用类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第13章-常用类"}},[_._v("#")]),_._v(" 第13章 常用类")]),_._v(" "),v("p",[_._v("没有听得太仔细，这段时间比较浮躁")]),_._v(" "),v("h3",{attrs:{id:"p459-八大wrapper类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p459-八大wrapper类"}},[_._v("#")]),_._v(" p459 八大wrapper类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("针对八种基本数据类型相应的引用类型 包装类")]),_._v(" "),v("ul",[v("li",[_._v("bool byte integer long double short float character")])])]),_._v(" "),v("li",[v("p",[_._v("包装类 是 基本数据类型的大写 用了就可以调用类的方法")])]),_._v(" "),v("li",[v("p",[_._v("number子类 comparable接口类子类")])])]),_._v(" "),v("h3",{attrs:{id:"p460-装箱和拆箱"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p460-装箱和拆箱"}},[_._v("#")]),_._v(" p460 装箱和拆箱")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("基本类型到包装类型 底层valueof")])]),_._v(" "),v("li",[v("p",[_._v("jdk5")]),_._v(" "),v("ul",[v("li",[_._v("自动拆箱和装箱 都是变量名 但自己要注意是包装类型还是基本数据类型")])])])]),_._v(" "),v("h3",{attrs:{id:"p461-包装类测试"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p461-包装类测试"}},[_._v("#")]),_._v(" p461 包装类测试")]),_._v(" "),v("ul",[v("li",[_._v("三元运算符 一真大师 1.0")])]),_._v(" "),v("h3",{attrs:{id:"p462-包装类方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p462-包装类方法"}},[_._v("#")]),_._v(" p462 包装类方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("i+空串")])]),_._v(" "),v("li",[v("p",[_._v("i.tostring")])]),_._v(" "),v("li",[v("p",[_._v("string.valueof i")])]),_._v(" "),v("li",[v("p",[_._v("构造器的方式new一个")])]),_._v(" "),v("li",[v("p",[_._v("返回最大最小值 很多类方法")])])]),_._v(" "),v("h3",{attrs:{id:"p463-integer创建机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p463-integer创建机制"}},[_._v("#")]),_._v(" p463 integer创建机制")]),_._v(" "),v("ul",[v("li",[_._v("对 错 不行 实际答案 错 新对象 对 底层valueof 看源码 错误 不在范围内 所以new的")])]),_._v(" "),v("h3",{attrs:{id:"p464-面试题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p464-面试题"}},[_._v("#")]),_._v(" p464 面试题")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("new false")])]),_._v(" "),v("li",[v("p",[_._v("超出范围 new 没超出 valueof")])])]),_._v(" "),v("h3",{attrs:{id:"p465-string结构剖析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p465-string结构剖析"}},[_._v("#")]),_._v(" p465 string结构剖析")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("三接口一O")])]),_._v(" "),v("li",[v("p",[_._v("串行化 比较 字符顺序 object")])]),_._v(" "),v("li",[v("p",[_._v("双引号 构造器很多")])]),_._v(" "),v("li",[v("p",[_._v("string是final类不能被继承 value是一个final类型，不能被修改 string有属性 private final char value[]")])]),_._v(" "),v("li",[v("p",[_._v("不让指向新的数据空间 新地址")])])]),_._v(" "),v("h3",{attrs:{id:"p466-string创建剖析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p466-string创建剖析"}},[_._v("#")]),_._v(" p466 string创建剖析")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("直接赋值")])]),_._v(" "),v("li",[v("p",[_._v("调用构造器")])])]),_._v(" "),v("h3",{attrs:{id:"p467-468-string测试题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p467-468-string测试题"}},[_._v("#")]),_._v(" p467 468 string测试题")]),_._v(" "),v("p",[_._v("堆 池")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("a指向常量池 b指向堆中的对象 再指向常量池")]),_._v(" "),v("ul",[v("li",[_._v("对 错 地址比较 对 intern 返回池中的返回字符串")])])]),_._v(" "),v("li",[v("p",[_._v("错 对 对 错")])]),_._v(" "),v("li",[v("p",[_._v("对 错 对 错 实际答案 对 对 对 错")])])]),_._v(" "),v("h3",{attrs:{id:"p469-string对象特性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p469-string对象特性"}},[_._v("#")]),_._v(" p469 string对象特性")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("创建了两个对象")])]),_._v(" "),v("li",[v("p",[_._v("一个对象，底层优化")])]),_._v(" "),v("li",[v("p",[_._v("三个 实际上 三个 ==指地址 错误 对")])]),_._v(" "),v("li",[v("p",[_._v("原来字符串基础上追加的")])]),_._v(" "),v("li",[v("p",[_._v("字符串相加 直接看池 变量相加看堆 尽量看源码学习")])])]),_._v(" "),v("h3",{attrs:{id:"p470-对象特性2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p470-对象特性2"}},[_._v("#")]),_._v(" p470 对象特性2")]),_._v(" "),v("ul",[v("li",[_._v("对 对")])]),_._v(" "),v("h3",{attrs:{id:"p471-472-473-string常用方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p471-472-473-string常用方法"}},[_._v("#")]),_._v(" p471 472 473 string常用方法")]),_._v(" "),v("ul",[v("li",[_._v("builder buffer")])]),_._v(" "),v("h3",{attrs:{id:"p474-string-buffer"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p474-string-buffer"}},[_._v("#")]),_._v(" p474 string buffer")]),_._v(" "),v("ul",[v("li",[_._v("可变的字符串长度 是一个final类")])]),_._v(" "),v("h3",{attrs:{id:"p475-string-buffer-转换"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p475-string-buffer-转换"}},[_._v("#")]),_._v(" p475 string buffer 转换")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用构造器")])]),_._v(" "),v("li",[v("p",[_._v("使用append方法")])]),_._v(" "),v("li",[v("p",[_._v("到string tostring")])]),_._v(" "),v("li",[v("p",[_._v("构造器")])])]),_._v(" "),v("h3",{attrs:{id:"p476-string-buffer-方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p476-string-buffer-方法"}},[_._v("#")]),_._v(" p476 string buffer 方法")]),_._v(" "),v("h3",{attrs:{id:"p477-string-buffer-练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p477-string-buffer-练习"}},[_._v("#")]),_._v(" p477 string buffer 练习")]),_._v(" "),v("h3",{attrs:{id:"p478-string-builder类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p478-string-builder类"}},[_._v("#")]),_._v(" p478 string builder类")]),_._v(" "),v("h3",{attrs:{id:"p479-三者对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p479-三者对比"}},[_._v("#")]),_._v(" p479 三者对比")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("如果字符串存在大量的修改操作，一般sb")])]),_._v(" "),v("li",[v("p",[_._v("单线程 sbuilder")])]),_._v(" "),v("li",[v("p",[_._v("多线程 sbuffer")])]),_._v(" "),v("li",[v("p",[_._v("很少改 多对象引用 string 配置信息")])])]),_._v(" "),v("h3",{attrs:{id:"p480-math方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p480-math方法"}},[_._v("#")]),_._v(" p480 math方法")]),_._v(" "),v("ul",[v("li",[_._v("给个区间让你配配")])]),_._v(" "),v("h3",{attrs:{id:"p481-arrays排序源码解读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p481-arrays排序源码解读"}},[_._v("#")]),_._v(" p481 arrays排序源码解读")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("tostring展示数组")])]),_._v(" "),v("li",[v("p",[_._v("sort方法重载")])]),_._v(" "),v("li",[v("p",[_._v("影响实参arr")])]),_._v(" "),v("li",[v("p",[_._v("接口编程的方式")])])]),_._v(" "),v("h3",{attrs:{id:"p482-模拟排序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p482-模拟排序"}},[_._v("#")]),_._v(" p482 模拟排序")]),_._v(" "),v("h3",{attrs:{id:"p483-array其他常见方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p483-array其他常见方法"}},[_._v("#")]),_._v(" p483 array其他常见方法")]),_._v(" "),v("h3",{attrs:{id:"p484-array课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p484-array课堂练习"}},[_._v("#")]),_._v(" p484 array课堂练习")]),_._v(" "),v("h3",{attrs:{id:"p485-system方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p485-system方法"}},[_._v("#")]),_._v(" p485 system方法")]),_._v(" "),v("h3",{attrs:{id:"p486-大数处理方案"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p486-大数处理方案"}},[_._v("#")]),_._v(" p486 大数处理方案")]),_._v(" "),v("h3",{attrs:{id:"p487-data介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p487-data介绍"}},[_._v("#")]),_._v(" p487 data介绍")]),_._v(" "),v("h3",{attrs:{id:"p488-data应用实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p488-data应用实例"}},[_._v("#")]),_._v(" p488 data应用实例")]),_._v(" "),v("h3",{attrs:{id:"p489-calendar介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p489-calendar介绍"}},[_._v("#")]),_._v(" p489 calendar介绍")]),_._v(" "),v("h3",{attrs:{id:"p490-calendar应用实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p490-calendar应用实例"}},[_._v("#")]),_._v(" p490 calendar应用实例")]),_._v(" "),v("h3",{attrs:{id:"p491-p492第三代日期使用-方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p491-p492第三代日期使用-方法"}},[_._v("#")]),_._v(" p491 p492第三代日期使用 方法")]),_._v(" "),v("h3",{attrs:{id:"p493-string翻转"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p493-string翻转"}},[_._v("#")]),_._v(" p493 string翻转")]),_._v(" "),v("h3",{attrs:{id:"p494-注册处理题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p494-注册处理题"}},[_._v("#")]),_._v(" p494 注册处理题")]),_._v(" "),v("h3",{attrs:{id:"p495-字符串统计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p495-字符串统计"}},[_._v("#")]),_._v(" p495 字符串统计")]),_._v(" "),v("h3",{attrs:{id:"p496-string内存布局测试题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p496-string内存布局测试题"}},[_._v("#")]),_._v(" p496 string内存布局测试题")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("错 对 对 错 错 对")])]),_._v(" "),v("li",[v("p",[_._v("正确答案 错 错 对 错 对")])])]),_._v(" "),v("h3",{attrs:{id:"p497-常用类阶段梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p497-常用类阶段梳理"}},[_._v("#")]),_._v(" p497 常用类阶段梳理")]),_._v(" "),v("h2",{attrs:{id:"第14章-集合"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第14章-集合"}},[_._v("#")]),_._v(" 第14章 集合")]),_._v(" "),v("h3",{attrs:{id:"p498-集合介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p498-集合介绍"}},[_._v("#")]),_._v(" p498 集合介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("数组不足的地方 长度开始是必须指定，而且一旦指定，不能更改")])]),_._v(" "),v("li",[v("p",[_._v("保存必须是同一类型的元素")])]),_._v(" "),v("li",[v("p",[_._v("使用数组进行增加删除元素的示意代码 比较麻烦")])]),_._v(" "),v("li",[v("p",[_._v("集合")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("可以动态保存任意多个对象，使用比较方便")])]),_._v(" "),v("li",[v("p",[_._v("提供了一系列方便的操作对象的方法：add、remove、set、get")])]),_._v(" "),v("li",[v("p",[_._v("使用集合添加，删除新元素的示意代码 更简洁")])])])])]),_._v(" "),v("h3",{attrs:{id:"p499-集合体系图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p499-集合体系图"}},[_._v("#")]),_._v(" p499 集合体系图")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("集合主要是两组 单列集合，双列集合")])]),_._v(" "),v("li",[v("p",[_._v("collection 接口有两个重要的子接口listset，他们实现子类都是单列集合")])]),_._v(" "),v("li",[v("p",[_._v("map 接口的实现子类 是双列集合 存放的 k-v")])])]),_._v(" "),v("h3",{attrs:{id:"p500-collection接口和方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p500-collection接口和方法"}},[_._v("#")]),_._v(" p500 collection接口和方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("collection实现子类可以存放多个元素，每个元素可以是object")])]),_._v(" "),v("li",[v("p",[_._v("有些collection的实现类，可以存放重复的元素，有些不可以")])]),_._v(" "),v("li",[v("p",[_._v("有些collection的实现类，有些是有序的list，有些是无序的set")])]),_._v(" "),v("li",[v("p",[_._v("collection接口没有直接的实现子类，是通过它的子接口set和list来实现的")])])]),_._v(" "),v("h3",{attrs:{id:"p501-迭代器遍历"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p501-迭代器遍历"}},[_._v("#")]),_._v(" p501 迭代器遍历")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("接口遍历元素方式1 使用iterator迭代器")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("iterator对象称为迭代器，主要用于遍历collection集合中的元素")])]),_._v(" "),v("li",[v("p",[_._v("所有实现了collection接口的集合类都有一个iterator（）方法，用以返回一个实现了iterator接口的对象，即可以返回一个迭代器")])]),_._v(" "),v("li",[v("p",[_._v("iterator结构")])]),_._v(" "),v("li",[v("p",[_._v("iterator仅用于遍历集合，本身并不存放对象")])]),_._v(" "),v("li",[v("p",[_._v("迭代器运行原理 iterator iterator = coll.iterator（）； 得到一个集合的迭代器 hasNext（）：判断是否还有下一个元素\nwhile（iterator.hasNext（）}{next（）；指针下移，将下移以后集合位置上的元素返回 sout iterator。next（）；}")])]),_._v(" "),v("li",[v("p",[_._v("hasnext next remove 必须先has 再next 否则抛出异常")])])])])]),_._v(" "),v("h3",{attrs:{id:"p502-增强for循环"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p502-增强for循环"}},[_._v("#")]),_._v(" p502 增强for循环")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("增强for循环，可以代替iterator迭代器，特点：增强for就是简化版的iterator，本质一样，只能用于遍历集合和数组")])]),_._v(" "),v("li",[v("p",[_._v("基本语法 for 元素类型 元素名 ： 集合或数组名 {访问元素}")])])]),_._v(" "),v("h3",{attrs:{id:"p503-collection练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p503-collection练习"}},[_._v("#")]),_._v(" p503 collection练习")]),_._v(" "),v("h3",{attrs:{id:"p504-list接口方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p504-list接口方法"}},[_._v("#")]),_._v(" p504 list接口方法")]),_._v(" "),v("p",[_._v("链表")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("list接口是collection接口的子接口")])]),_._v(" "),v("li",[v("p",[_._v("list集合类中的元素有序 即添加顺序和取出顺序一致 即可重复")])]),_._v(" "),v("li",[v("p",[_._v("list集合中的每个元素都有其对应的顺序索引，即支持索引")])]),_._v(" "),v("li",[v("p",[_._v("list容器中的元素都对应一个整数型的序号记载其在容器中的位置，可以根据序号存取容器中的元素")])]),_._v(" "),v("li",[v("p",[_._v("jdk api 中list接口的实现类有 常用的有ArrayList、linkedlist、vector")])])]),_._v(" "),v("h3",{attrs:{id:"p505-list练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p505-list练习"}},[_._v("#")]),_._v(" p505 list练习")]),_._v(" "),v("h3",{attrs:{id:"p506-list的三种遍历方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p506-list的三种遍历方式"}},[_._v("#")]),_._v(" p506 list的三种遍历方式")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("iterator")])]),_._v(" "),v("li",[v("p",[_._v("增强for")])]),_._v(" "),v("li",[v("p",[_._v("使用普通for循环")])]),_._v(" "),v("li",[v("p",[_._v("使用LinkedList完成 使用方式 和 ArrayList一样")])])]),_._v(" "),v("h3",{attrs:{id:"p507-list排序练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p507-list排序练习"}},[_._v("#")]),_._v(" p507 list排序练习")]),_._v(" "),v("h3",{attrs:{id:"p508-arraylist注意事项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p508-arraylist注意事项"}},[_._v("#")]),_._v(" p508 Arraylist注意事项")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("permits all elements，including null，arraylist 可以加入null 并且多个")])]),_._v(" "),v("li",[v("p",[_._v("ArrayList 是由数组来实现数据存储的")])]),_._v(" "),v("li",[v("p",[_._v("ArrayList基本等同于vector，除了arraylist是线程不安全（执行效率高），在多线程情况下，不建议使用ArrayList")])])]),_._v(" "),v("h3",{attrs:{id:"p509-arraylist扩容机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p509-arraylist扩容机制"}},[_._v("#")]),_._v(" p509 ArrayList扩容机制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("arraylist中维护了一个object类型的数组elementdata transient object[] elementdata; transient 表示瞬间，短暂的，表示该属性不会被序列化")])]),_._v(" "),v("li",[v("p",[_._v("当创建ArrayList对象是，如果使用的是无参构造器，则初始elementdata容量为0，第一次添加，则扩容elementData 为\n10，如需要再次扩容，则扩容elementdata为1.5倍")])]),_._v(" "),v("li",[v("p",[_._v("如果使用的是指定大小的构造器，则初始elementdata容量为指定大小，如果需要扩容，则直接扩容为1.5倍")])])]),_._v(" "),v("h3",{attrs:{id:"p510-511arraylist底层源码1-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p510-511arraylist底层源码1-2"}},[_._v("#")]),_._v(" p510 511arraylist底层源码1 2")]),_._v(" "),v("p",[_._v("自己去走一圈源码 经常练习 就像和亲人一样")]),_._v(" "),v("h3",{attrs:{id:"p512-vector注意事项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p512-vector注意事项"}},[_._v("#")]),_._v(" p512 vector注意事项")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("vector类的定义说明 继承了abstractlist 接口有list等等")])]),_._v(" "),v("li",[v("p",[_._v("vector底层也是一个对象数组，protected object[] elementData;")])]),_._v(" "),v("li",[v("p",[_._v("vector是线程同步的，即线程安全，vector类的操作方法带有synchronized")])]),_._v(" "),v("li",[v("p",[_._v("在开发中，需要线程同步安全时，考虑使用")])])]),_._v(" "),v("h3",{attrs:{id:"p513-vector源码解读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p513-vector源码解读"}},[_._v("#")]),_._v(" p513 vector源码解读")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Vector和ArrayList的比较")])]),_._v(" "),v("li",[v("p",[_._v("ArrayList 可变数组 jdk1.2 不安全 效率高 如果有参构造器1.5倍 如果无参 10 第二次1.5倍扩")])]),_._v(" "),v("li",[v("p",[_._v("vector 可变数组object[] jdk1.0 安全 效率不高 如果是无参 默认10 满后 就按2倍扩容")])])]),_._v(" "),v("h3",{attrs:{id:"p514-linkedlist底层结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p514-linkedlist底层结构"}},[_._v("#")]),_._v(" p514 linkedlist底层结构")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("linkedlist底层实现了双向链表和双端队列的特点")])]),_._v(" "),v("li",[v("p",[_._v("可以添加任意元素，元素可以重复，包括null")])]),_._v(" "),v("li",[v("p",[_._v("线程不安全，没有实现同步")])]),_._v(" "),v("li",[v("p",[_._v("first last prev next item 添加和删除比较简单 效率比较高 模拟一个简单的双向链表")])])]),_._v(" "),v("h3",{attrs:{id:"p515-linkedlist源码图解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p515-linkedlist源码图解"}},[_._v("#")]),_._v(" p515 linkedlist源码图解")]),_._v(" "),v("ul",[v("li",[_._v("追add源码")])]),_._v(" "),v("h3",{attrs:{id:"p516-list集合选择"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p516-list集合选择"}},[_._v("#")]),_._v(" p516 list集合选择")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("对比")])]),_._v(" "),v("li",[v("p",[_._v("ArrayList 可变数组 增删较低 数组扩容 改查效率较高")])]),_._v(" "),v("li",[v("p",[_._v("linkedlist 双向链表 增删效率较高 改查效率较低")])])]),_._v(" "),v("h3",{attrs:{id:"p517-set接口方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p517-set接口方法"}},[_._v("#")]),_._v(" p517 set接口方法")]),_._v(" "),v("p",[_._v("链表+数组")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("无序 添加和取出的顺序不一致，没有索引")])]),_._v(" "),v("li",[v("p",[_._v("不允许重复元素，所以最多包含一个null")])]),_._v(" "),v("li",[v("p",[_._v("和list接口一样，set接口也是collection的子接口，因此，常用方法和collection接口一样")])]),_._v(" "),v("li",[v("p",[_._v("可以使用迭代器 增强for 不能使用索引的方式来获取")])])]),_._v(" "),v("h3",{attrs:{id:"p518-hashset全面说明"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p518-hashset全面说明"}},[_._v("#")]),_._v(" p518 hashset全面说明")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("hashset实现了set接口")])]),_._v(" "),v("li",[v("p",[_._v("hashset实际上是hashmap")])]),_._v(" "),v("li",[v("p",[_._v("可以存放null值，但是只能有一个null")])]),_._v(" "),v("li",[v("p",[_._v("hashset不保证元素是有序的，取决于hash后，再确定索引的结果")])]),_._v(" "),v("li",[v("p",[_._v("不能有重复元素/对象 在前面set接口使用已经讲过")])])]),_._v(" "),v("h3",{attrs:{id:"p519-数组链表模拟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p519-数组链表模拟"}},[_._v("#")]),_._v(" p519 数组链表模拟")]),_._v(" "),v("ul",[v("li",[_._v("hashset底层是hashmap，hashmap底层是数组+链表+红黑树")])]),_._v(" "),v("h3",{attrs:{id:"p520-hashset扩容机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p520-hashset扩容机制"}},[_._v("#")]),_._v(" p520 hashset扩容机制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("分析hashset的添加元素底层是如何实现 hash（） + equals（）")])]),_._v(" "),v("li",[v("p",[_._v("添加有一个元素是，先得到hash值，会转成 索引值")])]),_._v(" "),v("li",[v("p",[_._v("找到存储数据表table，看这个索引位置是否已经存放有元素，如果没有直接加入")])]),_._v(" "),v("li",[v("p",[_._v("如果有，调用equals比较，如果相同，就放弃添加，如果不相同，则添加到最后")])]),_._v(" "),v("li",[v("p",[_._v("在java8中，如果有一条链表的元素个数到达treeify threshold 默认是8，并且table的大小 大于等于 min treeify capacity 默认64\n就会进行红黑树化")])])]),_._v(" "),v("h3",{attrs:{id:"p521-522-523-524-hashset源码解读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p521-522-523-524-hashset源码解读"}},[_._v("#")]),_._v(" p521 522 523 524 hashset源码解读")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("加载因子 0.75 超过临界值 扩容 大于树化 变成红黑树")])]),_._v(" "),v("li",[v("p",[_._v("实际扩容大小 16 32 64")])]),_._v(" "),v("li",[v("p",[_._v("邻接表树化感觉听明白了，一个是链表")])]),_._v(" "),v("li",[v("p",[_._v("扩容是扩大小 不是链表长度\n理解的可能有问题")])])]),_._v(" "),v("h3",{attrs:{id:"p525-hashset最佳实践"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p525-hashset最佳实践"}},[_._v("#")]),_._v(" p525 hashset最佳实践")]),_._v(" "),v("ul",[v("li",[_._v("三个不同的对象，要重写equals")])]),_._v(" "),v("h3",{attrs:{id:"p526-hashset思考题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p526-hashset思考题"}},[_._v("#")]),_._v(" p526 hashset思考题")]),_._v(" "),v("h3",{attrs:{id:"p527-linkedhashset介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p527-linkedhashset介绍"}},[_._v("#")]),_._v(" p527 linkedhashset介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("lhs是hs的子类")])]),_._v(" "),v("li",[v("p",[_._v("lhs底层是一个linkedhashmap，底层维护了一个 数组+双向链表")])]),_._v(" "),v("li",[v("p",[_._v("lhs根据元素的hc值决定元素的存储位置，同时使用链表维护元素的次序，这使得元素看起来是以插入顺序保存的")])]),_._v(" "),v("li",[v("p",[_._v("不允许添加重复元素")])]),_._v(" "),v("li",[v("p",[_._v("lhs中维护了一个hash表和双向链表 有head和tail")])]),_._v(" "),v("li",[v("p",[_._v("每一个节点有before和after属性，这样可以形成双线链表")])]),_._v(" "),v("li",[v("p",[_._v("在添加每一个元素时，先求hash值，再求索引，确定该元素在table的位置，然后将添加的元素加入到双向链表，如果已经存在就不添加，\n原则和hashset一样 t.next = new e;new e.pre = tail;tail = new e;")])]),_._v(" "),v("li",[v("p",[_._v("遍历lhs也能确保插入顺序和遍历顺序一致")])])]),_._v(" "),v("h3",{attrs:{id:"p528-linkedhashset源码解读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p528-linkedhashset源码解读"}},[_._v("#")]),_._v(" p528 linkedhashset源码解读")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("线索哈希表 hhhh")])]),_._v(" "),v("li",[v("p",[_._v("讲源码但是没有讲结构具体长什么样")])])]),_._v(" "),v("h3",{attrs:{id:"p529-linkedhashset课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p529-linkedhashset课堂练习"}},[_._v("#")]),_._v(" p529 linkedhashset课堂练习")]),_._v(" "),v("h3",{attrs:{id:"p530-531-map接口特点1-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p530-531-map接口特点1-2"}},[_._v("#")]),_._v(" p530 531 map接口特点1 2")]),_._v(" "),v("p",[_._v("图 键值对")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("jdk8的map接口特点")])]),_._v(" "),v("li",[v("p",[_._v("map和collection并列存在，用于保存具有映射关系的数据 key value")])]),_._v(" "),v("li",[v("p",[_._v("map中的key和value可以是任何引用类型的数据，会封装到hashmap$Node对象中")])]),_._v(" "),v("li",[v("p",[_._v("map中的key不允许重复，原因和hashset一样，分析过源码，value可以重复")])]),_._v(" "),v("li",[v("p",[_._v("map的key可以为null，value也可以为null，注意key为null，只能有一个，value为null，可以多个")])]),_._v(" "),v("li",[v("p",[_._v("常用string类作为map的key")])]),_._v(" "),v("li",[v("p",[_._v("key和value之间存在单向一对一关系，即通过指定的key总能找到对应的value")])]),_._v(" "),v("li",[v("p",[_._v("map存放数据的key value示意图，一对k-v是放在hashmap$Node中的，因为Node实现了Entry接口，有些书上也说k-v就是一个Entry")])])]),_._v(" "),v("h3",{attrs:{id:"p532-map接口方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p532-map接口方法"}},[_._v("#")]),_._v(" p532 map接口方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("remove 根据键删除映射关系")])]),_._v(" "),v("li",[v("p",[_._v("get 根据键获取值")])]),_._v(" "),v("li",[v("p",[_._v("size 获取元素个数")])]),_._v(" "),v("li",[v("p",[_._v("isEmpty 判断个数是否为0")])]),_._v(" "),v("li",[v("p",[_._v("clear 清除k-v")])]),_._v(" "),v("li",[v("p",[_._v("containKey 查找键是否存在")])])]),_._v(" "),v("h3",{attrs:{id:"p533-map六大遍历方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p533-map六大遍历方式"}},[_._v("#")]),_._v(" p533 map六大遍历方式")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("containkey 是否存在")])]),_._v(" "),v("li",[v("p",[_._v("keySet 获取所有的键")])]),_._v(" "),v("li",[v("p",[_._v("entrySet 获取所有关系k-v")])]),_._v(" "),v("li",[v("p",[_._v("values 获取所有的值")])])]),_._v(" "),v("h3",{attrs:{id:"p534-map课堂练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p534-map课堂练习"}},[_._v("#")]),_._v(" p534 Map课堂练习")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("map 是 put进入 value也可以是对象 取对象的值的时候应该向下转型")])]),_._v(" "),v("li",[v("p",[_._v("object类到employee类 一层一层 可以向下转型一步到位")])])]),_._v(" "),v("h3",{attrs:{id:"p535-hashmap阶段小结"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p535-hashmap阶段小结"}},[_._v("#")]),_._v(" p535 HashMap阶段小结")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("map接口的常用实现：hashmap、hashtable和properties")])]),_._v(" "),v("li",[v("p",[_._v("hashmap是map接口使用频率最高的实现类")])]),_._v(" "),v("li",[v("p",[_._v("hashmap是以key-value对的方式来存储数据（hashmao$node类型）")])]),_._v(" "),v("li",[v("p",[_._v("key不能重复，但是值可以重读，允许使用null键和null值")])]),_._v(" "),v("li",[v("p",[_._v("如果添加相同的key，则会覆盖原来的key-val，等同于修改")])]),_._v(" "),v("li",[v("p",[_._v("与hashset一样，不保证映射的顺序，因为底层是以hash表的方式来存储的 jdk8 的 hashmap 底层 数组+链表+红黑树")])]),_._v(" "),v("li",[v("p",[_._v("hashmap没有实现同步，因此线程是不安全的，方法没有做同步互斥的操作，没有synchronized")])]),_._v(" "),v("li",[v("h3",{attrs:{id:"p536-hashmap底层机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p536-hashmap底层机制"}},[_._v("#")]),_._v(" p536 HashMap底层机制")]),_._v(" "),v("p",[_._v("这里老韩大概说了要学到什么程度")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("基础+javaweb+主流框架就可以了")])]),_._v(" "),v("li",[v("p",[_._v("（k，v）是一个node实现了map.entry<K,V>,查看hashmap的源码可以看到")])]),_._v(" "),v("li",[v("p",[_._v("jdk7的hashmap底层实现 数组+链表 jdk 8.0 底层 数组链表红黑树")])]),_._v(" "),v("li",[v("p",[_._v("hashmap底层维护了node类型的数组table，默认为null")])]),_._v(" "),v("li",[v("p",[_._v("当创建对象是，将加载因子loadfactor 初始化为0.75")])]),_._v(" "),v("li")]),_._v(" "),v("p",[_._v("当添加key-val时，通过key的哈希值得到在table的索引。然后判断该索引处是否有元素，如果没有元素直接添加。如果该索引有元素，继续判断该元素的key和准备加入的key是否相等，如果相等，则直接替换value；如果不相等需要判断是树结构还是链表结构，做出相应处理。如果添加时发现容量不够，则需要扩容")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("第一次添加，则需要扩容table容量为16，临界值threshold为12，以后再扩容，则需要扩容table容量为原来的2倍，临界值为原来的2倍，即24，依次类推")])]),_._v(" "),v("li",[v("p",[_._v("在java8中，如果一条链表的元素个数超过了treeify threshold 默认为8 ，并且table的大小 >=min treeify capacity\n默认64，就会进行树化 红黑树")])])])])]),_._v(" "),v("h3",{attrs:{id:"p537-hashmap源码解读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p537-hashmap源码解读"}},[_._v("#")]),_._v(" p537 Hashmap源码解读")]),_._v(" "),v("ul",[v("li",[_._v("有一点点听懂了")])]),_._v(" "),v("h3",{attrs:{id:"p538-hashmap扩容树化触发"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p538-hashmap扩容树化触发"}},[_._v("#")]),_._v(" p538 HashMap扩容树化触发")]),_._v(" "),v("ul",[v("li",[_._v("树化扩容 表过长扩容")])]),_._v(" "),v("h3",{attrs:{id:"p539-hashtable使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p539-hashtable使用"}},[_._v("#")]),_._v(" p539 HashTable使用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("存放的是键值对 即 k-v")])]),_._v(" "),v("li",[v("p",[_._v("hashtable的键和值都不能为null，否则会抛出nullpointexception")])]),_._v(" "),v("li",[v("p",[_._v("hashable使用方法基本和hashmap一样")])]),_._v(" "),v("li",[v("p",[_._v("hashtable 是线程安全的，hashmap是线程不安全的")])])]),_._v(" "),v("h3",{attrs:{id:"p540-hashtable扩容"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p540-hashtable扩容"}},[_._v("#")]),_._v(" p540 hashtable扩容")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("按照 int newCapacity = (oldCapacity << 1) + 1; 的大小扩容.")])]),_._v(" "),v("li",[v("p",[_._v("hashmap 版本1.2 线程不安全 效率高 允许null值和键")])]),_._v(" "),v("li",[v("p",[_._v("hashtable 版本1.0 线程安全 效率低 不允许null键和值")])])]),_._v(" "),v("h3",{attrs:{id:"p541-properties"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p541-properties"}},[_._v("#")]),_._v(" p541 Properties")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("properties类继承自hashtable类并实现了map接口，也是使用一种键值对的形式来保存数据，使用特点和hashtable类似")])]),_._v(" "),v("li",[v("p",[_._v("properties还可以用于从xxx.properties文件中，加载数据到properties类对象，并进行读取和修改")])]),_._v(" "),v("li",[v("p",[_._v("工作后xxx.properties文件通常作为配置文件，这个知识点在IO流举例")])])]),_._v(" "),v("h3",{attrs:{id:"p542-集合选型规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p542-集合选型规则"}},[_._v("#")]),_._v(" p542 集合选型规则")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("在开发中，选择什么结合实现类，主要取决于业务操作特点，然后根据集合实现类特性进行选择分析如左")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("先判断存储的类型 一组对象 单列 或者 一组对象 键值对 双列")])]),_._v(" "),v("li",[v("p",[_._v("单列 collection接口 允许重复 list ：增删多 LinkedList 底层维护了一个双向链表 改查多 ArrayList 底层维护\nobject类型的可变数组")])]),_._v(" "),v("li",[v("p",[_._v("单列 不允许重复 set：无序 hashset 底层hashmap，维护了一个哈希表 数组链表红黑树 排序 treeset 插入和取出顺序一致\nlinkedhashset 维护数组+双向链表")])]),_._v(" "),v("li",[v("p",[_._v("双列 map： 键无序 hashmap 底层 哈希表 jdk7 数组链表 jdk8 数组链表红黑树 键排序 treemap 键插入和取出顺序一致\nlinkedhashmap")])]),_._v(" "),v("li",[v("p",[_._v("读取文件 properties")])])])])]),_._v(" "),v("h3",{attrs:{id:"p543-treeset源码解读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p543-treeset源码解读"}},[_._v("#")]),_._v(" p543 treeset源码解读")]),_._v(" "),v("ul",[v("li",[_._v("主讲一个匿名内部类 compare 加入 set是map的子类")])]),_._v(" "),v("h3",{attrs:{id:"p544-treemap源码解读"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p544-treemap源码解读"}},[_._v("#")]),_._v(" p544 treemap源码解读")]),_._v(" "),v("ul",[v("li",[_._v("主讲一个排序和源码解读，大同小异")])]),_._v(" "),v("h3",{attrs:{id:"p545-546-collections工具类-1-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p545-546-collections工具类-1-2"}},[_._v("#")]),_._v(" p545 546 Collections工具类 1 2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("collections是一个操作set，list，map等集合的工具类")])]),_._v(" "),v("li",[v("p",[_._v("提供了一系列静态的方法对集合元素进行排序，查询和修改等操作")])]),_._v(" "),v("li",[v("p",[_._v("排序操作：均为静态方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("reverse（list）： 翻转list中元素的顺序")])]),_._v(" "),v("li",[v("p",[_._v("shuffle（list）： 对list集合元素进行随机排序")])]),_._v(" "),v("li",[v("p",[_._v("sort（list）： 根据元素的自然排序对指定list集合元素按升序排序")])]),_._v(" "),v("li",[v("p",[_._v("sort（list，comparator）：根据指定的comparator产生的顺序对list集合元素进行排序")])]),_._v(" "),v("li",[v("p",[_._v("swap（list，int，int）：将指定list集合中i处元素和j处元素进行交换")])])])]),_._v(" "),v("li",[v("p",[_._v("查找、替换")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("Object max（Collection）：根据元素的自然顺序，返回给定集合中的最大元素")])]),_._v(" "),v("li",[v("p",[_._v("Object max（Collection，Comparator）：根据Comparator指定的顺序，返回给定集合中的最大元素")])]),_._v(" "),v("li",[v("p",[_._v("Object min（~）")])]),_._v(" "),v("li",[v("p",[_._v("Object min（，）")])]),_._v(" "),v("li",[v("p",[_._v("int frequency（Collection，Object）：返回指定集合中指定元素的出现次数")])]),_._v(" "),v("li",[v("p",[_._v("void copy（List dest，List src）：将src中的内容复制到dest中")])]),_._v(" "),v("li",[v("p",[_._v("boolean repalce All（List list，Object oldVal，Object newVal）：使用新值替换List对象的所有旧值")])])])])]),_._v(" "),v("h3",{attrs:{id:"p547-548-549-550-551集合作业1-2-3-4-5-6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p547-548-549-550-551集合作业1-2-3-4-5-6"}},[_._v("#")]),_._v(" p547 548 549 550 551集合作业1 2 3 4 5 6")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("作业1")]),_._v(" "),v("ul",[v("li",[_._v("ArrayList add 输出 向下转型 方法重写标题")])])]),_._v(" "),v("li",[v("p",[_._v("作业2")]),_._v(" "),v("ul",[v("li",[_._v("对ArrayList的各种方法的调用")])])]),_._v(" "),v("li",[v("p",[_._v("作业3")]),_._v(" "),v("ul",[v("li",[_._v("hashmap输出无序 put get entry set 迭代器 增强for 集合 values")])])]),_._v(" "),v("li",[v("p",[_._v("作业4")]),_._v(" "),v("ul",[v("li")]),_._v(" "),v("p",[_._v("hashset的去重机制：hashcode（）+equals（），底层先通过存入对象，进行运算得到一个hash值，通过hash值得到索引，如果发现table索引所在的位置，没有数据，就直接存放，如果有数据，就进行equals遍历比较，如果比较后，不相同，就加入，否则就不加入")]),_._v(" "),v("ul",[v("li")]),_._v(" "),v("p",[_._v("treeset去重机制：传入一个comparator匿名对象，就使用compare去重，如果方法返回0，就认为是相同的元素/数据，就不添加，如果你没有传入一个comparator匿名，则以你添加的对象实现的comparable接口compareto去重（多态加动态绑定）")])]),_._v(" "),v("li",[v("p",[_._v("作业5")]),_._v(" "),v("ul",[v("li",[_._v("追到了comparable 如果这个地方没有实现comparable这里接口的方法，那么转型就不会成功，add方法，因为treeset构造器没有传入comparator接口的匿名内部类\n所以在这个底层 所以要把底层的person改成comparable，所以没转成功，随便重写一下接口就可以了，return 0 所以返回的永远是相同的元素")])])]),_._v(" "),v("li",[v("p",[_._v("作业6")]),_._v(" "),v("ul",[v("li",[_._v("已知person类按照id，重写了hashcode和equals\n这道题真的坑")])])]),_._v(" "),v("li",[v("p",[_._v("作业7")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("ArrayList 可变数组 jdk1.2 线程不安全 效率高 如果使用有参构造器1.5倍 无参第一次10后面按照1.5倍")])]),_._v(" "),v("li",[v("p",[_._v("Vector 可变数组Object[] jdk1.0 安全 效率不高 如果是无参，默认10，满后，按照2倍扩容，如果指定大小创建，则每次按照2倍扩容")])])])])]),_._v(" "),v("h3",{attrs:{id:"p552-集合内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p552-集合内容梳理"}},[_._v("#")]),_._v(" p552 集合内容梳理")]),_._v(" "),v("p",[_._v("感觉真的要多听几遍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("集合比数据更好的记录数据")])]),_._v(" "),v("li",[v("p",[_._v("集合体系 单列collection")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("collection常用方法 接口 特点 遍历方式 迭代器 增强for")])]),_._v(" "),v("li",[v("p",[_._v("list常用的方法 循环 三种方式")])]),_._v(" "),v("li",[v("p",[_._v("ArrayList 具体分析源码 debug这块儿真得下功夫 源码读得透透的 记得最深的应该是什么树化链表过长要扩容，其他的就是机制不停地向下步进读懂源码")])]),_._v(" "),v("li",[v("p",[_._v("linkedlist的说明 这里双向链表的讲解 终于有点小悟了 最后和ArrayList做了比较")])]),_._v(" "),v("li",[v("p",[_._v("set collection的一个接口")])]),_._v(" "),v("li",[v("p",[_._v("最重要的一个hashmap 后面讲了 linkedhashset 靠双向链表来实现的")])])])]),_._v(" "),v("li",[v("p",[_._v("双列map 键值对")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("set key遍历 set keyvalues遍历 还有整个的entrysat类型的遍历 注意就是要向下转型还有些细节的如何取值")])]),_._v(" "),v("li",[v("p",[_._v("hashmap hashset底层都是map 一个node一个entry 树化扩容 思路很重要 debug")])]),_._v(" "),v("li",[v("p",[_._v("hashtable略讲，properties最后的数据记录经常用 会不会和 json有关 记录数据")])])])]),_._v(" "),v("li",[v("p",[_._v("collections的工具类")])])]),_._v(" "),v("h2",{attrs:{id:"第15章-泛型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第15章-泛型"}},[_._v("#")]),_._v(" 第15章 泛型")]),_._v(" "),v("h3",{attrs:{id:"p553-泛型引入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p553-泛型引入"}},[_._v("#")]),_._v(" p553 泛型引入")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("不能对加入到集合ArrayList中的数据类型进行约束 不安全")])]),_._v(" "),v("li",[v("p",[_._v("遍历的时候，需要进行类型转换，如果集合中的数据量较大，对效率有影响")])])]),_._v(" "),v("h3",{attrs:{id:"p554-泛型入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p554-泛型入门"}},[_._v("#")]),_._v(" p554 泛型入门")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("选择这样存放，表示存放到arraylist集合中的元素是dog类型")])]),_._v(" "),v("li",[v("p",[_._v("如果编译器发现添加的类型，不满足要求，就会报错")])]),_._v(" "),v("li",[v("p",[_._v("在遍历的时候，可以直接取出dog，而不是object")])]),_._v(" "),v("li",[v("p",[_._v("E称为泛型，那么dog->E")])]),_._v(" "),v("li",[v("p",[_._v("好处")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("编译时，检查添加元素的类型，提高了安全性")])]),_._v(" "),v("li",[v("p",[_._v("减少了类型转换的次数，提高效率")])]),_._v(" "),v("li",[v("p",[_._v("不再提示编译警告")])])])])]),_._v(" "),v("h3",{attrs:{id:"p555-泛型介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p555-泛型介绍"}},[_._v("#")]),_._v(" p555 泛型介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("泛型 广泛的类型 >>integer string dog")])]),_._v(" "),v("li",[v("p",[_._v("又称为参数化类型，是jdk5出现的新特性，解决数据类型的安全性问题")])]),_._v(" "),v("li",[v("p",[_._v("在类声明或实例化只要指定号需要的具体类型即可")])]),_._v(" "),v("li",[v("p",[_._v("java泛型可以保证如果程序在编译时没有发出警告，运行时就不会产生classcastexception异常，同时代码简洁健壮")])]),_._v(" "),v("li",[v("p",[_._v("泛型的作用是：可以在类声明时，通过一个标识表示类中某个属性的类型，或者是某个方法的返回值类型，或者是参数类型")])]),_._v(" "),v("li",[v("p",[_._v("E具体的数据类型在定义Person对象的时候指定,即在编译期间，就确定E是什么类型\n读完源码学习这个和玩一样")])])]),_._v(" "),v("h3",{attrs:{id:"p556-泛型应用实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p556-泛型应用实例"}},[_._v("#")]),_._v(" p556 泛型应用实例")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("泛型的声明")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("interface"),v("T",[_._v("{} class<K,V>{}")])],1)]),_._v(" "),v("li",[v("p",[_._v("比如list ArrayList 其中T K V不代表值，而是表示类型。任意字母都可以。常用T type来表示")])])])]),_._v(" "),v("li",[v("p",[_._v("泛型的实例化")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("要在类名后面指定类型参数的值（类型）。如 ：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("List"),v("String",[_._v(" strList = new ArrayList"),v("String",[_._v("();")])],1)],1)]),_._v(" "),v("li",[v("p",[_._v("Iterator"),v("Customer",[_._v(" iterator = customers.iterator();")])],1)])])])])]),_._v(" "),v("li",[v("p",[_._v("举例说明，泛型在hashset hashmap使用情况")])])]),_._v(" "),v("h3",{attrs:{id:"p557-558-泛型使用细节1-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p557-558-泛型使用细节1-2"}},[_._v("#")]),_._v(" p557 558 泛型使用细节1 2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("只能是引用类型")])]),_._v(" "),v("li",[v("p",[_._v("在给泛型制定具体类型后，可以传入该类型或者子类类型")])]),_._v(" "),v("li",[v("p",[_._v("默认给的泛型是object类")])])]),_._v(" "),v("h3",{attrs:{id:"p559-泛型练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p559-泛型练习"}},[_._v("#")]),_._v(" p559 泛型练习")]),_._v(" "),v("ul",[v("li",[_._v("还是写了很久的 封装类 comparable的接口")])]),_._v(" "),v("h3",{attrs:{id:"p560-自定义泛型类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p560-自定义泛型类"}},[_._v("#")]),_._v(" p560 自定义泛型类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("表示可以有多个泛型")])]),_._v(" "),v("li",[v("p",[_._v("普通成员可以使用泛型")])]),_._v(" "),v("li",[v("p",[_._v("使用泛型的数组，不能初始化")])]),_._v(" "),v("li",[v("p",[_._v("静态方法中不能使用类的泛型")])]),_._v(" "),v("li",[v("p",[_._v("泛型类的类型，是在创建对象是确定的 因为创建对象时，需要指定确定类型")])]),_._v(" "),v("li",[v("p",[_._v("如果在创建对象是，没有指定类型，默认为object")])]),_._v(" "),v("li",[v("p",[_._v("一个小类型 主要 构造器 到底定义了泛型没有")])])]),_._v(" "),v("h3",{attrs:{id:"p561-自定义泛型接口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p561-自定义泛型接口"}},[_._v("#")]),_._v(" p561 自定义泛型接口")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("接口中 静态成员也不能使用泛型 这个和泛型类规定一样")])]),_._v(" "),v("li",[v("p",[_._v("泛型接口的类型，在继承接口或实现接口时确定")])]),_._v(" "),v("li",[v("p",[_._v("没有指定类型，默认为object")])]),_._v(" "),v("li",[v("p",[_._v("实现接口的方法时，接口的方法往往会已经设置了返回类型的泛型是什么 传入的泛型类型是什么 当你实现接口方法时 记得将你定义的类型带上\n不过idea一般会给你智能的替换好")])]),_._v(" "),v("li",[v("p",[_._v("建议在实现接口时，默认的情况下也把默认类型定义进去，就是顶级父类")])])]),_._v(" "),v("h3",{attrs:{id:"p562-自定义泛型方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p562-自定义泛型方法"}},[_._v("#")]),_._v(" p562 自定义泛型方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("泛型方法，可以定义在普通类中，也可以定义在泛型类中")])]),_._v(" "),v("li",[v("p",[_._v("当泛型方法被调用时，类型会确定")])]),_._v(" "),v("li",[v("p",[_._v("public void eat（E e）{}，修饰符后没有<T,R>eat 方法不是泛型方法，而是使用了泛型")])])]),_._v(" "),v("h3",{attrs:{id:"p563-泛型方法练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p563-泛型方法练习"}},[_._v("#")]),_._v(" p563 泛型方法练习")]),_._v(" "),v("h3",{attrs:{id:"p564-泛型继承和通配符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p564-泛型继承和通配符"}},[_._v("#")]),_._v(" p564 泛型继承和通配符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("泛型不具备继承性")])]),_._v(" "),v("li",[_._v("\n<?>：支持任意泛型类型\n")]),_._v(" "),v("li",[_._v("\n<?extends A>:支持A类以及A类的子类，规定了泛型的上限\n")]),_._v(" "),v("li",[_._v("\n<?super A>:支持A类以及A类的父亲，不限于直接父类，规定了泛型的下限\n")])]),_._v(" "),v("h3",{attrs:{id:"p565-junit使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p565-junit使用"}},[_._v("#")]),_._v(" p565 junit使用")]),_._v(" "),v("p",[_._v("需要下载一下")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("一个类有很多功能代码需要测试，为了测试，就需要写入到main方法中")])]),_._v(" "),v("li",[v("p",[_._v("如果有多个功能代码测试，就需要来回注销，切换很麻烦")])]),_._v(" "),v("li",[v("p",[_._v("如果可以直接运行一个方法，就方便很多，并且可以给出相关信息 junit")])]),_._v(" "),v("li",[v("p",[_._v("junit是一个java语言的单元测试框架")])]),_._v(" "),v("li",[v("p",[_._v("多数java的开发环境都已经继承了junit作为单元测试的工具")])]),_._v(" "),v("li",[v("p",[_._v("不用写在主方法中 直接运行就可以了")])])]),_._v(" "),v("h3",{attrs:{id:"p566-泛型作业"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p566-泛型作业"}},[_._v("#")]),_._v(" p566 泛型作业")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("自定义泛型的一些使用走了一圈，但我感觉还是有点难度，我现在还没有缓过来是怎么进行")])]),_._v(" "),v("li",[v("p",[_._v("关于list的一个赋值，关于get方法的使用，应该自己学着追一下源码是怎么进行的，追是能追到什么程度")])])]),_._v(" "),v("h3",{attrs:{id:"p567-泛型内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p567-泛型内容梳理"}},[_._v("#")]),_._v(" p567 泛型内容梳理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("泛型的需求 给 数据进行一个规范 同时不用类型的转换 存进去的时候就是想要的类型了 定义一个集合的时候就是了")])]),_._v(" "),v("li",[v("p",[_._v("泛型可以用在接口和类上")])]),_._v(" "),v("li",[v("p",[_._v("自定义泛型 系统给了很多 我们也可以自己定义 自己想用的类型 如果没有定义后续调用类的时候定义 尤其在使用双列的时候\n能定义一个自己想要的对象 一个类 泛型的细节还要多注意一下 已经标红了")])]),_._v(" "),v("li",[v("p",[_._v("泛型的继承 介绍了通配符 ？")])])]),_._v(" "),v("h2",{attrs:{id:"第16章-坦克大战"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第16章-坦克大战"}},[_._v("#")]),_._v(" 第16章 坦克大战")]),_._v(" "),v("h3",{attrs:{id:"p568-坦克大战介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p568-坦克大战介绍"}},[_._v("#")]),_._v(" p568 坦克大战介绍")]),_._v(" "),v("h3",{attrs:{id:"p569-java绘图坐标体系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p569-java绘图坐标体系"}},[_._v("#")]),_._v(" p569 java绘图坐标体系")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("原点左上角")])]),_._v(" "),v("li",[v("p",[_._v("像素为单位 第四象限 区域 记就好了")])]),_._v(" "),v("li",[v("p",[_._v("像素密度单位 800*600 一行800点 一列600点")])])]),_._v(" "),v("h3",{attrs:{id:"p570-绘图入门技术和机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p570-绘图入门技术和机制"}},[_._v("#")]),_._v(" p570 绘图入门技术和机制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("继承的类JPanel JFrame")])]),_._v(" "),v("li",[v("p",[_._v("paint方法")])]),_._v(" "),v("li",[v("p",[_._v("component类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("paint（Graphics g）绘制组件的外观")])]),_._v(" "),v("li",[v("p",[_._v("repaint（） 刷新组件的外观")])])])]),_._v(" "),v("li",[v("p",[_._v("当组件第一次在屏幕显示的时候，程序会自动的调用paint（）方法来绘制组件")]),_._v(" "),v("p",[_._v("思考如何证明三种情况，底层具有监听性质，拖动窗口就会")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("窗口最小化，再最大化")])]),_._v(" "),v("li",[v("p",[_._v("窗口的大小发生变化")])]),_._v(" "),v("li",[v("p",[_._v("repaint函数被调用")])])])])]),_._v(" "),v("h3",{attrs:{id:"p571-绘图方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p571-绘图方法"}},[_._v("#")]),_._v(" p571 绘图方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("graphics类 画笔 为我们提供了各种绘制图形的方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("画直线drawLine 两个点坐标")])]),_._v(" "),v("li",[v("p",[_._v("画矩形边框drawRect 一个点坐标 长宽")])]),_._v(" "),v("li",[v("p",[_._v("画椭形边框drawOval 一个点坐标 长宽")])]),_._v(" "),v("li",[v("p",[_._v("填充矩形 fillRect 点 长宽")])]),_._v(" "),v("li",[v("p",[_._v("填充椭形~")])]),_._v(" "),v("li",[v("p",[_._v("画图片 drawImage image img 点巴拉巴拉")])]),_._v(" "),v("li",[v("p",[_._v("画字符串 drawString String str 点")])]),_._v(" "),v("li",[v("p",[_._v("设置画笔的字体 setFont（Font font）")])]),_._v(" "),v("li",[v("p",[_._v("设置画笔颜色 setColor（Color c）")])])])])]),_._v(" "),v("h3",{attrs:{id:"p572-绘制坦克游戏区域"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p572-绘制坦克游戏区域"}},[_._v("#")]),_._v(" p572 绘制坦克游戏区域")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("坦克 自己的坦克继承坦克大类")])]),_._v(" "),v("li",[v("p",[_._v("画板自己的画板类 定义初始的坦克")])]),_._v(" "),v("li",[v("p",[_._v("新方法开始了自己的游戏")])])]),_._v(" "),v("h3",{attrs:{id:"p573-绘制坦克"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p573-绘制坦克"}},[_._v("#")]),_._v(" p573 绘制坦克")]),_._v(" "),v("h3",{attrs:{id:"p574-小球移动案例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p574-小球移动案例"}},[_._v("#")]),_._v(" p574 小球移动案例")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("感觉一下子加入了好多东西 但是很有意思 终于程序和自己有了互动和响应")])]),_._v(" "),v("li",[v("p",[_._v("键盘监听接口")])])]),_._v(" "),v("h3",{attrs:{id:"p575-事件处理机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p575-事件处理机制"}},[_._v("#")]),_._v(" p575 事件处理机制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java事件处理是采取 委派事件模型。当事件发生时，产生事件的对象，会把此信息传递给事件的监听这处理，这里所说的信息实际上就是java.awt.event事件库里某个类所创建的对象，把它称为\n事件的对象")])]),_._v(" "),v("li",[v("p",[_._v("事件源 是一个产生事件的对象，比如 按钮 窗口 等")])]),_._v(" "),v("li",[v("p",[_._v("事件 就是承载事件源状态改变时的对象，比如当键盘事件，鼠标事件，窗口事件等等，会生成一个事件对象，该对象保存着当前时间很多信息")])]),_._v(" "),v("li",[v("p",[_._v("事件类型 各种event")])]),_._v(" "),v("li",[v("p",[_._v("事件监听器接口")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("事件源产生一个事件，可以传送给事件监听者处理")])]),_._v(" "),v("li",[v("p",[_._v("事件监听者实际上就是一个类")]),_._v(" "),v("ul",[v("li",[_._v("案例中的mypanel就是一个类，实现了keylistener接口，就可以作为一个事件的监听者，对接受到的事件进行处理")])])]),_._v(" "),v("li",[v("p",[_._v("事件监听器接口有多种，不同事件监听器接口可以监听不同的事件，一个类可以实现多个监听接口")])]),_._v(" "),v("li",[v("p",[_._v("这些接口在java.awt.evnet包和javax.swing.event包中定义 列出常用的时间监听器接口，查看jdk文档即可")])])])])]),_._v(" "),v("h3",{attrs:{id:"p576-绘制坦克上右下左"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p576-绘制坦克上右下左"}},[_._v("#")]),_._v(" p576 绘制坦克上右下左")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("这还真不好算 主要坦克的点在左上")])]),_._v(" "),v("li",[v("p",[_._v("主要算坦克盖子的圆心 然后再计算其他的就行")])])]),_._v(" "),v("h3",{attrs:{id:"p577-坦克动起来"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p577-坦克动起来"}},[_._v("#")]),_._v(" p577 坦克动起来")]),_._v(" "),v("ul",[v("li",[_._v("挺好玩的 考虑了一下 移动move 以及移动速度speed")])]),_._v(" "),v("h3",{attrs:{id:"p578-绘制敌人坦克"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p578-绘制敌人坦克"}},[_._v("#")]),_._v(" p578 绘制敌人坦克")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("敌人的坦克 在mypanel上，所以代码在mypanel上")])]),_._v(" "),v("li",[v("p",[_._v("因为敌人的坦克，后面有自己特殊的属性和方法，可以单开一个enemytank")])]),_._v(" "),v("li",[v("p",[_._v("敌人坦克数量多，可以放入集合，多线程问题所以 放到vector中")])])]),_._v(" "),v("h2",{attrs:{id:"第17章-线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第17章-线程"}},[_._v("#")]),_._v(" 第17章 线程")]),_._v(" "),v("p",[_._v("这章挺有难度的写的代码，穿插各种线程方法")]),_._v(" "),v("h3",{attrs:{id:"p579-程序进程线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p579-程序进程线程"}},[_._v("#")]),_._v(" p579 程序进程线程")]),_._v(" "),v("p",[_._v("操作系统")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("进程是指运行中的程序，是程序的一次执行过程，是正在运行的一个程序。动态过程：有它自身的产生、存在和消亡过程")])]),_._v(" "),v("li",[v("p",[_._v("线程由进程创建，是进程的一个实体，一个进程可以拥有多个线程")])]),_._v(" "),v("li",[v("p",[_._v("单线程：同一个时刻，只允许执行一个线程")])]),_._v(" "),v("li",[v("p",[_._v("多线程：同一个时刻，可以执行多个线程，比如：一个qq进程，可以同时打开多个聊天窗口，一个迅雷进程，可以同时下载多个文件")])])]),_._v(" "),v("h3",{attrs:{id:"p580-并发并行"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p580-并发并行"}},[_._v("#")]),_._v(" p580 并发并行")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("并发：同一个时刻，多个任务交替执行，造成一种 貌似同时 的感觉，简单来说 单核cpu实现的多任务就是并发")])]),_._v(" "),v("li",[v("p",[_._v("并行：同一个时刻，多个任务同时执行。多核cpu可以实现并行。并发和并行")])])]),_._v(" "),v("h3",{attrs:{id:"p581-继承thread创建线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p581-继承thread创建线程"}},[_._v("#")]),_._v(" p581 继承Thread创建线程")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("继承thread类，重写run方法")])]),_._v(" "),v("li",[v("p",[_._v("实现runnable接口，重写run方法")])]),_._v(" "),v("li",[v("p",[_._v("JConsole 监控线程执行情况")])]),_._v(" "),v("li",[v("p",[_._v("当一个类继承了thread类，该类就可以当做线程使用")])]),_._v(" "),v("li",[v("p",[_._v("我们会重写run方法，协商自己的业务代码")])]),_._v(" "),v("li",[v("p",[_._v("run thread 类 实现了runnable接口的run方法")])]),_._v(" "),v("li",[v("p",[_._v("ctrl+alt+t 快捷键 环绕方式 有 try catch")])]),_._v(" "),v("li",[v("p",[_._v("cat.start（）； 启动线程")])])]),_._v(" "),v("h3",{attrs:{id:"p582-多线程机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p582-多线程机制"}},[_._v("#")]),_._v(" p582 多线程机制")]),_._v(" "),v("ul",[v("li",[_._v("主线程在运行 后 线程0开始运行 所以会出现一个交替运行的情况")])]),_._v(" "),v("h3",{attrs:{id:"p583-为什么是start"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p583-为什么是start"}},[_._v("#")]),_._v(" p583 为什么是start")]),_._v(" "),v("ul",[v("li",[_._v("start 方法调用start0方法后，该线程并不一定会立马执行，只是将线程变成了可运行状态。具体什么时候执行，取决于cpu，由cpu统一调度")])]),_._v(" "),v("h3",{attrs:{id:"p584-runnable创建线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p584-runnable创建线程"}},[_._v("#")]),_._v(" p584 runnable创建线程")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java是单继承的，在某些情况下一个类可能已经继承了某个父类，这时在用继承thread类方法来创建线程显然不可能了")])]),_._v(" "),v("li",[v("p",[_._v("java设计者们提供了另一个方式创建进程，就是通过实现runnable接口来创建进程")])]),_._v(" "),v("li",[v("p",[_._v("这里底层使用了设计模式 代理模式 开发线程的机制")])])]),_._v(" "),v("h3",{attrs:{id:"p585-多个子线程案例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p585-多个子线程案例"}},[_._v("#")]),_._v(" p585 多个子线程案例")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("继承thread和实现runnable接口的区别")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("从java的设计来看，本质上没有区别，thread类本身就实现了接口")])]),_._v(" "),v("li",[v("p",[_._v("实现runnable接口方式更加适合多个线程共享一个资源的情况，并且避免了单继承的限制，建议使用runnable")])])])])]),_._v(" "),v("h3",{attrs:{id:"p586-多线程售票问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p586-多线程售票问题"}},[_._v("#")]),_._v(" p586 多线程售票问题")]),_._v(" "),v("p",[_._v("操作系统")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用线程方式 都是start会出现超卖的现象")])]),_._v(" "),v("li",[v("p",[_._v("实现接口方式 都可能会抢夺资源进行了售卖 这里就是线程同步的原因")])])]),_._v(" "),v("h3",{attrs:{id:"p587-通知线程退出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p587-通知线程退出"}},[_._v("#")]),_._v(" p587 通知线程退出")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当线程完成任务后，会自动退出")])]),_._v(" "),v("li",[v("p",[_._v("还可以通过使用变量来控制run方法退出的方式停止线程，即通知方式 可以通知setloop 改变开始结束的开关")])])]),_._v(" "),v("h3",{attrs:{id:"p588-线程中断"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p588-线程中断"}},[_._v("#")]),_._v(" p588 线程中断")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("线程常用方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("setname 设置线程名称，使之与参数name相同")])]),_._v(" "),v("li",[v("p",[_._v("getname 返回该线程的名称")])]),_._v(" "),v("li",[v("p",[_._v("start 使该线程开始执行；java虚拟机底层调用该线程的start0方法")])]),_._v(" "),v("li",[v("p",[_._v("run 调用线程对象run方法")])]),_._v(" "),v("li",[v("p",[_._v("setPriority 更改线程的优先级")])]),_._v(" "),v("li",[v("p",[_._v("getPriority 获取线程的优先级")])]),_._v(" "),v("li",[v("p",[_._v("sleep 在指定的毫秒数内让当前正在执行的线程休眠 暂停执行")])]),_._v(" "),v("li",[v("p",[_._v("interrupt 中断线程")])])])]),_._v(" "),v("li",[v("p",[_._v("注意事项和细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("start底层会创建新的进程，调用run，就是一个简单的方法调用，不会启动新线程")])]),_._v(" "),v("li",[v("p",[_._v("线程优先级的范围")])]),_._v(" "),v("li",[v("p",[_._v("interrupt，中断线程，但并没有真正的结束进程，所以一般用于中断正在休眠线程")])]),_._v(" "),v("li",[v("p",[_._v("sleep 线程的静态方法，使当前线程休眠")])])])])]),_._v(" "),v("h3",{attrs:{id:"p589-线程插队"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p589-线程插队"}},[_._v("#")]),_._v(" p589 线程插队")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("yield 线程的礼让，不一定成功")])]),_._v(" "),v("li",[v("p",[_._v("join 线程的插队 插队成功，肯定先执行玩插入线程的所有任务")])])]),_._v(" "),v("h3",{attrs:{id:"p590-线程插队练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p590-线程插队练习"}},[_._v("#")]),_._v(" p590 线程插队练习")]),_._v(" "),v("ul",[v("li",[_._v("多练 关于这个环绕try throw 还是要看api文档学习")])]),_._v(" "),v("h3",{attrs:{id:"p591-守护线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p591-守护线程"}},[_._v("#")]),_._v(" p591 守护线程")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("用户线程 也叫工作线程，当线程的任务执行完或通知方式结束")])]),_._v(" "),v("li",[v("p",[_._v("守护线程 一般为工作线程服务，当所有的用户线程结束，守护线程自动结束 常见的守护线程为 垃圾回收机制")])])]),_._v(" "),v("h3",{attrs:{id:"p592-线程的7大状态"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p592-线程的7大状态"}},[_._v("#")]),_._v(" p592 线程的7大状态")]),_._v(" "),v("p",[_._v("操作系统")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("new 尚未启动的线程")])]),_._v(" "),v("li",[v("p",[_._v("runnable 虚拟机中执行的线程")])]),_._v(" "),v("li",[v("p",[_._v("blocked 被阻塞等待监视器锁定的线程处于此状态")])]),_._v(" "),v("li",[v("p",[_._v("waiting 正在等待另一个线程执行特定动作的线程处于此状态")])]),_._v(" "),v("li",[v("p",[_._v("timed waiting 正在等待另一个线程执行动作达到指定等待时间的线程处于此状态")])]),_._v(" "),v("li",[v("p",[_._v("terminated 已退出的线程处于此状态")])]),_._v(" "),v("li",[v("p",[_._v("线程 转换图 这个操作系统确实会学")])])]),_._v(" "),v("h3",{attrs:{id:"p593-线程同步机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p593-线程同步机制"}},[_._v("#")]),_._v(" p593 线程同步机制")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("在多线程编程，一些敏感数据不允许被多个线程同时访问，此时就使用同步访问技术，保证数据在任何同一时刻，最多有一个线程访问，以保证数据的完整性")])]),_._v(" "),v("li",[v("p",[_._v("线程同步，即当有一个线程在对内进行操作是，其他线程都不可以对这个内存地址进行操作，直到该线程完成操作，其他线程才能对该内存地址进行操作")])]),_._v(" "),v("li",[v("p",[_._v("同步具体方法 synchronized")])]),_._v(" "),v("li",[v("p",[_._v("同步代码块")])]),_._v(" "),v("li",[v("p",[_._v("还可以放在方法声明中，表示整个方法为同步方法，需要被同步的代码")])])]),_._v(" "),v("h3",{attrs:{id:"p594-互斥锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p594-互斥锁"}},[_._v("#")]),_._v(" p594 互斥锁")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("在java语言中，引入了对象互斥锁的概念，来保证共享数据操作的完整性")])]),_._v(" "),v("li",[v("p",[_._v("每个对象都应于一个可称为”互斥锁“的标记，这个标记用来保证在任一时刻，只能有一个线程访问该对象")])]),_._v(" "),v("li",[v("p",[_._v("关键字synchronized来与对象的互斥锁联系。当某个对象用synchronized修饰时，表明该对象在任一时刻只能由一个线程访问")])]),_._v(" "),v("li",[v("p",[_._v("同步的局限性：导致程序的执行效率降低")])]),_._v(" "),v("li",[v("p",[_._v("非静态的同步方法的锁可以是this，也可以是其他对象，要求是同一个对象")])]),_._v(" "),v("li",[v("p",[_._v("静态的同步方法的锁为当前类本身")])]),_._v(" "),v("li",[v("p",[_._v("interruptexception 中断异常 stacktrace 堆栈回溯")])]),_._v(" "),v("li",[v("p",[_._v("注意事项")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("同步方法")])]),_._v(" "),v("li",[v("p",[_._v("实现落地步骤")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("分析上锁的代码")])]),_._v(" "),v("li",[v("p",[_._v("选择同步代码块或同步方法")])]),_._v(" "),v("li",[v("p",[_._v("要求多个线程的锁对象为同一个")])])])])])])]),_._v(" "),v("h3",{attrs:{id:"p595-线程死锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p595-线程死锁"}},[_._v("#")]),_._v(" p595 线程死锁")]),_._v(" "),v("ul",[v("li",[_._v("多个线程都占用了对方的锁资源，但不肯相让，导致了死锁，在编程是一定要避免死锁的发生")])]),_._v(" "),v("h3",{attrs:{id:"p596-释放锁"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p596-释放锁"}},[_._v("#")]),_._v(" p596 释放锁")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当前线程的同步方法、同步代码块执行结束")])]),_._v(" "),v("li",[v("p",[_._v("当前线程在同步代码块、同步方法中遇到break、return")])]),_._v(" "),v("li",[v("p",[_._v("当前线程在同步代码块、同步方法中出了未处理的error或exception，导致异常结束")])]),_._v(" "),v("li",[v("p",[_._v("当前线程在同步代码块、同步方法中执行了线程对象的wait（）方法，当前线程暂停，并释放锁")])]),_._v(" "),v("li",[v("p",[_._v("不会释放锁的情况")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("线程执行同步代码块或同步方法，程序调用thread.sleep（）、thread.yield（）方法暂停当前线程的执行，不会释放锁")])]),_._v(" "),v("li",[v("p",[_._v("线程执行同步代码块时，其他线程调用了该线程的suspend（）方法将该线程挂起，该线程不会释放锁")])])])])]),_._v(" "),v("h3",{attrs:{id:"p597-作业1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p597-作业1"}},[_._v("#")]),_._v(" p597 作业1")]),_._v(" "),v("ul",[v("li",[_._v("双线程 一个输出随机数 一个等待一个输入后终止两个线程")])]),_._v(" "),v("h3",{attrs:{id:"p598-作业2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p598-作业2"}},[_._v("#")]),_._v(" p598 作业2")]),_._v(" "),v("h2",{attrs:{id:"第18章-坦克大战2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第18章-坦克大战2"}},[_._v("#")]),_._v(" 第18章 坦克大战2")]),_._v(" "),v("h3",{attrs:{id:"p599-坦克发子弹思路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p599-坦克发子弹思路"}},[_._v("#")]),_._v(" p599 坦克发子弹思路")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当发射一颗子弹后，就相当于启动一个线程")])]),_._v(" "),v("li",[v("p",[_._v("hero有子弹的对象，当按下j键，我们就启动一个发射行为线程，让子弹不停的移动，形成一个射击的效果")])]),_._v(" "),v("li",[v("p",[_._v("mypanel需要不停的重绘，才能出现该效果")])]),_._v(" "),v("li",[v("p",[_._v("当子弹移动到面板的边界时，就应该销毁")])])]),_._v(" "),v("h3",{attrs:{id:"p600-601我方发射子弹1-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p600-601我方发射子弹1-2"}},[_._v("#")]),_._v(" p600 601我方发射子弹1 2")]),_._v(" "),v("h3",{attrs:{id:"p602-敌方发射子弹"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p602-敌方发射子弹"}},[_._v("#")]),_._v(" p602 敌方发射子弹")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("在敌人坦克类，使用vector保存多个shot")])]),_._v(" "),v("li",[v("p",[_._v("当每创建一个敌人坦克对象，给该敌人坦克对象初始化一个shot对象，同时启动shot")])]),_._v(" "),v("li",[v("p",[_._v("在绘制敌人坦克时，需要遍历敌人坦克对象vector，绘制所有的子弹，当子弹islive == false就可以从vector移除")])])]),_._v(" "),v("h3",{attrs:{id:"p603-敌方坦克消失"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p603-敌方坦克消失"}},[_._v("#")]),_._v(" p603 敌方坦克消失")]),_._v(" "),v("h3",{attrs:{id:"p604-敌方坦克爆炸"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p604-敌方坦克爆炸"}},[_._v("#")]),_._v(" p604 敌方坦克爆炸")]),_._v(" "),v("h3",{attrs:{id:"p605-敌方坦克自由移动"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p605-敌方坦克自由移动"}},[_._v("#")]),_._v(" p605 敌方坦克自由移动")]),_._v(" "),v("h3",{attrs:{id:"p606-敌方坦克移动范围"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p606-敌方坦克移动范围"}},[_._v("#")]),_._v(" p606 ‘敌方坦克移动范围")]),_._v(" "),v("h3",{attrs:{id:"p607-坦克发射多颗子弹"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p607-坦克发射多颗子弹"}},[_._v("#")]),_._v(" p607 坦克发射多颗子弹")]),_._v(" "),v("h3",{attrs:{id:"p608-敌方移动发射"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p608-敌方移动发射"}},[_._v("#")]),_._v(" p608 敌方移动发射")]),_._v(" "),v("h3",{attrs:{id:"p609-我方被击中爆炸"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p609-我方被击中爆炸"}},[_._v("#")]),_._v(" p609 我方被击中爆炸")]),_._v(" "),v("h2",{attrs:{id:"第19章-文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第19章-文件"}},[_._v("#")]),_._v(" 第19章 文件")]),_._v(" "),v("p",[_._v("操作系统")]),_._v(" "),v("h3",{attrs:{id:"p610-文件基础知识"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p610-文件基础知识"}},[_._v("#")]),_._v(" p610 文件基础知识")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("文件是保存数据的地方")])]),_._v(" "),v("li",[v("p",[_._v("文件在程序中是以流的形式来操作的")])]),_._v(" "),v("li",[v("p",[_._v("流：数据在数据源（文件）和程序（内存）之间经历的路径")])]),_._v(" "),v("li",[v("p",[_._v("输入流：数据从数据源到程序之间的路径 输出流反之")])])]),_._v(" "),v("h3",{attrs:{id:"p611-常用的文件操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p611-常用的文件操作"}},[_._v("#")]),_._v(" p611 常用的文件操作")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("创建文件对象相关构造器和方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("根据路径构建一个file对象")])]),_._v(" "),v("li",[v("p",[_._v("根据父目录文件+子路径构建")])]),_._v(" "),v("li",[v("p",[_._v("根据父目录+子路径构建")])])])])]),_._v(" "),v("h3",{attrs:{id:"p612-获取文件信息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p612-获取文件信息"}},[_._v("#")]),_._v(" p612 获取文件信息")]),_._v(" "),v("ul",[v("li",[_._v("getname getabsoulutepath getparent length exists isfile isdirectory")])]),_._v(" "),v("h3",{attrs:{id:"p613-目录操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p613-目录操作"}},[_._v("#")]),_._v(" p613 目录操作")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("mkdir创建一级目录")])]),_._v(" "),v("li",[v("p",[_._v("mkdirs创建多级目录")])]),_._v(" "),v("li",[v("p",[_._v("delete删除空目录或文件")])])]),_._v(" "),v("h3",{attrs:{id:"p614-io流原理和分类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p614-io流原理和分类"}},[_._v("#")]),_._v(" p614 io流原理和分类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("io是 input和output缩写，用于处理数据传输，如读写文件，网络通讯")])]),_._v(" "),v("li",[v("p",[_._v("对于数据的输入输出 以流 的方式进行")])]),_._v(" "),v("li",[v("p",[v("a",{attrs:{href:"http://java.io/",target:"_blank",rel:"noopener noreferrer"}},[_._v("java.io"),v("OutboundLink")],1),_._v('包下提供了各种"流"类和接口，用以获取不同种类的数据，并通过方法输入或输出数据')])]),_._v(" "),v("li",[v("p",[_._v("输入input：读取外部数据 磁盘、光盘等存储设备的数据 到 程序 内存 中")])]),_._v(" "),v("li",[v("p",[_._v("输出output：将程序数据输出到磁盘、光盘等存储设备中")])]),_._v(" "),v("li",[v("p",[_._v("流的分类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("按操作数据单位不同分为：字节流，字符流")])]),_._v(" "),v("li",[v("p",[_._v("按数据流的流向不同分为：输入流、输出流")])]),_._v(" "),v("li",[v("p",[_._v("按流的角色不同分为：节点流、处理流/包装流")])])])]),_._v(" "),v("li",[v("p",[_._v("io流体体系图")])]),_._v(" "),v("li",[v("p",[_._v("文件vs流")])])]),_._v(" "),v("h3",{attrs:{id:"p615-fileinputstream"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p615-fileinputstream"}},[_._v("#")]),_._v(" p615 fileinputstream")]),_._v(" "),v("ul",[v("li",[_._v("使用fileinputstream读取文件，并将文件内容显示到控制台上")])]),_._v(" "),v("h3",{attrs:{id:"p616-fileoutputstream"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p616-fileoutputstream"}},[_._v("#")]),_._v(" p616 fileoutputstream")]),_._v(" "),v("ul",[v("li",[_._v("使用~在a.txt文件中写入字符串，文件不存在，会创建文件，前提目录存在")])]),_._v(" "),v("h3",{attrs:{id:"p617-文件拷贝"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p617-文件拷贝"}},[_._v("#")]),_._v(" p617 文件拷贝")]),_._v(" "),v("ul",[v("li",[_._v("可以完成对图片、音乐的拷贝")])]),_._v(" "),v("h3",{attrs:{id:"p618-文件字符流说明"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p618-文件字符流说明"}},[_._v("#")]),_._v(" p618 文件字符流说明")]),_._v(" "),v("h3",{attrs:{id:"p619-filereader"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p619-filereader"}},[_._v("#")]),_._v(" p619 filereader")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("new filereader（file/string）")])]),_._v(" "),v("li",[v("p",[_._v("read：每次读取单个字符，返回该字符，如果到文件末尾返回-1")])]),_._v(" "),v("li",[v("p",[_._v("read（char[ ]）：批量读取多个字符到数组，返回读取到的字符数，如果文件末尾返回-1")])]),_._v(" "),v("li",[v("p",[_._v("相关api：")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("new String（char[ ]）:将char[ ]转换成String")])]),_._v(" "),v("li",[v("p",[_._v("new String（char[ ],off,len）:将char[ ]的指定部分转换为string")])])])])]),_._v(" "),v("h3",{attrs:{id:"p620-filewriter常用方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p620-filewriter常用方法"}},[_._v("#")]),_._v(" p620 filewriter常用方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("new filewriter（file/string）：覆盖模式，相当于流的指针在首端")])]),_._v(" "),v("li",[v("p",[_._v("new filewriter（file/string）:追加模式，相当于流的指针在尾端")])]),_._v(" "),v("li",[v("p",[_._v("write（int）:写入单个字符")])]),_._v(" "),v("li",[v("p",[_._v("write（char[]）:写入指定数组")])]),_._v(" "),v("li",[v("p",[_._v("write（char[],off,len）:写入指定数组的指定部分")])]),_._v(" "),v("li",[v("p",[_._v("write（string）：写入整个字符串")])]),_._v(" "),v("li",[v("p",[_._v("write~写入字符串的指定部分")])]),_._v(" "),v("li",[v("p",[_._v("相关api：string类：tochararray：将string转换成char[]")])]),_._v(" "),v("li",[v("p",[_._v("filewrite使用后，必须要关闭或刷新，否则写不入指定的文件")])])]),_._v(" "),v("h3",{attrs:{id:"p621-节点流处理流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p621-节点流处理流"}},[_._v("#")]),_._v(" p621 节点流处理流")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("节点流是底层流/低级流，直接根数据源相接")])]),_._v(" "),v("li",[v("p",[_._v("处理流（包装流）包装节点流，既可以消除不同节点流的实现差异，也可以提供更方便的方法来完成输入输出")])]),_._v(" "),v("li",[v("p",[_._v("处理流对节点流进行包装，使用了修饰器设计模式，不会直接与数据源项链")])]),_._v(" "),v("li",[v("p",[_._v("处理流的功能")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("性能的提高：主要以增加缓冲的方式来提高输入输出的效率")])]),_._v(" "),v("li",[v("p",[_._v("操作的边界：处理流提供了一系列便捷的方法来一次输入输出大批量的数据")])])])])]),_._v(" "),v("h3",{attrs:{id:"p622-处理流设计模式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p622-处理流设计模式"}},[_._v("#")]),_._v(" p622 处理流设计模式")]),_._v(" "),v("h3",{attrs:{id:"p623-处理流bufferedreader"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p623-处理流bufferedreader"}},[_._v("#")]),_._v(" p623 处理流bufferedreader")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("bufferedreader和bufferedwriter属于字符流，是按照字符来读取数据的")])]),_._v(" "),v("li",[v("p",[_._v("关闭处理流，只需要关闭外层流即可")])])]),_._v(" "),v("h3",{attrs:{id:"p624-bufferedwriter"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p624-bufferedwriter"}},[_._v("#")]),_._v(" p624 bufferedwriter")]),_._v(" "),v("h3",{attrs:{id:"p625-buffered拷贝"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p625-buffered拷贝"}},[_._v("#")]),_._v(" p625 buffered拷贝")]),_._v(" "),v("h3",{attrs:{id:"p626-buffered字节处理流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p626-buffered字节处理流"}},[_._v("#")]),_._v(" p626 buffered字节处理流")]),_._v(" "),v("h3",{attrs:{id:"p627-字节处理流拷贝文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p627-字节处理流拷贝文件"}},[_._v("#")]),_._v(" p627 字节处理流拷贝文件")]),_._v(" "),v("h3",{attrs:{id:"p628-对象处理流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p628-对象处理流"}},[_._v("#")]),_._v(" p628 对象处理流")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("序列化就是在保存数据时，保存数据的值和数据类型")])]),_._v(" "),v("li",[v("p",[_._v("反序列化就是在恢复数据时，恢复数据的值和数据类型")])]),_._v(" "),v("li",[v("p",[_._v("需要让某个对象支持序列化机制，则必须让其类是可序列化的，为了让某个类时可序列化的，必须实现两个接口之一：serializable\n（标记接口，没有方法） externalizable（该接口有方法需要实现，因此我们一般用前者当接口）")])])]),_._v(" "),v("h3",{attrs:{id:"p629-objectoutputstream"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p629-objectoutputstream"}},[_._v("#")]),_._v(" p629 objectoutputstream")]),_._v(" "),v("ul",[v("li",[_._v("提供了序列化功能")])]),_._v(" "),v("h3",{attrs:{id:"p630-objectinputstream"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p630-objectinputstream"}},[_._v("#")]),_._v(" p630 objectinputstream")]),_._v(" "),v("ul",[v("li",[_._v("提供了反序列化功能")])]),_._v(" "),v("h3",{attrs:{id:"p631-对象处理流使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p631-对象处理流使用细节"}},[_._v("#")]),_._v(" p631 对象处理流使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("读写顺序要一致")])]),_._v(" "),v("li",[v("p",[_._v("要求序列化或反序列化对象，需要实现serializable接口")])]),_._v(" "),v("li",[v("p",[_._v("序列化的类中建议添加serialversionUID，为了提高版本的兼容性")])]),_._v(" "),v("li",[v("p",[_._v("序列化对象时，默认将里面所有属性都进行序列化，但除了static或transient修饰的成员")])]),_._v(" "),v("li",[v("p",[_._v("序列化对象时，要求里面属性的类型也需要实现序列化接口")])]),_._v(" "),v("li",[v("p",[_._v("序列化具备可继承性，也就是如果某类已经实现了序列化，则它的所有子类也已经默认实现了序列化")])])]),_._v(" "),v("h3",{attrs:{id:"p632-标准输入输出流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p632-标准输入输出流"}},[_._v("#")]),_._v(" p632 标准输入输出流")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("system.in 标准输入 类型inputstream 默认设备键盘")])]),_._v(" "),v("li",[v("p",[_._v("system.out 标准输出 类型printstream 默认设备显示器")])])]),_._v(" "),v("h3",{attrs:{id:"p633-乱码引出转换流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p633-乱码引出转换流"}},[_._v("#")]),_._v(" p633 乱码引出转换流")]),_._v(" "),v("h3",{attrs:{id:"p634-inputstreamreader"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p634-inputstreamreader"}},[_._v("#")]),_._v(" p634 inputstreamreader")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("是reader的子类，可以将inputstream（字节流）包装成（转换）reader（字符流）")])]),_._v(" "),v("li",[v("p",[_._v("outputstreamwriter：writer的子类，实现将outputstream（字节流）包装成writer（字符流）")])]),_._v(" "),v("li",[v("p",[_._v("当处理纯文本数据时，如果使用字符流效率更高，并且可以有效解决中文问题，所以建议将字节流转换成字符流")])]),_._v(" "),v("li",[v("p",[_._v("可以在使用时指定编码格式")])])]),_._v(" "),v("h3",{attrs:{id:"p635-outputstreamwriter"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p635-outputstreamwriter"}},[_._v("#")]),_._v(" p635 outputstreamwriter")]),_._v(" "),v("h3",{attrs:{id:"p636-printstream"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p636-printstream"}},[_._v("#")]),_._v(" p636 printstream")]),_._v(" "),v("ul",[v("li",[_._v("打印流只有输出流，没有输入流")])]),_._v(" "),v("h3",{attrs:{id:"p637-printwriter"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p637-printwriter"}},[_._v("#")]),_._v(" p637 printwriter")]),_._v(" "),v("h3",{attrs:{id:"p638-配置文件引出properties"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p638-配置文件引出properties"}},[_._v("#")]),_._v(" p638 配置文件引出properties")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("专门用于读写配置文件的集合类 配置文件的格式 键=值")])]),_._v(" "),v("li",[v("p",[_._v("键值对不需要有空格，值不需要用引号一起来，默认类型是string")])]),_._v(" "),v("li",[v("p",[_._v("properties的常见方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("load：加载配置文件的键值对到properties对象")])]),_._v(" "),v("li",[v("p",[_._v("list：将数据显示到指定设备")])]),_._v(" "),v("li",[v("p",[_._v("getpropertry（key）：根据键获取值")])]),_._v(" "),v("li",[v("p",[_._v("setpropertry（key，value）：设置键值对到properties对象")])]),_._v(" "),v("li",[v("p",[_._v("store：将properties中的键值对存储到配置文件，在idea中，保存信息到配置文件，如果有中文，就会存储为unicode码")])])])])]),_._v(" "),v("h3",{attrs:{id:"p639-properties读文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p639-properties读文件"}},[_._v("#")]),_._v(" p639 properties读文件")]),_._v(" "),v("h3",{attrs:{id:"p640-properties修改文件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p640-properties修改文件"}},[_._v("#")]),_._v(" p640 properties修改文件")]),_._v(" "),v("h3",{attrs:{id:"p641-作业1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p641-作业1"}},[_._v("#")]),_._v(" p641 作业1")]),_._v(" "),v("h3",{attrs:{id:"p642-作业2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p642-作业2"}},[_._v("#")]),_._v(" p642 作业2")]),_._v(" "),v("h3",{attrs:{id:"p643-作业2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p643-作业2"}},[_._v("#")]),_._v(" p643 作业2")]),_._v(" "),v("h2",{attrs:{id:"第20章-坦克大战3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第20章-坦克大战3"}},[_._v("#")]),_._v(" 第20章 坦克大战3")]),_._v(" "),v("h3",{attrs:{id:"p644-防止坦克重叠思路"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p644-防止坦克重叠思路"}},[_._v("#")]),_._v(" p644 防止坦克重叠思路")]),_._v(" "),v("h3",{attrs:{id:"p645-击中坦克爆炸完善"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p645-击中坦克爆炸完善"}},[_._v("#")]),_._v(" p645 击中坦克爆炸完善")]),_._v(" "),v("h3",{attrs:{id:"p646-647-648-防止敌人坦克重叠"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p646-647-648-防止敌人坦克重叠"}},[_._v("#")]),_._v(" p646 647 648 防止敌人坦克重叠")]),_._v(" "),v("h3",{attrs:{id:"p649-650-记录玩家成绩"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p649-650-记录玩家成绩"}},[_._v("#")]),_._v(" p649 650 记录玩家成绩")]),_._v(" "),v("h3",{attrs:{id:"p651-记录敌人坦克信息"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p651-记录敌人坦克信息"}},[_._v("#")]),_._v(" p651 记录敌人坦克信息")]),_._v(" "),v("h3",{attrs:{id:"p652-653-继续上局游戏"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p652-653-继续上局游戏"}},[_._v("#")]),_._v(" p652 653 继续上局游戏")]),_._v(" "),v("h3",{attrs:{id:"p654-坦克大战音乐"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p654-坦克大战音乐"}},[_._v("#")]),_._v(" p654 坦克大战音乐")]),_._v(" "),v("h3",{attrs:{id:"p655-坦克大战1内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p655-坦克大战1内容梳理"}},[_._v("#")]),_._v(" p655 坦克大战1内容梳理")]),_._v(" "),v("h3",{attrs:{id:"p656-线程基础内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p656-线程基础内容梳理"}},[_._v("#")]),_._v(" p656 线程基础内容梳理")]),_._v(" "),v("h3",{attrs:{id:"p657-坦克大战2内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p657-坦克大战2内容梳理"}},[_._v("#")]),_._v(" p657 坦克大战2内容梳理")]),_._v(" "),v("h3",{attrs:{id:"p658-io流内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p658-io流内容梳理"}},[_._v("#")]),_._v(" p658 io流内容梳理")]),_._v(" "),v("h3",{attrs:{id:"p659-坦克大战3内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p659-坦克大战3内容梳理"}},[_._v("#")]),_._v(" p659 坦克大战3内容梳理")]),_._v(" "),v("h3",{attrs:{id:"p660-第二阶段结束语"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p660-第二阶段结束语"}},[_._v("#")]),_._v(" p660 第二阶段结束语")]),_._v(" "),v("p",[_._v("读书破万卷下笔如有神 ，纸上得来终觉浅绝知此事要躬行")]),_._v(" "),v("p",[_._v("第三阶段")]),_._v(" "),v("h2",{attrs:{id:"第21章-网络编程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第21章-网络编程"}},[_._v("#")]),_._v(" 第21章 网络编程")]),_._v(" "),v("p",[_._v("计算机网络 对数据传输的包装和解构")]),_._v(" "),v("h3",{attrs:{id:"p661-网络相关的概念"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p661-网络相关的概念"}},[_._v("#")]),_._v(" p661 网络相关的概念")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("网络通信")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("两台设备之间通过网络实现数据传输")])]),_._v(" "),v("li",[v("p",[_._v("数据通过网络从一台到另一台")])]),_._v(" "),v("li",[v("p",[v("a",{attrs:{href:"http://java.net/",target:"_blank",rel:"noopener noreferrer"}},[_._v("java.net"),v("OutboundLink")],1),_._v("包下提供了一系列的类和接口，供程序员使用，完成网络通信")])])])]),_._v(" "),v("li",[v("p",[_._v("网络")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("多态设备")])]),_._v(" "),v("li",[v("p",[_._v("覆盖范围对网络进行了分配")])])])])]),_._v(" "),v("h3",{attrs:{id:"p662-ip地址"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p662-ip地址"}},[_._v("#")]),_._v(" p662 ip地址")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("用于唯一标识网络中的每台计算机/主机")])]),_._v(" "),v("li",[v("p",[_._v("查看ip地址：ipconfig")])]),_._v(" "),v("li",[v("p",[_._v("ip地址的表示形式：点分十进制 xx.xx.xx.xx")])]),_._v(" "),v("li",[v("p",[_._v("每一个十进制数范围：0~255")])]),_._v(" "),v("li",[v("p",[_._v("ip地址的组成= 网络地址+主机地址 比如 192.168.16.69")])]),_._v(" "),v("li",[v("p",[_._v("ipv6 可以吹吹牛")])]),_._v(" "),v("li",[v("p",[_._v("ipv4最大的问题在于网络地址资源有限，严重制约了互联网的应用和发展。ipv6的使用可以解决网络地址资源数量的问题，也解决了多种接入设备连入互联网的障碍")])])]),_._v(" "),v("h3",{attrs:{id:"p663-域名和端口"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p663-域名和端口"}},[_._v("#")]),_._v(" p663 域名和端口")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("域名")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("为了方便记忆，解决记ip的困难")])]),_._v(" "),v("li",[v("p",[_._v("将ip地址映射成域名，这里怎么映射，http协议")])])])]),_._v(" "),v("li",[v("p",[_._v("端口号")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("用于表示计算机某个特定的网络程序")])]),_._v(" "),v("li",[v("p",[_._v("表示形式：以整数形式，端口范围0~65535,2个字节表示端口")])]),_._v(" "),v("li",[v("p",[_._v("0~1024已经被占用，比如ssh22，ftp21，smtp25，http80")])]),_._v(" "),v("li",[v("p",[_._v("常见的网络程序端口号：tomcat 8080 mysql 3306 oracle 1521 sqlserver 1433")])])])])]),_._v(" "),v("h3",{attrs:{id:"p664-网络协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p664-网络协议"}},[_._v("#")]),_._v(" p664 网络协议")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("tcp/ip 为 传输控制协议 因特网互联协议，又叫网络通讯协议，这个协议是internet最基本的协议，internet国际互联网络的基础，简单来说，就是由网络层的ip协议和传输层的tcp协议组成的")])]),_._v(" "),v("li",[v("p",[_._v("网络通信协议")])])]),_._v(" "),v("h3",{attrs:{id:"p665-tcp和udp"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p665-tcp和udp"}},[_._v("#")]),_._v(" p665 TCP和UDP")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("tcp 传输控制协议")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用tcp协议前，须先建立tcp连接，形成传输数据通道")])]),_._v(" "),v("li",[v("p",[_._v("传输前，采用“三次握手”方式，是可靠的")])]),_._v(" "),v("li",[v("p",[_._v("tcp协议进行通信的两个应用进程：客户端、服务端")])]),_._v(" "),v("li",[v("p",[_._v("在连接中可进行大量数据的传输")])]),_._v(" "),v("li",[v("p",[_._v("传输完毕，需释放已建立的连接，效率低")])])])]),_._v(" "),v("li",[v("p",[_._v("udp 用户数据协议")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("将数据、源、目的封装成数据包，不需要建立连接")])]),_._v(" "),v("li",[v("p",[_._v("每个数据报的大小限制在64k内，不适合传输大量数据")])]),_._v(" "),v("li",[v("p",[_._v("因无需连接，故不可靠的")])]),_._v(" "),v("li",[v("p",[_._v("发送数据结束时，无需释放资源，因为不是面向连接的，速度快")])])])])]),_._v(" "),v("h3",{attrs:{id:"p666-inetaddress"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p666-inetaddress"}},[_._v("#")]),_._v(" p666 InetAddress")]),_._v(" "),v("p",[_._v("显示类图")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("获取本机inetaddress对象 get"),v("a",{attrs:{href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"}},[_._v("localhost"),v("OutboundLink")],1)])]),_._v(" "),v("li",[v("p",[_._v("根据指定主机名/域名获取ip地址对象 getbyname")])]),_._v(" "),v("li",[v("p",[_._v("获取inetaddress对象的主机名 gethostname")])]),_._v(" "),v("li",[v("p",[_._v("获取inetaddress对象的地址 gethostaddress")])])]),_._v(" "),v("h3",{attrs:{id:"p667-socket"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p667-socket"}},[_._v("#")]),_._v(" p667 socket")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("套接字开发网络应用程序被广泛采用，以至于成为事实上的标准")])]),_._v(" "),v("li",[v("p",[_._v("通信的两端都要有socket，是两台机器间通信的端点")])]),_._v(" "),v("li",[v("p",[_._v("网络通信其实就是socket间的通信")])]),_._v(" "),v("li",[v("p",[_._v("socket允许程序把网络连接当成一个流，数据在两个socket间通过io传输")])]),_._v(" "),v("li",[v("p",[_._v("一般主动发起通信的应用程序属客户端，等待通信请求的为服务端")])])]),_._v(" "),v("h3",{attrs:{id:"p668-669-tcp字节流编程1-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p668-669-tcp字节流编程1-2"}},[_._v("#")]),_._v(" p668 669 TCP字节流编程1 2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("基于客户端 服务端的网络通信")])]),_._v(" "),v("li",[v("p",[_._v("底层使用的是tcp/ip协议")])]),_._v(" "),v("li",[v("p",[_._v("客户端发送数据，服务端接受并显示控制台")])]),_._v(" "),v("li",[v("p",[_._v("基于socket的tcp编程")])])]),_._v(" "),v("h3",{attrs:{id:"p670-tcp网络通信编程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p670-tcp网络通信编程"}},[_._v("#")]),_._v(" p670 TCP网络通信编程")]),_._v(" "),v("h3",{attrs:{id:"p671-网络上传文件1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p671-网络上传文件1"}},[_._v("#")]),_._v(" p671 网络上传文件1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("服务端 uploadserver")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("建立服务端8888")]),_._v(" "),v("ul",[v("li",[_._v("new ServerSocket（8888）.var")])])]),_._v(" "),v("li",[v("p",[_._v("等待客户端的连接")]),_._v(" "),v("ul",[v("li",[_._v("socket.accept")])])]),_._v(" "),v("li",[v("p",[_._v("读取客户端发送的数据（客户端写完后开始），通过socket得到输入流")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("bufferedinputstream bis = new bufferedinputsream(socket.getinputstream());")])]),_._v(" "),v("li",[v("p",[_._v("byte[] bytes = StreamUtils.streamToByteArray(bis);")])])])]),_._v(" "),v("li",[v("p",[_._v("完成将得到的bytes数组，写入到指定的路劲，就得到一个文件")]),_._v(" "),v("ul",[v("li",[v("p",[_._v('string destfilepath = "src\\qie2.png";')])]),_._v(" "),v("li",[v("p",[_._v("bufferedoutputstream bos = new bufferedoutputstream（new fileoutputstream(destfilepath)）;")])]),_._v(" "),v("li",[v("p",[_._v("bos.write(bytes);")])]),_._v(" "),v("li",[v("p",[_._v("bos.close();")])]),_._v(" "),v("li",[v("p",[_._v("向客户端回复“收到图片” 通过socket 获取到输出流（字符）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("bufferedwritter writer = new bufferedwriter（new outputstreamwriter（socket.getoutputstream()））;")])]),_._v(" "),v("li",[v("p",[_._v("writer.write(“收到图片”)；")])]),_._v(" "),v("li",[v("p",[_._v("writer.flush();//把内容刷新到数据通道")])]),_._v(" "),v("li",[v("p",[_._v("socket.shutdownoutput();//设置写入结束标记 追到源码 发现是while所以一定要写一个结束标志")])])])])])]),_._v(" "),v("li",[v("p",[_._v("关闭其他资源")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("writer.close();")])]),_._v(" "),v("li",[v("p",[_._v("bis.close();")])]),_._v(" "),v("li",[v("p",[_._v("socket.close();")])]),_._v(" "),v("li",[v("p",[_._v("serversocket.close();")])])])])])]),_._v(" "),v("li",[v("p",[_._v("客户端 uploadclient")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("建立客户端8888 记得抛出异常")]),_._v(" "),v("ul",[v("li",[_._v("new socket(inetaddress.get"),v("a",{attrs:{href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"}},[_._v("localhost"),v("OutboundLink")],1),_._v(",8888) post是8888")])])]),_._v(" "),v("li",[v("p",[_._v("创建读取磁盘文件的输入流")]),_._v(" "),v("ul",[v("li",[_._v("new bufferedinputstream(new fileinputstream（“filepath”）).var")])])]),_._v(" "),v("li",[v("p",[_._v("用一个工具库 创建输出流对象 字节数据 循环读取 把读取的数据写入bos中 将bos转成为一个字节数组")]),_._v(" "),v("ul",[v("li",[_._v("byte[] bytes = StreamUtils.streamToByteArray(bis); bytes就是filepath对应的字节数组")])])]),_._v(" "),v("li",[v("p",[_._v("通过socket获取到输出流，将bytes数据发送给服务端")]),_._v(" "),v("ul",[v("li",[_._v("bufferedoutputstream bos = new bufferedoutputstream（socket.getoutputstream()）;")])])]),_._v(" "),v("li",[v("p",[_._v("将文件对应的字节数组的内容，写入搭配数据通道")]),_._v(" "),v("ul",[v("li",[_._v("bos.write(bytes);")])])]),_._v(" "),v("li",[v("p",[_._v("设置写入数据的结束标记")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("bis.close();")])]),_._v(" "),v("li",[v("p",[_._v("socket.shutdownOutput();")])])])]),_._v(" "),v("li",[v("p",[_._v("接收从服务端回复的消息")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("input inputstream = socket.getinputstream();")])]),_._v(" "),v("li",[v("p",[_._v("使用streamutils 的方法，直接将 inputstream 读取到的内容转成字符串")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("string s = streamutils.streamtostring(inputstream);")])]),_._v(" "),v("li",[v("p",[_._v("sout(s)")])])])])])]),_._v(" "),v("li",[v("p",[_._v("关闭相关的流")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("bos.close();")])]),_._v(" "),v("li",[v("p",[_._v("socket.close();")])])])])])])]),_._v(" "),v("h3",{attrs:{id:"p672-网络上传文件2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p672-网络上传文件2"}},[_._v("#")]),_._v(" p672 网络上传文件2")]),_._v(" "),v("h3",{attrs:{id:"p673网络上传文件3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p673网络上传文件3"}},[_._v("#")]),_._v(" p673网络上传文件3")]),_._v(" "),v("h3",{attrs:{id:"p674-netstat"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p674-netstat"}},[_._v("#")]),_._v(" p674 netstat")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("netstat -an 可以查看当前主机网络情况，包括端口监听情况和网络连接情况")])]),_._v(" "),v("li",[v("p",[_._v("netstat -an | more可以分页显示")])]),_._v(" "),v("li",[v("p",[_._v("要求在dos控制台下执行win + r")])])]),_._v(" "),v("h3",{attrs:{id:"p675-tcp网络通信编程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p675-tcp网络通信编程"}},[_._v("#")]),_._v(" p675 TCP网络通信编程")]),_._v(" "),v("h3",{attrs:{id:"p676-udp原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p676-udp原理"}},[_._v("#")]),_._v(" p676 UDP原理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("基本流程")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("两个类")])]),_._v(" "),v("li",[v("p",[_._v("建立发送端，接收端")])]),_._v(" "),v("li",[v("p",[_._v("建立数据包 datagrampacket对象")])])])]),_._v(" "),v("li",[v("p",[_._v("没有明确的服务端和客户端，演变成数据的发送端和接收端")])]),_._v(" "),v("li",[v("p",[_._v("接收数据和发送数据是通过DatagramSocket对象完成")])]),_._v(" "),v("li",[v("p",[_._v("将数据封装到DataGramPacket对象/装包")])]),_._v(" "),v("li",[v("p",[_._v("当接收到DatagramPacket对象，需要进行拆包，取出数据")])]),_._v(" "),v("li",[v("p",[_._v("Datasocket可以指定在哪个端口接收数据")])])]),_._v(" "),v("h3",{attrs:{id:"p677-udp网络编程1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p677-udp网络编程1"}},[_._v("#")]),_._v(" p677 UDP网络编程1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("接收端 receiverA（先启动）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("创建一个 DatagramSocket 对象，准备在9999接收数据")]),_._v(" "),v("ul",[v("li",[_._v("new DatagramSocket（9999）.var")])])]),_._v(" "),v("li",[v("p",[_._v("构建一个 DatagramPacket 对象，准备接收数据")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("byte[] buf = new byte[1024];//最大64k")])]),_._v(" "),v("li",[v("p",[_._v("DatagramPacket packet = new DatagramPacket（buf，buf.length）;")])])])]),_._v(" "),v("li",[v("p",[_._v("调用 接收方法 填充到 packet对象 有数据包就收 没有数据包就堵塞")]),_._v(" "),v("ul",[v("li",[v("p",[_._v('sout（“接收端A 等待接收数据"）；')])]),_._v(" "),v("li",[v("p",[_._v("socket.receive（packet ）；有异常抛出")])])])]),_._v(" "),v("li",[v("p",[_._v("可以把packet 进行拆包，取出数据并表示")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("int length = packet.getLength（）；//实际接收到的数据字节长度")])]),_._v(" "),v("li",[v("p",[_._v("byte[] data = packet.getData()；//接收到数据")])]),_._v(" "),v("li",[v("p",[_._v("String s = new String（data，0，length）；")])]),_._v(" "),v("li",[v("p",[_._v("sout（s）；")])])])]),_._v(" "),v("li",[v("p",[_._v("回复一个消息")]),_._v(" "),v("ul",[v("li",[v("p",[_._v('byte[] data = "ok，eat tomorrow!".getBytes();')])]),_._v(" "),v("li",[v("p",[_._v("packet = new DatagramPacket(data,data.length, InetAddress.getname(192.128.12.1),9998);")])]),_._v(" "),v("li",[v("p",[_._v("socket.send(packet);")])])])]),_._v(" "),v("li",[v("p",[_._v("关闭资源")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("socket.close（）；")])]),_._v(" "),v("li",[v("p",[_._v('sout（"A端退出"）；')])])])])])]),_._v(" "),v("li",[v("p",[_._v("发送端 senderA")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("创建 DatagramSocket 对象，在9998端口接收数据")]),_._v(" "),v("ul",[v("li",[_._v("new DatagramSocket（9998）.var//创建一个新端口发送东西")])])]),_._v(" "),v("li",[v("p",[_._v("将需要发送的数据封装到一个 datagrampacket 中")]),_._v(" "),v("ul",[v("li",[v("p",[_._v('byte[] data = "hello,eat hotpot today!".getBytes();')])]),_._v(" "),v("li",[v("p",[_._v("new DatagramPacket(data,data.length, InetAddress.getname(192.128.12.1),9999);")]),_._v(" "),v("ul",[v("li",[_._v("数据 数据长度 主机ip 端口")])])])])]),_._v(" "),v("li",[v("p",[_._v("发送数据")]),_._v(" "),v("ul",[v("li",[_._v("socket.send(packet);")])])]),_._v(" "),v("li",[v("p",[_._v("接收从A端回复的消息")]),_._v(" "),v("ul",[v("li",[_._v("从packet开始 到 拆包打印数据")])])]),_._v(" "),v("li",[v("p",[_._v("关闭资源")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("socket.close（）；")])]),_._v(" "),v("li",[v("p",[_._v("sout（“B端退出”）；")])])])])])])]),_._v(" "),v("h3",{attrs:{id:"p678-udp网络编程2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p678-udp网络编程2"}},[_._v("#")]),_._v(" p678 UDP网络编程2")]),_._v(" "),v("h3",{attrs:{id:"p679-网络编程作业1-字符流"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p679-网络编程作业1-字符流"}},[_._v("#")]),_._v(" p679 网络编程作业1 字符流")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("客户端发送“name”，服务器接收到后发送“我是xx”")])]),_._v(" "),v("li",[v("p",[_._v("客户端发送“hobby”，服务器接收到后，返回“编写java程序”")])]),_._v(" "),v("li",[v("p",[_._v("不是这两个问题，回复“你说啥呢”")])])]),_._v(" "),v("h3",{attrs:{id:"p680-网络编程作业2-udp协议"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p680-网络编程作业2-udp协议"}},[_._v("#")]),_._v(" p680 网络编程作业2 UDP协议")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("接收端 拆包后取出数据进行比较")])]),_._v(" "),v("li",[v("p",[_._v("发送端 将要发送的数据 封装到对象 请输入你的问题")])])]),_._v(" "),v("h3",{attrs:{id:"p681-682-tcp文件下载1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p681-682-tcp文件下载1"}},[_._v("#")]),_._v(" p681 682 TCP文件下载1")]),_._v(" "),v("ul",[v("li",[_._v("下载文件的应用")])]),_._v(" "),v("h3",{attrs:{id:"p683-网络编程梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p683-网络编程梳理"}},[_._v("#")]),_._v(" p683 网络编程梳理")]),_._v(" "),v("h2",{attrs:{id:"第22章-通信系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第22章-通信系统"}},[_._v("#")]),_._v(" 第22章 通信系统")]),_._v(" "),v("h3",{attrs:{id:"p684-多用户通信系统"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p684-多用户通信系统"}},[_._v("#")]),_._v(" p684 多用户通信系统")]),_._v(" "),v("h3",{attrs:{id:"p685-项目开发流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p685-项目开发流程"}},[_._v("#")]),_._v(" p685 项目开发流程")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("需求分析 需求分析师 懂技术 行业 白皮书 客户需求")])]),_._v(" "),v("li",[v("p",[_._v("设计阶段 架构师/项目经理 设计工作 UML类图，流程图，模块设计，数据库，架构 原型开发 组建团队")])]),_._v(" "),v("li",[v("p",[_._v("实现阶段 程序员 完成架构师的模块功能 测试自己模块")])]),_._v(" "),v("li",[v("p",[_._v("测试阶段 测试工程师 单元测试 测试用例 白盒测试 黑盒测试 集成测试")])]),_._v(" "),v("li",[v("p",[_._v("实施阶段 实施工程师（开发能力/环境配置部署能力） 项目正确的部署到客户的平台，并保证运行正常")])]),_._v(" "),v("li",[v("p",[_._v("维护阶段 发现bug 项目升级")])])]),_._v(" "),v("h3",{attrs:{id:"p686-多用户通信需求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p686-多用户通信需求"}},[_._v("#")]),_._v(" p686 多用户通信需求")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("用户登陆")])]),_._v(" "),v("li",[v("p",[_._v("拉取在线用户列表")])]),_._v(" "),v("li",[v("p",[_._v("无异常退出 客户端 服务端 system.exit(0);")])]),_._v(" "),v("li",[v("p",[_._v("私聊")])]),_._v(" "),v("li",[v("p",[_._v("群聊")])]),_._v(" "),v("li",[v("p",[_._v("发文件")])]),_._v(" "),v("li",[v("p",[_._v("服务器推送新闻")])])]),_._v(" "),v("h3",{attrs:{id:"p687-通信系统整体分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p687-通信系统整体分析"}},[_._v("#")]),_._v(" p687 通信系统整体分析")]),_._v(" "),v("h3",{attrs:{id:"p688-qq用户登陆1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p688-qq用户登陆1"}},[_._v("#")]),_._v(" p688 qq用户登陆1")]),_._v(" "),v("h3",{attrs:{id:"p689-qq用户登陆2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p689-qq用户登陆2"}},[_._v("#")]),_._v(" p689 qq用户登陆2")]),_._v(" "),v("h3",{attrs:{id:"p690-qq用户登陆3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p690-qq用户登陆3"}},[_._v("#")]),_._v(" p690 qq用户登陆3")]),_._v(" "),v("h3",{attrs:{id:"p691-qq用户登陆4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p691-qq用户登陆4"}},[_._v("#")]),_._v(" p691 qq用户登陆4")]),_._v(" "),v("h3",{attrs:{id:"p692-qq用户登陆5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p692-qq用户登陆5"}},[_._v("#")]),_._v(" p692 qq用户登陆5")]),_._v(" "),v("h3",{attrs:{id:"p693-qq用户登陆6"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p693-qq用户登陆6"}},[_._v("#")]),_._v(" p693 qq用户登陆6")]),_._v(" "),v("h3",{attrs:{id:"p694-qq用户登陆7"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p694-qq用户登陆7"}},[_._v("#")]),_._v(" p694 qq用户登陆7")]),_._v(" "),v("h3",{attrs:{id:"p695-拉取在线用户列表1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p695-拉取在线用户列表1"}},[_._v("#")]),_._v(" p695 拉取在线用户列表1")]),_._v(" "),v("h3",{attrs:{id:"p696-拉取在线用户列表2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p696-拉取在线用户列表2"}},[_._v("#")]),_._v(" p696 拉取在线用户列表2")]),_._v(" "),v("h3",{attrs:{id:"p697-拉取在线用户列表3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p697-拉取在线用户列表3"}},[_._v("#")]),_._v(" p697 拉取在线用户列表3")]),_._v(" "),v("h3",{attrs:{id:"p698-无异常退出系统1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p698-无异常退出系统1"}},[_._v("#")]),_._v(" p698 无异常退出系统1")]),_._v(" "),v("h3",{attrs:{id:"p699-无异常退出系统2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p699-无异常退出系统2"}},[_._v("#")]),_._v(" p699 无异常退出系统2")]),_._v(" "),v("h3",{attrs:{id:"p700-私聊思路分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p700-私聊思路分析"}},[_._v("#")]),_._v(" p700 私聊思路分析")]),_._v(" "),v("h3",{attrs:{id:"p701-私聊代码实现1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p701-私聊代码实现1"}},[_._v("#")]),_._v(" p701 私聊代码实现1")]),_._v(" "),v("h3",{attrs:{id:"p702-私聊代码实现2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p702-私聊代码实现2"}},[_._v("#")]),_._v(" p702 私聊代码实现2")]),_._v(" "),v("h3",{attrs:{id:"p703-群发分析实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p703-群发分析实现"}},[_._v("#")]),_._v(" p703 群发分析实现")]),_._v(" "),v("h3",{attrs:{id:"p704-发文件思路分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p704-发文件思路分析"}},[_._v("#")]),_._v(" p704 发文件思路分析")]),_._v(" "),v("h3",{attrs:{id:"p705-发文件实现1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p705-发文件实现1"}},[_._v("#")]),_._v(" p705 发文件实现1")]),_._v(" "),v("h3",{attrs:{id:"p706-发文件实现2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p706-发文件实现2"}},[_._v("#")]),_._v(" p706 发文件实现2")]),_._v(" "),v("h2",{attrs:{id:"第23章-反射"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第23章-反射"}},[_._v("#")]),_._v(" 第23章 反射")]),_._v(" "),v("h3",{attrs:{id:"p710-反射机制问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p710-反射机制问题"}},[_._v("#")]),_._v(" p710 反射机制问题")]),_._v(" "),v("h3",{attrs:{id:"p711-反射快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p711-反射快速入门"}},[_._v("#")]),_._v(" p711 反射快速入门")]),_._v(" "),v("h3",{attrs:{id:"p712-反射原理图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p712-反射原理图"}},[_._v("#")]),_._v(" p712 反射原理图")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("反射机制允许程序在执行期借助reflectionAPI取得任何类的内部消息（比如成员变量，构造器，成员方法等），并能操作对象的属性及方法。反射在设计模式和框架底层都会用到")])]),_._v(" "),v("li",[v("p",[_._v("加载类之后，在堆中就产生了一个class类型的对象（一个类只有一个class对象），这个对象包含了类的完整结构信息。通过这个对象得到类的结构。这个对象就像一面镜子，透过这个镜子看到类的结构，所以，形象称之为：反射")])]),_._v(" "),v("li",[v("p",[_._v("java反射机制原理图")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("代码级阶段 编译 字节码文件（类加载器东西）")])]),_._v(" "),v("li",[v("p",[_._v("class类阶段（加载阶段）")])]),_._v(" "),v("li",[v("p",[_._v("runtime运行阶段")])])])])]),_._v(" "),v("h3",{attrs:{id:"p713-反射相关类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p713-反射相关类"}},[_._v("#")]),_._v(" p713 反射相关类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java.lang.Class:代表一个类，Class对象表示某个类加载后在堆中的对象")])]),_._v(" "),v("li",[v("p",[_._v("java.lang.reflect.Method：代表类的方法")])]),_._v(" "),v("li",[v("p",[_._v("java.lang.reflect.Filed：代表类的成员变量")])]),_._v(" "),v("li",[v("p",[_._v("java.lang.reflect.Constructor：代表类的构造方法")])])]),_._v(" "),v("h3",{attrs:{id:"p714-反射调用优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p714-反射调用优化"}},[_._v("#")]),_._v(" p714 反射调用优化")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("优点")]),_._v(" "),v("ul",[v("li",[_._v("动态的创建和使用对象（也是框架底层核心），使用灵活，没有反射机制，框架技术就失去底层支撑")])])]),_._v(" "),v("li",[v("p",[_._v("缺点")]),_._v(" "),v("ul",[v("li",[_._v("使用反射基本是解释进行，对执行速度有影响")])])]),_._v(" "),v("li",[v("p",[_._v("优化")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("setAccessible（）方法")])]),_._v(" "),v("li",[v("p",[_._v("作用是启动和禁用访问安全检查的开关")])]),_._v(" "),v("li",[v("p",[_._v("参数值为true时 表示使用时取消访问检查，提高反射的效率。参数值为false时，表示对反射对象的执行访问检查")])])])])]),_._v(" "),v("h3",{attrs:{id:"p715-class类分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p715-class类分析"}},[_._v("#")]),_._v(" p715 Class类分析")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("class也是类，因此继承了object类")])]),_._v(" "),v("li",[v("p",[_._v("class类对象不是new出来的，而是系统创建的")])]),_._v(" "),v("li",[v("p",[_._v("对于某个类的class对象，在内存中只有一份，因为类加载只有一次")])]),_._v(" "),v("li",[v("p",[_._v("每个类的实例都会记得自己是由哪个class实例所生成的")])]),_._v(" "),v("li",[v("p",[_._v("通过class可以完整地得到一个类的完整结构，通过一系列api")])]),_._v(" "),v("li",[v("p",[_._v("class对象是存放在堆中的")])]),_._v(" "),v("li",[v("p",[_._v("类的字节码二进制数据，是放在方法区的，有的地方称为类的元数据（包括方法代码，变量名，方法名，访问权限等等）")])])]),_._v(" "),v("h3",{attrs:{id:"p716-class常用方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p716-class常用方法"}},[_._v("#")]),_._v(" p716 Class常用方法")]),_._v(" "),v("h3",{attrs:{id:"p717-获取class对象的六种方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p717-获取class对象的六种方式"}},[_._v("#")]),_._v(" p717 获取Class对象的六种方式")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("已知一个类的全类名，且该类在类的路径下，可通过Class类的静态方法forName（）获取，可能会抛出类找不到异常")]),_._v(" "),v("ul",[v("li",[_._v("多用于配置文件，读取类全路径，加载类")])])]),_._v(" "),v("li",[v("p",[_._v("若已知具体的类，通过类的class获取，该方式最为安全可靠，程序性能最高")]),_._v(" "),v("ul",[v("li",[_._v("多用于参数传递，比如通过反射得到")])])]),_._v(" "),v("li",[v("p",[_._v("已知某个类的实例，调用该实例的getClass（）方法获取Class对象")]),_._v(" "),v("ul",[v("li",[_._v("通过创建好的对象，获取Class对象")])])]),_._v(" "),v("li",[v("p",[_._v("通过类加载器获得class对象")])]),_._v(" "),v("li",[v("p",[_._v("基本数据类型按如下方式得到class对象")])]),_._v(" "),v("li",[v("p",[_._v("基本数据类型对应的包装类，可以通过.TYPE得到Class类对象")])])]),_._v(" "),v("h3",{attrs:{id:"p718-哪些类型有class对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p718-哪些类型有class对象"}},[_._v("#")]),_._v(" p718 哪些类型有Class对象")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("外部类，成员内部类，静态内部类，局部内部类，匿名内部类")])]),_._v(" "),v("li",[v("p",[_._v("接口")])]),_._v(" "),v("li",[v("p",[_._v("数组")])]),_._v(" "),v("li",[v("p",[_._v("枚举")])]),_._v(" "),v("li",[v("p",[_._v("注解")])]),_._v(" "),v("li",[v("p",[_._v("基本数据类型")])]),_._v(" "),v("li",[v("p",[_._v("void")])])]),_._v(" "),v("h3",{attrs:{id:"p719-动态和静态加载"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p719-动态和静态加载"}},[_._v("#")]),_._v(" p719 动态和静态加载")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("反射机制是java实现动态语言的关键，也就是通过反射实现类动态加载")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("静态加载：编译时加载相关的类，如果没有则报错，依赖性太强")]),_._v(" "),v("ul",[v("li",[_._v("newdog静态加载，因此必须编写dog")])])]),_._v(" "),v("li",[v("p",[_._v("动态加载：运行时加载需要的类，如果运行时，不用该类，则不报错，降低了依赖性")]),_._v(" "),v("ul",[v("li",[_._v("person类时动态加载，所以，没有编写person类也不会报错，只有动态加载该类时，才会报错")])])])])]),_._v(" "),v("li",[v("p",[_._v("类加载的时机")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当创建对象时（new）")])]),_._v(" "),v("li",[v("p",[_._v("当子类被加载时")])]),_._v(" "),v("li",[v("p",[_._v("调用类中的静态成员时")])]),_._v(" "),v("li",[v("p",[_._v("通过反射")])])])])]),_._v(" "),v("h3",{attrs:{id:"p720-类加载流程图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p720-类加载流程图"}},[_._v("#")]),_._v(" p720 类加载流程图")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("java源码 com.Cat.java")]),_._v(" "),v("p",[_._v("javac编译")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("字节码文件 com.Cat.class")]),_._v(" "),v("p",[_._v("java运行")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("加载")]),_._v(" "),v("p",[_._v("类加载三个阶段")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("验证")])]),_._v(" "),v("li",[v("p",[_._v("准备")])]),_._v(" "),v("li",[v("p",[_._v("解析")]),_._v(" "),v("p",[_._v("类的二进制数据合并到jre中")]),_._v(" "),v("ul",[v("li",[_._v("初始化\njvm负责对类进行初始化，这里主要是指静态成员方法")])])])])])])])])]),_._v(" "),v("li",[v("p",[_._v("类加载后内存布局情况")])])]),_._v(" "),v("h3",{attrs:{id:"p721-类加载的五个阶段1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p721-类加载的五个阶段1"}},[_._v("#")]),_._v(" p721 类加载的五个阶段1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("加载")]),_._v(" "),v("ul",[v("li",[_._v("jvm在该阶段的主要目的是将字节码从不同的数据源（可能是class文件、可能是jar包，甚至网络）转化为二进制字节流加载到内存中，并生成一个代表该类的java.lang.Class对象")])])]),_._v(" "),v("li",[v("p",[_._v("连接阶段 验证")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("目的是为了确保class文件的字节流中包含的信息符合当前虚拟机的要求，并且不会危害虚拟机自身的安全")])]),_._v(" "),v("li",[v("p",[_._v("包括：文件格式验证（是否已莫属oxcafeabe开头）、元数据验证、字节码验证和符号引用验证")])]),_._v(" "),v("li",[v("p",[_._v("可以考虑使用 -Xverify：nome参数来关闭大部分的类验证措施，缩短虚拟机类加载的时间")])])])]),_._v(" "),v("li",[v("p",[_._v("连接阶段 准备")]),_._v(" "),v("p",[_._v("各种变量")]),_._v(" "),v("ul",[v("li",[_._v("jvm会在该阶段对静态变量，分配内存并默认初始化（对应数据类型的默认初始值，如0，0L，null，false）。这些变量所使用的的内存都将在方法区中进行分配")])])]),_._v(" "),v("li",[v("p",[_._v("连接阶段 解析")]),_._v(" "),v("ul",[v("li",[_._v("虚拟机将常量池内的符号引用替换为直接引用的过程")])])])]),_._v(" "),v("h3",{attrs:{id:"p722-类加载的五个阶段2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p722-类加载的五个阶段2"}},[_._v("#")]),_._v(" p722 类加载的五个阶段2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("初始化")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("到初始化阶段，才真正开始执行类中定义的java程序代码，此解读那是执行"),v("clinit",[_._v("()方法的过程")])],1)]),_._v(" "),v("li",[v("p",[v("clinit",[_._v("()方法是由编译器按语句在源文件中出现的顺序，依次自动收集类中的所有静态变量的赋值操作和静态代码块中的语句，并进行合并")])],1)]),_._v(" "),v("li",[v("p",[_._v("虚拟机会保证一个类的"),v("clinit",[_._v("()\n方法在多线程环境中被正确的加锁、同步，如果多个线程同时去初始化一个类，那么只会有一个线程去执行这个类"),v("clinit",[_._v("()\n方法，其他线程都需要阻塞等待，直到活动线程执行"),v("clinit",[_._v("()方法完毕")])],1)],1)],1)])])])]),_._v(" "),v("h3",{attrs:{id:"p723-获取类结构信息1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p723-获取类结构信息1"}},[_._v("#")]),_._v(" p723 获取类结构信息1")]),_._v(" "),v("p",[_._v("代码没有自己敲")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("filed类究竟是什么类捏")])]),_._v(" "),v("li",[v("p",[_._v("万物皆对象的思想")])]),_._v(" "),v("li",[v("p",[_._v("返回对象，方便调用")])]),_._v(" "),v("li",[v("p",[_._v("得到class对象后 创建对象，调用对象方法，操作属性等等")])])]),_._v(" "),v("h3",{attrs:{id:"p724-获取类结构信息2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p724-获取类结构信息2"}},[_._v("#")]),_._v(" p724 获取类结构信息2")]),_._v(" "),v("h3",{attrs:{id:"p725-反射暴破创建实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p725-反射暴破创建实例"}},[_._v("#")]),_._v(" p725 反射暴破创建实例")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("通过反射创建对象")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("方式一：调用类中的public修饰的无参构造器")])]),_._v(" "),v("li",[v("p",[_._v("方式二：调用类中的指定构造器")])]),_._v(" "),v("li",[v("p",[_._v("class类中相关方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("newinstance：调用类中的无参构造器，获取对应类的对象")])]),_._v(" "),v("li",[v("p",[_._v("getConstructor（Class... clazz）:根据参数列表，获取对应的public构造器对象")])]),_._v(" "),v("li",[v("p",[_._v("getDeclaredConstructor（Class...clazz）：根据参数列表，获取对应的所有构造器对象")])])])]),_._v(" "),v("li",[v("p",[_._v("constructor类相关方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("setAcessible：暴破")])]),_._v(" "),v("li",[v("p",[_._v("newInstance（Object...obj）：调用构造器")])])])])])])]),_._v(" "),v("h3",{attrs:{id:"p726-反射暴破操作属性"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p726-反射暴破操作属性"}},[_._v("#")]),_._v(" p726 反射暴破操作属性")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("根据属性名获取filed对象")]),_._v(" "),v("ul",[v("li",[_._v("Field f = clazz对象.getDecared(属性名)；")])])]),_._v(" "),v("li",[v("p",[_._v("暴破")]),_._v(" "),v("ul",[v("li",[_._v("f.setAcessible（true）；")])])]),_._v(" "),v("li",[v("p",[_._v("访问")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("f.set(o,值)；")])]),_._v(" "),v("li",[v("p",[_._v("syso（f.get(o)）;")])])])]),_._v(" "),v("li",[v("p",[_._v("如果是静态属性，则set和get中的参数o，可以写成null")])])]),_._v(" "),v("h3",{attrs:{id:"p727-反射暴破操作方法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p727-反射暴破操作方法"}},[_._v("#")]),_._v(" p727 反射暴破操作方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("根据方法名和参数列表获取method方法对象")]),_._v(" "),v("ul",[v("li",[_._v("method m = clazz.getDeclaredMethod(方法名，xx.class);")])])]),_._v(" "),v("li",[v("p",[_._v("获取对象")]),_._v(" "),v("ul",[v("li",[_._v("Object o = clazz.newInstance();")])])]),_._v(" "),v("li",[v("p",[_._v("暴破")]),_._v(" "),v("ul",[v("li",[_._v("m.setAcessible(true);")])])]),_._v(" "),v("li",[v("p",[_._v("访问")]),_._v(" "),v("ul",[v("li",[_._v("Object returnValue = m.invoke(o,实参列表);")])])]),_._v(" "),v("li",[v("p",[_._v("如果是静态方法，则invoke的参数o，可以写成null")])])]),_._v(" "),v("h3",{attrs:{id:"p728-反射课后练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p728-反射课后练习"}},[_._v("#")]),_._v(" p728 反射课后练习")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("io流为什么我的idea不能创建文件咧")]),_._v(" "),v("ul",[v("li",[_._v("使用管理员程序运行")])])]),_._v(" "),v("li",[v("p",[_._v("java.lang")])])]),_._v(" "),v("h3",{attrs:{id:"p729-反射梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p729-反射梳理"}},[_._v("#")]),_._v(" p729 反射梳理")]),_._v(" "),v("ul",[v("li",[_._v("balabala")])]),_._v(" "),v("h2",{attrs:{id:"第24章-mysql-数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第24章-mysql-数据库"}},[_._v("#")]),_._v(" 第24章 MySQL（数据库）")]),_._v(" "),v("p",[_._v("xx表名 xxn列名")]),_._v(" "),v("h3",{attrs:{id:"p730-数据库的作用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p730-数据库的作用"}},[_._v("#")]),_._v(" p730 数据库的作用")]),_._v(" "),v("ul",[v("li",[_._v("数据库简单原理图")])]),_._v(" "),v("h3",{attrs:{id:"p731-mysql数据库的安装配置"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p731-mysql数据库的安装配置"}},[_._v("#")]),_._v(" p731 mysql数据库的安装配置")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("本机安装 MySQL8")])]),_._v(" "),v("li",[v("p",[_._v("使用命令行窗口连接MySQL数据库")])]),_._v(" "),v("li",[v("p",[_._v("登陆前保证服务启动")])]),_._v(" "),v("li",[v("p",[_._v("常用方式")])])]),_._v(" "),v("h3",{attrs:{id:"p732-命令行连接到mysql"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p732-命令行连接到mysql"}},[_._v("#")]),_._v(" p732 命令行连接到mysql")]),_._v(" "),v("ul",[v("li",[_._v("mysql -h 主机ip -P 端口 -u 用户名 -p密码")])]),_._v(" "),v("h3",{attrs:{id:"p733-navicat安装和使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p733-navicat安装和使用"}},[_._v("#")]),_._v(" p733 navicat安装和使用")]),_._v(" "),v("p",[_._v("csdn")]),_._v(" "),v("h3",{attrs:{id:"p734-sqlyog安装和使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p734-sqlyog安装和使用"}},[_._v("#")]),_._v(" p734 SQLyog安装和使用")]),_._v(" "),v("h3",{attrs:{id:"p735-mysql三层结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p735-mysql三层结构"}},[_._v("#")]),_._v(" p735 MYSQL三层结构")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("所谓安装MySQL数据库，就是在主机安装一个数据库管理系统（DBMS），这个管理程序可以多个数据库")])]),_._v(" "),v("li",[v("p",[_._v("一个数据库中可以创建多个表，以保存数据")])]),_._v(" "),v("li",[v("p",[_._v("数据库管理系统和表的关系如图")])]),_._v(" "),v("li",[v("p",[_._v("表本质是文件")])]),_._v(" "),v("li",[v("p",[_._v("行 row 列 column")])]),_._v(" "),v("li",[v("p",[_._v("一行记录 java往往用 一个对象映射")])]),_._v(" "),v("li",[v("p",[_._v("sql语句分类")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("DDL 数据定义语句")]),_._v(" "),v("ul",[v("li",[_._v("create表 库")])])]),_._v(" "),v("li",[v("p",[_._v("DML 数据操作语句")]),_._v(" "),v("ul",[v("li",[_._v("增加insert 修改updata 删除delete")])])]),_._v(" "),v("li",[v("p",[_._v("DQL 数据查询语句")]),_._v(" "),v("ul",[v("li",[_._v("select")])])]),_._v(" "),v("li",[v("p",[_._v("DCL 数据控制语句")]),_._v(" "),v("ul",[v("li",[_._v("管理数据库：比如说用户权限 授予grant 撤销revoke")])])])])])]),_._v(" "),v("h3",{attrs:{id:"p736-java操作mysql"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p736-java操作mysql"}},[_._v("#")]),_._v(" p736 java操作MySQL")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("演示一下怎么使用")])]),_._v(" "),v("li",[v("p",[_._v("路径文件 url")])]),_._v(" "),v("li",[v("p",[_._v("字符串命令")])])]),_._v(" "),v("h3",{attrs:{id:"p737-创建数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p737-创建数据库"}},[_._v("#")]),_._v(" p737 创建数据库")]),_._v(" "),v("p",[_._v("bin root")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("1.CHARACTER SET:指定数据库采用的字符集，如果不指定字符集，默认utf8")])]),_._v(" "),v("li",[v("p",[_._v("2.COLLATE：指定数据库字符集的校对规则（常用utf8_bin、utf8_general_ci注意默认是utf8_general_ci）")])]),_._v(" "),v("li",[v("p",[_._v("创建数据库 CREATE DATABASE xx1;")])]),_._v(" "),v("li",[v("p",[_._v("删除数据库 DROP DATABASE xx1;")])]),_._v(" "),v("li",[v("p",[_._v("创建一个使用utf8字符集的XXX2数据库 CREATE DATABASE xx2 CHARACTER SET utf8")])]),_._v(" "),v("li",[v("p",[_._v("创建一个使用utf8字符集，并带校对规则的XXX3数据库 CREATE DATABASE xx3 CHARACTER SET utf8 COLLATE utf8_bin")])]),_._v(" "),v("li",[v("p",[_._v("校对规则 区分大小写 查询")])]),_._v(" "),v("li",[v("p",[_._v("select 查询语句 SELECT * FROM T1 WHERE NAME = 'tom'")])])]),_._v(" "),v("h3",{attrs:{id:"p738-查询数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p738-查询数据库"}},[_._v("#")]),_._v(" p738 查询数据库")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("显示数据库语句")]),_._v(" "),v("ul",[v("li",[_._v("SHOW DATABASES")])])]),_._v(" "),v("li",[v("p",[_._v("显示数据库创建语句")]),_._v(" "),v("ul",[v("li",[_._v("SHOW CREATE DATABASE xx_name")])])]),_._v(" "),v("li",[v("p",[_._v("数据库删除语句")]),_._v(" "),v("p",[_._v("从入门到跑路")]),_._v(" "),v("ul",[v("li",[_._v("DROP DATABASE [IF EXISTS] xx_name")])])]),_._v(" "),v("li",[v("p",[_._v("关键字 反引号")])])]),_._v(" "),v("h3",{attrs:{id:"p739-备份恢复数据库"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p739-备份恢复数据库"}},[_._v("#")]),_._v(" p739 备份恢复数据库")]),_._v(" "),v("ul",[v("li",[v("h2",{attrs:{id:"备份数据库-注意在dos执行-命令行-mysqldump-u-用户名-p-b-数据库1-数据库2-数据库n-路径-文件名-sql"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#备份数据库-注意在dos执行-命令行-mysqldump-u-用户名-p-b-数据库1-数据库2-数据库n-路径-文件名-sql"}},[_._v("#")]),_._v(" 备份数据库（注意在DOS执行）命令行 mysqldump -u 用户名 -p -B 数据库1 数据库2 数据库n > 路径+文件名.sql")])]),_._v(" "),v("li",[v("p",[_._v("恢复数据库 source 路径+文件名.sql")])])]),_._v(" "),v("h3",{attrs:{id:"p740-创建表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p740-创建表"}},[_._v("#")]),_._v(" p740 创建表")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("CREATE TABLE table_name \\n")])]),_._v(" "),v("li",[v("p",[_._v("(\\n field1 datatype,\\n field2 datatype,\\n filed3 datatype)")])]),_._v(" "),v("li",[v("p",[_._v("character set 字符集 collate 校对规则 engine 引擎")])]),_._v(" "),v("li",[v("p",[_._v("filed：指定列名")])]),_._v(" "),v("li",[v("p",[_._v("datatype：指定列类型（字段类型）")])]),_._v(" "),v("li",[v("p",[_._v("character set：如不指定则为所在数据库字符集")])]),_._v(" "),v("li",[v("p",[_._v("collate：如不指定为所在数据库的校对规则")])]),_._v(" "),v("li",[v("p",[_._v("engine：引擎")])])]),_._v(" "),v("h3",{attrs:{id:"p741-列类型有哪些"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p741-列类型有哪些"}},[_._v("#")]),_._v(" p741 列类型有哪些")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("数值类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("整型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("tinyint 1字节")])]),_._v(" "),v("li",[v("p",[_._v("smallint 2字节")])]),_._v(" "),v("li",[v("p",[_._v("mediumint 3字节")])]),_._v(" "),v("li",[v("p",[_._v("int 4字节")])]),_._v(" "),v("li",[v("p",[_._v("bigint 8字节")])])])]),_._v(" "),v("li",[v("p",[_._v("小数类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("float 单精度 4字节")])]),_._v(" "),v("li",[v("p",[_._v("double 双精度 8字节")])]),_._v(" "),v("li",[v("p",[_._v("decimal [M,D] 大小不确定")])])])])])]),_._v(" "),v("li",[v("p",[_._v("文本类型（字符串类型）")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("char 255")])]),_._v(" "),v("li",[v("p",[_._v("varchar 2^16-1")])]),_._v(" "),v("li",[v("p",[_._v("text 2^16-1")])]),_._v(" "),v("li",[v("p",[_._v("longtext 2^32-1")])])])]),_._v(" "),v("li",[v("p",[_._v("二进制数据类型")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("blob 2^16-1")])]),_._v(" "),v("li",[v("p",[_._v("longblob")])])])]),_._v(" "),v("li",[v("p",[_._v("时间日期")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("data")])]),_._v(" "),v("li",[v("p",[_._v("time")])]),_._v(" "),v("li",[v("p",[_._v("datatime")])]),_._v(" "),v("li",[v("p",[_._v("timetemp 时间戳")])]),_._v(" "),v("li",[v("p",[_._v("year")])])])])]),_._v(" "),v("h3",{attrs:{id:"p742-列类型之整型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p742-列类型之整型"}},[_._v("#")]),_._v(" p742 列类型之整型")]),_._v(" "),v("h3",{attrs:{id:"p743-列类型之bit"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p743-列类型之bit"}},[_._v("#")]),_._v(" p743 列类型之bit")]),_._v(" "),v("h3",{attrs:{id:"p744-列类型之小数型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p744-列类型之小数型"}},[_._v("#")]),_._v(" p744 列类型之小数型")]),_._v(" "),v("h3",{attrs:{id:"p745-列类型值字符串"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p745-列类型值字符串"}},[_._v("#")]),_._v(" p745 列类型值字符串")]),_._v(" "),v("h3",{attrs:{id:"p746-列类型之字符串"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p746-列类型之字符串"}},[_._v("#")]),_._v(" p746 列类型之字符串")]),_._v(" "),v("h3",{attrs:{id:"p747-日期类型"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p747-日期类型"}},[_._v("#")]),_._v(" p747 日期类型")]),_._v(" "),v("h3",{attrs:{id:"p748-创建表的练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p748-创建表的练习"}},[_._v("#")]),_._v(" p748 创建表的练习")]),_._v(" "),v("h3",{attrs:{id:"p749-修改表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p749-修改表"}},[_._v("#")]),_._v(" p749 修改表")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用ALTER TABLE 语句追加 列 add")])]),_._v(" "),v("li",[v("p",[_._v("修改 modify")])]),_._v(" "),v("li",[v("p",[_._v("删除 drop")])]),_._v(" "),v("li",[v("p",[_._v("查看表的结构 desc")])]),_._v(" "),v("li",[v("p",[_._v("修改表名：Rename table 表名 to 新表名")])]),_._v(" "),v("li",[v("p",[_._v("修改表字符集： alter table 表名 character set 字符集")])])]),_._v(" "),v("h3",{attrs:{id:"p750-insert基本使用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p750-insert基本使用"}},[_._v("#")]),_._v(" p750 insert基本使用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("数据库create read updata delete")])]),_._v(" "),v("li",[v("p",[_._v("insert updata delete select")])])]),_._v(" "),v("h3",{attrs:{id:"p751-insert注意事项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p751-insert注意事项"}},[_._v("#")]),_._v(" p751 insert注意事项")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("插入的数据应与字段的数据类型相同")]),_._v(" "),v("ul",[v("li",[_._v("INSERT INTO ``（） VALUES（）；")])])]),_._v(" "),v("li",[v("p",[_._v("数据的长度应在列的规定范围内")])]),_._v(" "),v("li",[v("p",[_._v("在values中列出的数据位置必须与被加入的列排列位置相对应")])]),_._v(" "),v("li",[v("p",[_._v("字符和日期型类型数据应包含在单引号中")])]),_._v(" "),v("li",[v("p",[_._v("列可以插入空值 前提是 该字段允许为空")])]),_._v(" "),v("li",[v("p",[_._v("insert into tab_name (列名...) values (),(),() 形式添加多条记录")])]),_._v(" "),v("li",[v("p",[_._v("如果是给表中的所有字段添加数据，可以不写前面的字段名称")])]),_._v(" "),v("li",[v("p",[_._v("默认值的使用，当不给某个字段值时，如果有默认值就会添加，否则报错")])])]),_._v(" "),v("h3",{attrs:{id:"p752-updata语句"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p752-updata语句"}},[_._v("#")]),_._v(" p752 updata语句")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("带where指定更新哪一行")])]),_._v(" "),v("li",[v("p",[_._v("可以更新原有表行中的各列")])]),_._v(" "),v("li",[v("p",[_._v("set子句指示要修改哪些列和要给予的值")])]),_._v(" "),v("li",[v("p",[_._v("如果要修改多个字段，可以通过UPDATA xx set 字段1 = 值1，字段2 = 值2 WHERE xx = 值3")])])]),_._v(" "),v("h3",{attrs:{id:"p753-delete语句"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p753-delete语句"}},[_._v("#")]),_._v(" p753 delete语句")]),_._v(" "),v("ul",[v("li",[_._v("DELETE FROM xx WHERE xx1 = 值1；")])]),_._v(" "),v("h3",{attrs:{id:"p754-select语句1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p754-select语句1"}},[_._v("#")]),_._v(" p754 select语句1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("SELECT * FROM xx；")])]),_._v(" "),v("li",[v("p",[_._v("SELECT xx1，xx2 FROM xx")])])]),_._v(" "),v("h3",{attrs:{id:"p755-select语句2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p755-select语句2"}},[_._v("#")]),_._v(" p755 select语句2")]),_._v(" "),v("ul",[v("li",[_._v("AS的用法")])]),_._v(" "),v("h3",{attrs:{id:"p756-select语句3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p756-select语句3"}},[_._v("#")]),_._v(" p756 select语句3")]),_._v(" "),v("p",[_._v("命令符 都是大写")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("在wher子句中经常使用的运算符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("比较运算符")])]),_._v(" "),v("li",[v("p",[_._v("逻辑运算符")])])])]),_._v(" "),v("li",[v("p",[_._v("AND")])]),_._v(" "),v("li",[v("p",[_._v("LIKE ‘韩%’")])]),_._v(" "),v("li",[v("p",[_._v("BETWEEN AND 闭区间")])]),_._v(" "),v("li",[v("p",[_._v("IN(89,90,91)")])])]),_._v(" "),v("h3",{attrs:{id:"p757-select语句4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p757-select语句4"}},[_._v("#")]),_._v(" p757 select语句4")]),_._v(" "),v("p",[_._v("命令语句 一行一行来")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用order by子句排序查询结果")])]),_._v(" "),v("li",[v("p",[_._v("1.order by 指定排序的列，排序的列既可以是表中的列名，也可以是select语句后指定的列名")])]),_._v(" "),v("li",[v("p",[_._v("2.Asc 升序（默认） Desc 降序")])]),_._v(" "),v("li",[v("p",[_._v("3.ORDER BY 子句应位于 SELECT 语句的结尾")])])]),_._v(" "),v("h3",{attrs:{id:"p758-统计函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p758-统计函数"}},[_._v("#")]),_._v(" p758 统计函数")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("合计/统计函数 -count")])]),_._v(" "),v("li",[v("p",[_._v("SELECT COUNT(*) FROM xx WHERE 条件")])]),_._v(" "),v("li",[v("p",[_._v("SUM函数的使用 求和")])]),_._v(" "),v("li",[v("p",[_._v("AVG函数的使用 求平均值")])])]),_._v(" "),v("h3",{attrs:{id:"p759-分组统计"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p759-分组统计"}},[_._v("#")]),_._v(" p759 分组统计")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("GROUP by 子句对列进行分组")])]),_._v(" "),v("li",[v("p",[_._v("使用having 子句对分组\n过滤")])])]),_._v(" "),v("h3",{attrs:{id:"p760-字符串函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p760-字符串函数"}},[_._v("#")]),_._v(" p760 字符串函数")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("字符串相关函数")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("CHARSET(str) 返回字串字符集")])]),_._v(" "),v("li",[v("p",[_._v("CONCAT(string，，) 连接多个列拼接成一列")])]),_._v(" "),v("li",[v("p",[_._v("INSTR（srt，substring） 返回substring在string中出现的位置，没有返回0")])]),_._v(" "),v("li",[v("p",[_._v("dual 亚元表 可以作为测试表使用")])]),_._v(" "),v("li",[v("p",[_._v("UCASE 转换成大写")])]),_._v(" "),v("li",[v("p",[_._v("LCASE 转换成小写")])]),_._v(" "),v("li",[v("p",[_._v("LEFT（string2，length）取做2字符")])]),_._v(" "),v("li",[v("p",[_._v("REPLACE（str，search_str,repalce_str）替换")])]),_._v(" "),v("li",[v("p",[_._v("STRCMP(string1,string2) 逐字符比较")])]),_._v(" "),v("li",[v("p",[_._v("SUBSTRING(ename,position,length) 从ename列的第一个位置开始取出length位置")])]),_._v(" "),v("li",[v("p",[_._v("LTRIM RTRIM TRIM 去除前端空格或后端空格")])])])])]),_._v(" "),v("h3",{attrs:{id:"p761-字符串函数练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p761-字符串函数练习"}},[_._v("#")]),_._v(" p761 字符串函数练习")]),_._v(" "),v("ul",[v("li",[_._v("练习题 小写首字母+后面全大写字母")])]),_._v(" "),v("h3",{attrs:{id:"p762-数学函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p762-数学函数"}},[_._v("#")]),_._v(" p762 数学函数")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("ABS（num） 绝对值")])]),_._v(" "),v("li",[v("p",[_._v("BIN（decimal_number）十进制转二进制")])]),_._v(" "),v("li",[v("p",[_._v("CEILING（number2）向上取整，得到比num2大的最小整数")])]),_._v(" "),v("li",[v("p",[_._v("CONV（number2，from_base，to_base） 进制转换")])]),_._v(" "),v("li",[v("p",[_._v("FLOOR（number2）向下取整，得到比num2小的最大整数")])]),_._v(" "),v("li",[v("p",[_._v("FORMAT（number，decimal_places） 保留小数位数")])]),_._v(" "),v("li",[v("p",[_._v("HEX（DecimalNumber）转十六进制")])]),_._v(" "),v("li",[v("p",[_._v("LEAST（number，number2[,,,]）求最小值")])]),_._v(" "),v("li",[v("p",[_._v("MOD（numberator，denominator） 求余")])]),_._v(" "),v("li",[v("p",[_._v("RAND（） RAND([seed]) 返回随机数 其范围为0到1.0，seed不变随机数不变")])])]),_._v(" "),v("h3",{attrs:{id:"p763-日期函数1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p763-日期函数1"}},[_._v("#")]),_._v(" p763 日期函数1")]),_._v(" "),v("p",[_._v("相对麻烦一点")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当前日期")])]),_._v(" "),v("li",[v("p",[_._v("差值")])]),_._v(" "),v("li",[v("p",[_._v("发布时间差值")])])]),_._v(" "),v("h3",{attrs:{id:"p764-日期函数2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p764-日期函数2"}},[_._v("#")]),_._v(" p764 日期函数2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("查询10分钟内发送的新闻")])]),_._v(" "),v("li",[v("p",[_._v("活到80岁，能活多少天")])]),_._v(" "),v("li",[v("p",[_._v("NOW（） 当前时间")])]),_._v(" "),v("li",[v("p",[_._v("TIMEDIFF（data1，data2） 两个时间差")])])]),_._v(" "),v("h3",{attrs:{id:"p765-日期函数3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p765-日期函数3"}},[_._v("#")]),_._v(" p765 日期函数3")]),_._v(" "),v("ul",[v("li",[_._v("年月日包起来now")])]),_._v(" "),v("h3",{attrs:{id:"p766-加密函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p766-加密函数"}},[_._v("#")]),_._v(" p766 加密函数")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("USER() 查询用户@ip地址")])]),_._v(" "),v("li",[v("p",[_._v("DATABASE（） 查询当前使用数据库名称")])]),_._v(" "),v("li",[v("p",[_._v("MD5（str）为字符串算出一个 MD5 32的字符串，常用（用户密码）加密")])]),_._v(" "),v("li",[v("p",[_._v("PASSWORD（str）")])]),_._v(" "),v("li",[v("p",[_._v("SELECT * FROM mysql.user")])])]),_._v(" "),v("h3",{attrs:{id:"p767-流程控制函数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p767-流程控制函数"}},[_._v("#")]),_._v(" p767 流程控制函数")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("IF（expr1，expr2，expr3） 真大师，null返回后面的")])]),_._v(" "),v("li",[v("p",[_._v("分支")]),_._v(" "),v("ul",[v("li",[_._v("SELECT CASE WHEN expr1 THEN value1 WHEN expr2 THEN value2 ELSE value3 END;")])])])]),_._v(" "),v("h3",{attrs:{id:"p768-查询增强"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p768-查询增强"}},[_._v("#")]),_._v(" p768 查询增强")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("前面讲过MySQL表的基本查询，但是都是对一张表进行的查询，这在实际的软件开发中，远远不够，创建三张表，多表查询")])]),_._v(" "),v("li",[v("p",[_._v("使用where子句")])]),_._v(" "),v("li",[v("p",[_._v("使用like操作符")])]),_._v(" "),v("li",[v("p",[_._v("%：表示0到多个字符")]),_._v(" "),v("ul",[v("li",[_._v("‘S%’")])])]),_._v(" "),v("li",[v("p",[_._v("_：表示单个字符")]),_._v(" "),v("ul",[v("li",[_._v("‘_O%’")])])]),_._v(" "),v("li",[v("p",[_._v("order by子句 排序")])])]),_._v(" "),v("h3",{attrs:{id:"p769-分页查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p769-分页查询"}},[_._v("#")]),_._v(" p769 分页查询")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("SELECT ... LIMIT START,ROWS 表示从start+1行开始取，取出row行，start从0开始计算")])]),_._v(" "),v("li",[v("p",[_._v("？？分页查询")])])]),_._v(" "),v("h3",{attrs:{id:"p770-分组增强"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p770-分组增强"}},[_._v("#")]),_._v(" p770 分组增强")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("使用分组函数和分组句子 group by")])]),_._v(" "),v("li",[v("p",[_._v("COUNT（*）")])]),_._v(" "),v("li",[v("p",[_._v("sql语句非常灵活")])])]),_._v(" "),v("h3",{attrs:{id:"p771-多子句查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p771-多子句查询"}},[_._v("#")]),_._v(" p771 多子句查询")]),_._v(" "),v("ul",[v("li",[_._v("AS别名")])]),_._v(" "),v("h3",{attrs:{id:"p772-多表笛卡尔集"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p772-多表笛卡尔集"}},[_._v("#")]),_._v(" p772 多表笛卡尔集")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("mysql的多表查询")])]),_._v(" "),v("li",[v("p",[_._v("多表查询是指基于两个和两个以上的表查询，在实际应用中，查询单个表可能不能满足你的需求")])])]),_._v(" "),v("h3",{attrs:{id:"p773-多表查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p773-多表查询"}},[_._v("#")]),_._v(" p773 多表查询")]),_._v(" "),v("ul",[v("li",[_._v("过滤条件")])]),_._v(" "),v("h3",{attrs:{id:"p774-自连接"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p774-自连接"}},[_._v("#")]),_._v(" p774 自连接")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("alias 别名")])]),_._v(" "),v("li",[v("p",[_._v("过滤条件最重要的")])]),_._v(" "),v("li",[v("p",[_._v("查同一张表，一张表当两张表，取别名 表名 表别名")])]),_._v(" "),v("li",[v("p",[_._v("列名不明确，可以指定列的别名 列名 AS 列的别名")])])]),_._v(" "),v("h3",{attrs:{id:"p775-多行子查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p775-多行子查询"}},[_._v("#")]),_._v(" p775 多行子查询")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("子查询是嵌入在其他sql语句中的select语句，也叫嵌套查询")])]),_._v(" "),v("li",[v("p",[_._v("单行子查询")])]),_._v(" "),v("li",[v("p",[_._v("DISTINCT")])]),_._v(" "),v("li",[v("p",[_._v("不等号有好几种 等号=")])])]),_._v(" "),v("h3",{attrs:{id:"p776-子查询临时表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p776-子查询临时表"}},[_._v("#")]),_._v(" p776 子查询临时表")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("子查询当做临时表使用")])]),_._v(" "),v("li",[v("p",[_._v("组合+判断")])]),_._v(" "),v("li",[v("p",[_._v("查询商品表 先得到各个类别中，价格最高的商品，当做临时表")])]),_._v(" "),v("li",[v("p",[_._v("把子查询当做一张临时表可以解决很多复杂的查询")])])]),_._v(" "),v("h3",{attrs:{id:"p777-all和any"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p777-all和any"}},[_._v("#")]),_._v(" p777 all和any")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("ALL所有人 包了一个子表进去")])]),_._v(" "),v("li",[v("p",[_._v("比你最高的最高 max（sal）")])]),_._v(" "),v("li",[v("p",[_._v("ANY任何人 min 比你最低的高")])])]),_._v(" "),v("h3",{attrs:{id:"p778-多列子查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p778-多列子查询"}},[_._v("#")]),_._v(" p778 多列子查询")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("指查询返回多个列数据的子查询语句")])]),_._v(" "),v("li",[v("p",[_._v("查询当子表，使用多列子查询的语法进行匹配")])])]),_._v(" "),v("h3",{attrs:{id:"p779-子查询练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p779-子查询练习"}},[_._v("#")]),_._v(" p779 子查询练习")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("AVG 分组记得有各个部分")])]),_._v(" "),v("li",[v("p",[_._v("部门名来自dept表")])]),_._v(" "),v("li",[v("p",[_._v("表.* 表示将该表所有列都显示出来")])]),_._v(" "),v("li",[v("p",[_._v("当多个表的列不重复时，才可以直接写列名")])])]),_._v(" "),v("h3",{attrs:{id:"p780-表复制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p780-表复制"}},[_._v("#")]),_._v(" p780 表复制")]),_._v(" "),v("ul",[v("li",[_._v("自我复制 insert")])]),_._v(" "),v("h3",{attrs:{id:"p781-合并查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p781-合并查询"}},[_._v("#")]),_._v(" p781 合并查询")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("为了合并多个select语句的结果，可以使用集合操作符号，union")])]),_._v(" "),v("li",[v("p",[_._v("union all 该操作符用于取得两个结果集的并集，当使用该操作符是，不会取消重复行")])])]),_._v(" "),v("h3",{attrs:{id:"p782-外连接需求"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p782-外连接需求"}},[_._v("#")]),_._v(" p782 外连接需求")]),_._v(" "),v("ul",[v("li",[_._v("左外连接 右外连接")])]),_._v(" "),v("h3",{attrs:{id:"p783-左外连右外连"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p783-左外连右外连"}},[_._v("#")]),_._v(" p783 左外连右外连")]),_._v(" "),v("h3",{attrs:{id:"p784-主键"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p784-主键"}},[_._v("#")]),_._v(" p784 主键")]),_._v(" "),v("p",[_._v("实际开发都有主键")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("约束")])]),_._v(" "),v("li",[v("p",[_._v("primary key不能重复而且不能为null")])]),_._v(" "),v("li",[v("p",[_._v("一张表最多只能有一个主键，但可以是复合主键")])]),_._v(" "),v("li",[v("p",[_._v("主键的指定方式：两种")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("直接在字段后指定 字段名 primary key")])]),_._v(" "),v("li",[v("p",[_._v("在表中定义 primary key(列名)")])])])]),_._v(" "),v("li",[v("p",[_._v("使用desc表名，可以看到primary key的情况")])])]),_._v(" "),v("h3",{attrs:{id:"p785-unique"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p785-unique"}},[_._v("#")]),_._v(" p785 unique")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("not null 不能插入空值")])]),_._v(" "),v("li",[v("p",[_._v("unique")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("如果没有指定not null，则unique 字段可以有多个null")])]),_._v(" "),v("li",[v("p",[_._v("一张表可以有多个unique")])])])])]),_._v(" "),v("h3",{attrs:{id:"p786-外键介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p786-外键介绍"}},[_._v("#")]),_._v(" p786 外键介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("创建主表")])]),_._v(" "),v("li",[v("p",[_._v("创建从表")])]),_._v(" "),v("li",[v("p",[_._v("FOREIGN KEY xx1 REFERENCES xx2")])]),_._v(" "),v("li",[v("p",[_._v("细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("外键指向的表的字段，要求是primary key或者是unique")])]),_._v(" "),v("li",[v("p",[_._v("表的类型是innodb，这样的表才支持外键")])]),_._v(" "),v("li",[v("p",[_._v("外键字段的值，必须在主键字段中出现过，或者为null（前提是外键字段允许为null）")])]),_._v(" "),v("li",[v("p",[_._v("外键字段的类型要和主键字段的类型一致（长度可以不用）")])]),_._v(" "),v("li",[v("p",[_._v("一旦建立主外键的关系，数据不能随意删除了")])])])])]),_._v(" "),v("h3",{attrs:{id:"p788-check"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p788-check"}},[_._v("#")]),_._v(" p788 check")]),_._v(" "),v("p",[_._v("检查")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("用于强制行数据必须满足的条件，假定在sal列上定义了check约束，并要求sal列值在某区间不在就会提示出错")])]),_._v(" "),v("li",[v("p",[_._v("oracle 和 sql sever 均支持check，5.7不支持check只做语法校验")])])]),_._v(" "),v("h3",{attrs:{id:"p789-商品表"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p789-商品表"}},[_._v("#")]),_._v(" p789 商品表")]),_._v(" "),v("p",[_._v("使用约束的课堂练习")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("建表")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("主外键")])]),_._v(" "),v("li",[v("p",[_._v("客户姓名不能为空值")])]),_._v(" "),v("li",[v("p",[_._v("不能够重复")])]),_._v(" "),v("li",[v("p",[_._v("单价需要check")])])])])]),_._v(" "),v("h3",{attrs:{id:"p790-自增长"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p790-自增长"}},[_._v("#")]),_._v(" p790 自增长")]),_._v(" "),v("ul",[v("li",[_._v("添加自增长的字段方式")])]),_._v(" "),v("h3",{attrs:{id:"p791-索引优化速度"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p791-索引优化速度"}},[_._v("#")]),_._v(" p791 索引优化速度")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("CREATE INDEX empno_index ON emp (empno)")])]),_._v(" "),v("li",[v("p",[_._v("索引也会占空间")])]),_._v(" "),v("li",[v("p",[_._v("索引还有很多细节")])])]),_._v(" "),v("h3",{attrs:{id:"p792-索引机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p792-索引机制"}},[_._v("#")]),_._v(" p792 索引机制")]),_._v(" "),v("p",[_._v("数据结构 树")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("id创建索引 ？平衡二叉树")])]),_._v(" "),v("li",[v("p",[_._v("磁盘占用，对updata delete inset 语句的影响（数据结构的改变）")])])]),_._v(" "),v("h3",{attrs:{id:"p793-创建索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p793-创建索引"}},[_._v("#")]),_._v(" p793 创建索引")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("主键索引，主键自动的为主索引，类型 primary key")])]),_._v(" "),v("li",[v("p",[_._v("唯一索引 unique")])]),_._v(" "),v("li",[v("p",[_._v("普通索引 index")])]),_._v(" "),v("li",[v("p",[_._v("全文索引 fulltext 使用与mylSAM 开发中考虑使用：全文搜索Solr和ElasticSearch")])])]),_._v(" "),v("h3",{attrs:{id:"p793-创建索引-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p793-创建索引-2"}},[_._v("#")]),_._v(" p793 创建索引")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("查询表是否有索引")])]),_._v(" "),v("li",[v("p",[_._v("添加唯一索引")]),_._v(" "),v("ul",[v("li",[_._v("CREATE UNIQUE INDEX id_index ON t25 (id)")])])]),_._v(" "),v("li",[v("p",[_._v("添加普通索引")]),_._v(" "),v("ul",[v("li",[_._v("ALTER TABLE t25 ADD INDEX id_index (id)")])])]),_._v(" "),v("li",[v("p",[_._v("添加主键索引")])]),_._v(" "),v("li",[v("p",[_._v("如何选择")]),_._v(" "),v("ul",[v("li",[_._v("某列的值，不会重复，优先考虑使用unique索引，否则使用普通索引")])])])]),_._v(" "),v("h3",{attrs:{id:"p794-删除索引"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p794-删除索引"}},[_._v("#")]),_._v(" p794 删除索引")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("展示索引")]),_._v(" "),v("ul",[v("li",[_._v("SHOW INDEX t26 ADD PRIMARY KEY（id）")])])]),_._v(" "),v("li",[v("p",[_._v("删除索引")]),_._v(" "),v("ul",[v("li",[_._v("DROP INDEX id_index ON t25")])])]),_._v(" "),v("li",[v("p",[_._v("删除主键索引")]),_._v(" "),v("ul",[v("li",[_._v("ALTER TABLE t26 DROP PRIMARY KEY")])])]),_._v(" "),v("li",[v("p",[_._v("查询索引")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("SHOW INDEX FROM t25")])]),_._v(" "),v("li",[v("p",[_._v("SHOW INDEXES FROM t25")])]),_._v(" "),v("li",[v("p",[_._v("SHOW KEYS FROM t25")])]),_._v(" "),v("li",[v("p",[_._v("DESC t25 信息可能会少一点")])])])])]),_._v(" "),v("h3",{attrs:{id:"p795-创建索引规则"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p795-创建索引规则"}},[_._v("#")]),_._v(" p795 创建索引规则")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("较频繁的作为查询条件字段应该创建索引")])]),_._v(" "),v("li",[v("p",[_._v("唯一性太差的字段不适合单独创建索引，即使频繁作为查询条件")])]),_._v(" "),v("li",[v("p",[_._v("更新非常频繁的字段不适合创建索引")])]),_._v(" "),v("li",[v("p",[_._v("不会出现在WHERE子句中的字段不该创建")])])]),_._v(" "),v("h3",{attrs:{id:"p796-事务有什么用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p796-事务有什么用"}},[_._v("#")]),_._v(" p796 事务有什么用")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("事务用于保证数据的一致性，它由一组相关的dml语句组成，该组的dml语句要么全部成功，要么全部失败")])]),_._v(" "),v("li",[v("p",[_._v("事务和锁")]),_._v(" "),v("ul",[v("li",[_._v("当执行事务操作时（dml语句），MySQL会在表上加锁，防止其他用户该表的数据，对用户非常重要")])])]),_._v(" "),v("li",[v("p",[_._v("mysql数据库控制台事务的几个重要操作")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("start transaction --开始一个事务")])]),_._v(" "),v("li",[v("p",[_._v("savapoint 保存点名 --设置保存点")])]),_._v(" "),v("li",[v("p",[_._v("rollback to 保存点名 --回退事务")])]),_._v(" "),v("li",[v("p",[_._v("rollback --回退所有事务")])]),_._v(" "),v("li",[v("p",[_._v("commit --提交事务，所有的操作生效，不能回退")])])])])]),_._v(" "),v("h3",{attrs:{id:"p797-事务操作"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p797-事务操作"}},[_._v("#")]),_._v(" p797 事务操作")]),_._v(" "),v("h3",{attrs:{id:"p798-事务注意事项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p798-事务注意事项"}},[_._v("#")]),_._v(" p798 事务注意事项")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("不开启事务，默认dml语句自动提交")])]),_._v(" "),v("li",[v("p",[_._v("开启事务，可以执行rollback，默认回退到你事务开始的状态")])]),_._v(" "),v("li",[v("p",[_._v("创建多个保存点")])]),_._v(" "),v("li",[v("p",[_._v("innodb存储引擎才能使用，myisam不支持")])]),_._v(" "),v("li",[v("p",[_._v("开始一个事务start transaction，set autocommit = off；")])])]),_._v(" "),v("h3",{attrs:{id:"p799-4种隔离级别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p799-4种隔离级别"}},[_._v("#")]),_._v(" p799 4种隔离级别")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("多个连接开启各自事务操作数据库的数据时，数据库系统要负责隔离操作，以保证各个连接在获取数据时的准确性")])]),_._v(" "),v("li",[v("p",[_._v("如果不考虑，可能会引发如下问题")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("脏读")]),_._v(" "),v("ul",[v("li",[_._v("当一个事务读取另一个事务尚未提交dml的修改时，此时发生脏读")])])]),_._v(" "),v("li",[v("p",[_._v("不可重复读")]),_._v(" "),v("ul",[v("li",[_._v("同一查询在同一事务中多次进行，由于其提交的事务所做的修改和删除，每次返回不同的结果集，此时发生不可重复读")])])]),_._v(" "),v("li",[v("p",[_._v("幻读")]),_._v(" "),v("ul",[v("li",[_._v("同一查询在同一事务中多次进行，由于其他提交事务所做的插入操作，每次返回不同的结果集，此时发生幻读")])])])])]),_._v(" "),v("li",[v("p",[_._v("四种")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("读未提交")])]),_._v(" "),v("li",[v("p",[_._v("读已提交")])]),_._v(" "),v("li",[v("p",[_._v("可重复度")])]),_._v(" "),v("li",[v("p",[_._v("可串行化")])])])])]),_._v(" "),v("h3",{attrs:{id:"p800-隔离级别演示1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p800-隔离级别演示1"}},[_._v("#")]),_._v(" p800 隔离级别演示1")]),_._v(" "),v("h3",{attrs:{id:"p801-隔离级别演示2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p801-隔离级别演示2"}},[_._v("#")]),_._v(" p801 隔离级别演示2")]),_._v(" "),v("h3",{attrs:{id:"p802-设置隔离"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p802-设置隔离"}},[_._v("#")]),_._v(" p802 设置隔离")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("8.0有新语言")])]),_._v(" "),v("li",[v("p",[_._v("查看当前会话隔离级别")])]),_._v(" "),v("li",[v("p",[_._v("查看系统当前隔离级别")])]),_._v(" "),v("li",[v("p",[_._v("设置当前会话隔离级别")])]),_._v(" "),v("li",[v("p",[_._v("设置系统当前隔离级别")])])]),_._v(" "),v("h3",{attrs:{id:"p803-804-存储引擎1-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p803-804-存储引擎1-2"}},[_._v("#")]),_._v(" p803 804 存储引擎1 2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("MySQL的 表类型由存储引擎决定，主要包括MylSAM、innoDB、Memory等")])]),_._v(" "),v("li",[v("p",[_._v("MySQL数据表主要支持六种类型，分别是：CSV、memory、ARCHIVE、MRG_MYISAM、MYISAM、innoBDB")])]),_._v(" "),v("li",[v("p",[_._v("六种又分为两类，一类是“事务安全型”，innoDB；其余都属于第二类，为“非事务安全型”")])]),_._v(" "),v("li",[v("p",[_._v("如何选择")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("不需要事务，基本crud，mylsam")])]),_._v(" "),v("li",[v("p",[_._v("支持事务，innodb")])]),_._v(" "),v("li",[v("p",[_._v("经常变化无需长久保存的，memory")])])])]),_._v(" "),v("li",[v("p",[_._v("修改存储引擎")])])]),_._v(" "),v("h3",{attrs:{id:"p805-视图原理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p805-视图原理"}},[_._v("#")]),_._v(" p805 视图原理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("视图是一个虚拟表，其内容由查询定义。同真实的表一样，视图包含列，其数据来自对应的真实表（基表）")])]),_._v(" "),v("li",[v("p",[_._v("视图和基表关系的示意图")]),_._v(" "),v("ul",[v("li",[_._v("通过视图可以修改基表的数据")])])])]),_._v(" "),v("h3",{attrs:{id:"p806-视图使用细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p806-视图使用细节"}},[_._v("#")]),_._v(" p806 视图使用细节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("create view 视图名 as select语句")])]),_._v(" "),v("li",[v("p",[_._v("alter view 视图名 as select语句")])]),_._v(" "),v("li",[v("p",[_._v("show create view 视图名")])]),_._v(" "),v("li",[v("p",[_._v("drop view 视图名1，视图名2")])])]),_._v(" "),v("h3",{attrs:{id:"p807-视图应用实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p807-视图应用实例"}},[_._v("#")]),_._v(" p807 视图应用实例")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("安全")])]),_._v(" "),v("li",[v("p",[_._v("性能")])]),_._v(" "),v("li",[v("p",[_._v("灵活")])])]),_._v(" "),v("h3",{attrs:{id:"p808-mysql管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p808-mysql管理"}},[_._v("#")]),_._v(" p808 MySQL管理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("MySQL用户，都存储在系统数据库MySQL中user表")])]),_._v(" "),v("li",[v("p",[_._v("创建新的用户")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("CREATE USER ’hsp_edu‘@'"),v("a",{attrs:{href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"}},[_._v("localhost"),v("OutboundLink")],1),_._v("' IDENTIFIED BY '123456'")])]),_._v(" "),v("li",[v("p",[_._v("SELECT * FROM mysql.user")])])])]),_._v(" "),v("li",[v("p",[_._v("删除用户")])]),_._v(" "),v("li",[v("p",[_._v("登陆")]),_._v(" "),v("ul",[v("li",[_._v("不同的数据库用户能操作的库和表不相同")])])]),_._v(" "),v("li",[v("p",[_._v("改密码")]),_._v(" "),v("ul",[v("li",[_._v("set password for ’hsp_edu‘@'"),v("a",{attrs:{href:"http://localhost/",target:"_blank",rel:"noopener noreferrer"}},[_._v("localhost"),v("OutboundLink")],1),_._v("' = password（’123456‘）")])])])]),_._v(" "),v("h3",{attrs:{id:"p809-mysql权限管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p809-mysql权限管理"}},[_._v("#")]),_._v(" p809 MySQL权限管理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("grant 权限列表 on 库.对象名 to ’用户名‘@’登陆位置‘")])]),_._v(" "),v("li",[v("p",[_._v("权限列表，多个权限用逗号分开")])]),_._v(" "),v("li",[v("p",[_._v("特别说明")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("“.”:代表本系统中的所有数据库的所有对象（表，视图，存储过程）")])]),_._v(" "),v("li",[v("p",[_._v("库.*：表示某个数据库中的所有数据对象（表，视图，存储过程）")])])])]),_._v(" "),v("li",[v("p",[_._v("identified by可以省略")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("用户不存在，创建用户")])]),_._v(" "),v("li",[v("p",[_._v("如果用户不存在，就是创建该用户")])])])]),_._v(" "),v("li",[v("p",[_._v("回收权限")])]),_._v(" "),v("li",[v("p",[_._v("权限生效指令")])])]),_._v(" "),v("h3",{attrs:{id:"p810-mysql管理细节"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p810-mysql管理细节"}},[_._v("#")]),_._v(" p810 MySQL管理细节")]),_._v(" "),v("h3",{attrs:{id:"p811-mysql作业1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p811-mysql作业1"}},[_._v("#")]),_._v(" p811 MySQL作业1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("1.1")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("a 别名 as可以省略")])]),_._v(" "),v("li",[v("p",[_._v("c *意思是什么咧 然后空格有双引号")])]),_._v(" "),v("li",[v("p",[_._v("d 别名有空格没有引号")])])])]),_._v(" "),v("li",[v("p",[_._v("1.2")]),_._v(" "),v("ul",[v("li",[_._v("不等符号的使用 判断不等于某个值可以<> 非空不能这么判断")])])]),_._v(" "),v("li",[v("p",[_._v("1.3")]),_._v(" "),v("ul",[v("li",[_._v("order by")])])]),_._v(" "),v("li",[v("p",[_._v("p812 MySQL作业2")])]),_._v(" "),v("li",[v("p",[_._v("p813 mysql作业3")])]),_._v(" "),v("li",[v("p",[_._v("p814 mysql作业4")])]),_._v(" "),v("li",[v("p",[_._v("p815 MySQL作业5")])]),_._v(" "),v("li",[v("p",[_._v("p816 MySQL作业6")])])]),_._v(" "),v("h2",{attrs:{id:"第25章-jdbc和数据库连接池"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第25章-jdbc和数据库连接池"}},[_._v("#")]),_._v(" 第25章 jdbc和数据库连接池")]),_._v(" "),v("p",[v("em",[_._v("（Java Database Connectivity）")])]),_._v(" "),v("h3",{attrs:{id:"p820-jdbc原理示意图"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p820-jdbc原理示意图"}},[_._v("#")]),_._v(" p820 jdbc原理示意图")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("jdbc为访问不同的数据库提供了统一的接口，为使用者屏蔽了细节问题")])]),_._v(" "),v("li",[v("p",[_._v("java程序员使用jdbc，可以连接任何提供了jdbc驱动程序的数据库系统，从而完成对数据库的各种操作")])]),_._v(" "),v("li",[v("p",[_._v("jdbc的基本原理，jar包")])]),_._v(" "),v("li",[v("p",[_._v("模拟jdbc")])])]),_._v(" "),v("h3",{attrs:{id:"p821-jdbc模拟"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p821-jdbc模拟"}},[_._v("#")]),_._v(" p821 jdbc模拟")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("jdbc是java提供一套用于数据库操作的接口api，java程序员只用面向接口编程即可，不同的数据库厂商，需要针对这套接口，提供不同实现")])]),_._v(" "),v("li",[v("p",[_._v("JDBC API是一系列的接口，它统一和规范了应用程序与数据库的连接，执行sql语句，并得到返回结果等各类操作，相关类和接口在java.sql和javax.sql包中")])])]),_._v(" "),v("h3",{attrs:{id:"p822-jdbc快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p822-jdbc快速入门"}},[_._v("#")]),_._v(" p822 jdbc快速入门")]),_._v(" "),v("p",[_._v("听的无比认真的一节")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("注册驱动")])]),_._v(" "),v("li",[v("p",[_._v("获取连接")])]),_._v(" "),v("li",[v("p",[_._v("执行增删改查")])]),_._v(" "),v("li",[v("p",[_._v("释放资源")])])]),_._v(" "),v("h3",{attrs:{id:"p823-数据库连接方式2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p823-数据库连接方式2"}},[_._v("#")]),_._v(" p823 数据库连接方式2")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("方式1 获取driver对象 静态加载 灵活性差 new com.mysql.cj.jdbc.Driver().var")])]),_._v(" "),v("li",[v("p",[_._v("方式2 反射机制")])])]),_._v(" "),v("h3",{attrs:{id:"p824-数据库连接方式3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p824-数据库连接方式3"}},[_._v("#")]),_._v(" p824 数据库连接方式3")]),_._v(" "),v("ul",[v("li",[_._v("方式3 drivermanager")])]),_._v(" "),v("h3",{attrs:{id:"p825-数据库连接方式4"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p825-数据库连接方式4"}},[_._v("#")]),_._v(" p825 数据库连接方式4")]),_._v(" "),v("ul",[v("li",[_._v("方式4 class.forname自动完成注册驱动，简化代码==>分析源码 底层有静态代码块")])]),_._v(" "),v("h3",{attrs:{id:"p826-数据库连接方式5"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p826-数据库连接方式5"}},[_._v("#")]),_._v(" p826 数据库连接方式5")]),_._v(" "),v("ul",[v("li",[_._v("配置文件")])]),_._v(" "),v("h3",{attrs:{id:"p827-resultset底层"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p827-resultset底层"}},[_._v("#")]),_._v(" p827 resultset底层")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("exercise1")]),_._v(" "),v("ul",[v("li",[_._v("创建表操作（代码书写是否有误），插入insert into，删除delete，更改updata set，怎么删库跑路")])])]),_._v(" "),v("li",[v("p",[_._v("结果集")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("表示数据库结果集的数据库，通常通过执行查询数据库的语句生成")])]),_._v(" "),v("li",[v("p",[_._v("resultset对象保持一个光标指向其他当前的数据行。最初，光标位于第一行之前")])]),_._v(" "),v("li",[v("p",[_._v("next方法将光标移动到下一行，并且由于在resultset对象中没有更多行时返回false，因此可以再while循环中来遍历结果集")])])])]),_._v(" "),v("li",[v("p",[_._v("通过结果集 select表数据")])])]),_._v(" "),v("h3",{attrs:{id:"p828-sql注入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p828-sql注入"}},[_._v("#")]),_._v(" p828 sql注入")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("statement 接口")]),_._v(" "),v("ul",[v("li",[_._v("用于执行静态sql语句并返回其生成的结果的对象")])])]),_._v(" "),v("li",[v("p",[_._v("在建立连接后，需要对数据库进行访问，执行 命名或是sql语句，可以通过statement（存在sql注入） preparedstatement（预处理）\ncallablestatement（存储过程）")])]),_._v(" "),v("li",[v("p",[_._v("statement对象执行sql语句，存在sql注入风险")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("sql注入是利用某些系统没有对用户输入的数据进行充分的检查，而在用户输入数据中心注入非法的sql语句段或者命令，恶意攻击数据库")])]),_._v(" "),v("li",[v("p",[_._v("要防范sql注入，只要用preparedstatement（从statement扩展而来）取代statement即可")])])])])]),_._v(" "),v("h3",{attrs:{id:"p829-statement"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p829-statement"}},[_._v("#")]),_._v(" p829 statement")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("nextline")])]),_._v(" "),v("li",[v("p",[_._v("万能密码")])])]),_._v(" "),v("h3",{attrs:{id:"p830-预处理查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p830-预处理查询"}},[_._v("#")]),_._v(" p830 预处理查询")]),_._v(" "),v("ul",[v("li")]),_._v(" "),v("p",[_._v("preparedstatement执行的sql语句中的参数用问号来表示，调用preparedstatement对象的sexXxx（）方法来摄者这些参数，setXxx（）方法有两个参数，第一个参数是要设置的sql语句中的参数的索引从1开始，第二个设置的sql语句中的参数的值")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("调用executeQuery（），返回resultset对象")])]),_._v(" "),v("li",[v("p",[_._v("调用executeupdata（），执行更新，包括增，删，修改")])]),_._v(" "),v("li",[v("p",[_._v("不再使用+拼接语句")])]),_._v(" "),v("li",[v("p",[_._v("有效解决了sql注入问题")])]),_._v(" "),v("li",[v("p",[_._v("大大减少了编译次数，效率较高")])])]),_._v(" "),v("h3",{attrs:{id:"p831-预处理dml"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p831-预处理dml"}},[_._v("#")]),_._v(" p831 预处理DML")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("executeupdate")])]),_._v(" "),v("li",[v("p",[_._v("预处理不要加sql语句")])])]),_._v(" "),v("h3",{attrs:{id:"p832-jdbc-api"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p832-jdbc-api"}},[_._v("#")]),_._v(" p832 jdbc_api")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("drivermanager驱动管理类")]),_._v(" "),v("ul",[v("li",[_._v("getconnection（url，user，pwd）")])])]),_._v(" "),v("li",[v("p",[_._v("connection接口")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("createstatement 创建statement对象")])]),_._v(" "),v("li",[v("p",[_._v("preparedstatement（sql）生成预处理对象")])])])]),_._v(" "),v("li",[v("p",[_._v("statement接口")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("executeupdata（sql）执行dml语句，返回影响的行数")])]),_._v(" "),v("li",[v("p",[_._v("executequery（sql）执行查询，返回resulset对象")])]),_._v(" "),v("li",[v("p",[_._v("execute（sql）执行任意的sql，返回布尔值")])])])]),_._v(" "),v("li",[v("p",[_._v("preparedstatement接口")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("executeupdata（）执行dml语句")])]),_._v(" "),v("li",[v("p",[_._v("executequery（）执行查询，返回resulset对象")])]),_._v(" "),v("li",[v("p",[_._v("execute（）执行任意的sql，返回布尔值")])]),_._v(" "),v("li",[v("p",[_._v("setXxx（占位索引，传入的具体字符）")])]),_._v(" "),v("li",[v("p",[_._v("setobject（占位符索引，占位符的值）")])])])]),_._v(" "),v("li",[v("p",[_._v("resultset 结果集")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("next（）向下一行")])]),_._v(" "),v("li",[v("p",[_._v("previous（）向上移动")])]),_._v(" "),v("li",[v("p",[_._v("getXxx（列的索引 列名）返回对应列的值，接收类型是Xxx")])]),_._v(" "),v("li",[v("p",[_._v("getObject（列的索引 列名）返回对应列的值，接收类型为object")])])])])]),_._v(" "),v("h3",{attrs:{id:"p833-jdbcutils开发"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p833-jdbcutils开发"}},[_._v("#")]),_._v(" p833 jdbcUtils开发")]),_._v(" "),v("h3",{attrs:{id:"p834-jdbudml"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p834-jdbudml"}},[_._v("#")]),_._v(" p834 jdbudml")]),_._v(" "),v("h3",{attrs:{id:"p835-jdbcutils查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p835-jdbcutils查询"}},[_._v("#")]),_._v(" p835 jdbcutils查询")]),_._v(" "),v("h3",{attrs:{id:"p836-事务介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p836-事务介绍"}},[_._v("#")]),_._v(" p836 事务介绍")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("jdbc程序中当一个connection创立时，默认情况下是自动提交事务：每次执行一个sql语句时，如果执行成功，就会向数据库自动提交，而不能回滚")])]),_._v(" "),v("li",[v("p",[_._v("jdbc程序中为了让多个sql语句作为一个整体执行，需要使用事务")])]),_._v(" "),v("li",[v("p",[_._v("调用connection的setAutoCommit（false）可以取消自动提交事务")])]),_._v(" "),v("li",[v("p",[_._v("在所有的sql语句都成功执行后，调用commit（）；方法提交事务")])]),_._v(" "),v("li",[v("p",[_._v("在其中某个操作失败或出现异常时，调用rollback（）；方法回滚事务")])])]),_._v(" "),v("h3",{attrs:{id:"p837-事务处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p837-事务处理"}},[_._v("#")]),_._v(" p837 事务处理")]),_._v(" "),v("ul",[v("li",[_._v("有事务处理和没事务处理，回滚出现异常会回到起点")])]),_._v(" "),v("h3",{attrs:{id:"p838-批处理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p838-批处理"}},[_._v("#")]),_._v(" p838 批处理")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("当需要成批插入或者更新记录时。可以采用java的批量更新机制，这一机制允许许多条语句一次性提交给数据库批量处理。通常情况下比单独提交处理更有效率")])]),_._v(" "),v("li",[v("p",[_._v("jdbc的批量处理语句包括下面方法")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("addbatch（）：添加需要批量处理的sql语句或者参数")])]),_._v(" "),v("li",[v("p",[_._v("executebatch（）：执行批量处理语句")])]),_._v(" "),v("li",[v("p",[_._v("clearbatch（）：清空批处理包的语句")])])])]),_._v(" "),v("li",[v("p",[_._v("jdbc连接mysql时，如果要使用批处理功能，请在url中加参")])]),_._v(" "),v("li",[v("p",[_._v("批处理往往和preparedstatement一起搭配使用，可以既减少编译次数，又减少运行次数，效率大大提高")])])]),_._v(" "),v("h3",{attrs:{id:"p839-批处理源码分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p839-批处理源码分析"}},[_._v("#")]),_._v(" p839 批处理源码分析")]),_._v(" "),v("h3",{attrs:{id:"p840-传统连接的弊端"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p840-传统连接的弊端"}},[_._v("#")]),_._v(" p840 传统连接的弊端")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("时间长，连接加载内存，验证，多个容易崩溃，未能关闭内存泄露")])]),_._v(" "),v("li",[v("p",[_._v("解决传统开发中的数据库连接方式，可以采用数据库连接池技术 connection pool")])])]),_._v(" "),v("h3",{attrs:{id:"p841-数据库连接池"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p841-数据库连接池"}},[_._v("#")]),_._v(" p841 数据库连接池")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("datasource")])]),_._v(" "),v("li",[v("p",[_._v("连接池")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("c3p0")])]),_._v(" "),v("li",[v("p",[_._v("dbcp")])]),_._v(" "),v("li",[v("p",[_._v("proxool")])]),_._v(" "),v("li",[v("p",[_._v("bonecp")])]),_._v(" "),v("li",[v("p",[_._v("druid")])])])])]),_._v(" "),v("h3",{attrs:{id:"p842-c3p0方式1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p842-c3p0方式1"}},[_._v("#")]),_._v(" p842 c3p0方式1")]),_._v(" "),v("h3",{attrs:{id:"p843-c3p0方式2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p843-c3p0方式2"}},[_._v("#")]),_._v(" p843 c3p0方式2")]),_._v(" "),v("h3",{attrs:{id:"p844-德鲁伊连接池"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p844-德鲁伊连接池"}},[_._v("#")]),_._v(" p844 德鲁伊连接池")]),_._v(" "),v("h3",{attrs:{id:"p845-德鲁伊工具类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p845-德鲁伊工具类"}},[_._v("#")]),_._v(" p845 德鲁伊工具类")]),_._v(" "),v("h3",{attrs:{id:"p846-apdbutils引出"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p846-apdbutils引出"}},[_._v("#")]),_._v(" p846 apdbutils引出")]),_._v(" "),v("ul",[v("li",[_._v("结果集和connection关联 于是想到arraylist")])]),_._v(" "),v("h3",{attrs:{id:"p847-土办法完成封装"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p847-土办法完成封装"}},[_._v("#")]),_._v(" p847 土办法完成封装")]),_._v(" "),v("h3",{attrs:{id:"p848-apdbutils查询"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p848-apdbutils查询"}},[_._v("#")]),_._v(" p848 apdbutils查询")]),_._v(" "),v("h3",{attrs:{id:"p849-apdbutils源码"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p849-apdbutils源码"}},[_._v("#")]),_._v(" p849 apdbutils源码")]),_._v(" "),v("h3",{attrs:{id:"p850-apdbutils查询2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p850-apdbutils查询2"}},[_._v("#")]),_._v(" p850 apdbutils查询2")]),_._v(" "),v("h3",{attrs:{id:"p851-apdbutilsdml"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p851-apdbutilsdml"}},[_._v("#")]),_._v(" p851 apdbutilsdml")]),_._v(" "),v("h3",{attrs:{id:"p852-basicdao问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p852-basicdao问题"}},[_._v("#")]),_._v(" p852 basicdao问题")]),_._v(" "),v("h3",{attrs:{id:"p853-basicdao分析"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p853-basicdao分析"}},[_._v("#")]),_._v(" p853 basicdao分析")]),_._v(" "),v("h3",{attrs:{id:"p854-basicdao实现1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p854-basicdao实现1"}},[_._v("#")]),_._v(" p854 basicdao实现1")]),_._v(" "),v("h3",{attrs:{id:"p855-basicdao实现2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p855-basicdao实现2"}},[_._v("#")]),_._v(" p855 basicdao实现2")]),_._v(" "),v("h3",{attrs:{id:"p856-jdbc连接池梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p856-jdbc连接池梳理"}},[_._v("#")]),_._v(" p856 jdbc连接池梳理")]),_._v(" "),v("h2",{attrs:{id:"第27章-正则表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第27章-正则表达式"}},[_._v("#")]),_._v(" 第27章 正则表达式")]),_._v(" "),v("p",[_._v("数据结构 串 文本处理")]),_._v(" "),v("h3",{attrs:{id:"p877-正则快速入门"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p877-正则快速入门"}},[_._v("#")]),_._v(" p877 正则快速入门")]),_._v(" "),v("h3",{attrs:{id:"p878-正则需求问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p878-正则需求问题"}},[_._v("#")]),_._v(" p878 正则需求问题")]),_._v(" "),v("h3",{attrs:{id:"p879-880-881正则底层实现"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p879-880-881正则底层实现"}},[_._v("#")]),_._v(" p879 880 881正则底层实现")]),_._v(" "),v("p",[_._v("数据结构 kmp算法")]),_._v(" "),v("h3",{attrs:{id:"p882-正则转义符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p882-正则转义符"}},[_._v("#")]),_._v(" p882 正则转义符")]),_._v(" "),v("h3",{attrs:{id:"p883-正则字符匹配"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p883-正则字符匹配"}},[_._v("#")]),_._v(" p883 正则字符匹配")]),_._v(" "),v("h3",{attrs:{id:"p884-字符匹配案例1"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p884-字符匹配案例1"}},[_._v("#")]),_._v(" p884 字符匹配案例1")]),_._v(" "),v("h3",{attrs:{id:"p885-字符匹配案例2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p885-字符匹配案例2"}},[_._v("#")]),_._v(" p885 字符匹配案例2")]),_._v(" "),v("h3",{attrs:{id:"p886-选择匹配符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p886-选择匹配符"}},[_._v("#")]),_._v(" p886 选择匹配符")]),_._v(" "),v("h3",{attrs:{id:"p887-正则限定符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p887-正则限定符"}},[_._v("#")]),_._v(" p887 正则限定符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("字串查询匹配多的")])]),_._v(" "),v("li",[v("p",[_._v("regexp05")])])]),_._v(" "),v("h3",{attrs:{id:"p888-正则定位符"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p888-正则定位符"}},[_._v("#")]),_._v(" p888 正则定位符")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("规定要匹配的字符串出现的位置")])]),_._v(" "),v("li",[v("p",[_._v("regexp06")])]),_._v(" "),v("li",[v("p",[_._v("边界 \\b")])])]),_._v(" "),v("h3",{attrs:{id:"p889-捕获分组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p889-捕获分组"}},[_._v("#")]),_._v(" p889 捕获分组")]),_._v(" "),v("ul",[v("li",[_._v("特别分组")])]),_._v(" "),v("h3",{attrs:{id:"p890-非捕获分组"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p890-非捕获分组"}},[_._v("#")]),_._v(" p890 非捕获分组")]),_._v(" "),v("h3",{attrs:{id:"p891-非贪婪匹配"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p891-非贪婪匹配"}},[_._v("#")]),_._v(" p891 非贪婪匹配")]),_._v(" "),v("h3",{attrs:{id:"p892-正则应用实例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p892-正则应用实例"}},[_._v("#")]),_._v(" p892 正则应用实例")]),_._v(" "),v("h3",{attrs:{id:"p893-正则验证复杂url"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p893-正则验证复杂url"}},[_._v("#")]),_._v(" p893 正则验证复杂url")]),_._v(" "),v("h3",{attrs:{id:"p894-pattern类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p894-pattern类"}},[_._v("#")]),_._v(" p894 pattern类")]),_._v(" "),v("h3",{attrs:{id:"p895-matcher类"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p895-matcher类"}},[_._v("#")]),_._v(" p895 matcher类")]),_._v(" "),v("h3",{attrs:{id:"p896-反向引用"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p896-反向引用"}},[_._v("#")]),_._v(" p896 反向引用")]),_._v(" "),v("h3",{attrs:{id:"p897-反向引用案例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p897-反向引用案例"}},[_._v("#")]),_._v(" p897 反向引用案例")]),_._v(" "),v("h3",{attrs:{id:"p898-结巴去重案例"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p898-结巴去重案例"}},[_._v("#")]),_._v(" p898 结巴去重案例")]),_._v(" "),v("h3",{attrs:{id:"p899-替换分割匹配"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p899-替换分割匹配"}},[_._v("#")]),_._v(" p899 替换分割匹配")]),_._v(" "),v("h3",{attrs:{id:"p900-901-902-练习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p900-901-902-练习"}},[_._v("#")]),_._v(" p900 901 902 练习")]),_._v(" "),v("h3",{attrs:{id:"p903-正则内容梳理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#p903-正则内容梳理"}},[_._v("#")]),_._v(" p903 正则内容梳理")]),_._v(" "),v("p",[_._v("游龙当归海，海不迎我自来也")])])}),[],!1,null,null,null);v.default=s.exports}}]);
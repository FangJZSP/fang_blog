(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{457:function(v,_,a){"use strict";a.r(_);var t=a(2),s=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"微服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微服务"}},[v._v("#")]),v._v(" 微服务")]),v._v(" "),_("h2",{attrs:{id:"认识微服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#认识微服务"}},[v._v("#")]),v._v(" 认识微服务")]),v._v(" "),_("h3",{attrs:{id:"导入商城"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#导入商城"}},[v._v("#")]),v._v(" 导入商城")]),v._v(" "),_("h3",{attrs:{id:"单体架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#单体架构"}},[v._v("#")]),v._v(" 单体架构")]),v._v(" "),_("p",[v._v("并发请求，占资源")]),v._v(" "),_("h3",{attrs:{id:"微服务架构"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微服务架构"}},[v._v("#")]),v._v(" 微服务架构")]),v._v(" "),_("p",[v._v("服务化思想指导下的一套最佳实践架构方案。")]),v._v(" "),_("ul",[_("li",[v._v("粒度小")]),v._v(" "),_("li",[v._v("团队自洽")]),v._v(" "),_("li",[v._v("服务自洽")])]),v._v(" "),_("p",[v._v("缺点：")]),v._v(" "),_("ul",[_("li",[v._v("运维难度大")]),v._v(" "),_("li",[v._v("跨模块开发")])]),v._v(" "),_("h3",{attrs:{id:"springcloud"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#springcloud"}},[v._v("#")]),v._v(" SpringCloud")]),v._v(" "),_("p",[v._v("各种各样的组件，完整的技术栈。")]),v._v(" "),_("ul",[_("li",[v._v("自动转配")]),v._v(" "),_("li",[v._v("开箱即用")])]),v._v(" "),_("p",[v._v("引用了父工程的版本，直接解决了版本依赖问题")]),v._v(" "),_("h2",{attrs:{id:"微服务拆分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微服务拆分"}},[v._v("#")]),v._v(" 微服务拆分")]),v._v(" "),_("h3",{attrs:{id:"熟悉商城"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#熟悉商城"}},[v._v("#")]),v._v(" 熟悉商城")]),v._v(" "),_("ul",[_("li",[v._v("用户模块登录-熟悉的校验-生成token")]),v._v(" "),_("li",[_("ul",[_("li",[v._v("后续请求-authorization，处理token")])])]),v._v(" "),_("li",[v._v("商品模块")]),v._v(" "),_("li",[v._v("购物车模块 获取新旧价格对比")]),v._v(" "),_("li",[v._v("订单模块")]),v._v(" "),_("li",[v._v("支付功能")])]),v._v(" "),_("h4",{attrs:{id:"随想"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#随想"}},[v._v("#")]),v._v(" 随想")]),v._v(" "),_("p",[v._v("感觉对应的业务，确实内容可以搞得机器复杂，各种优惠券呀，支付倒计时，超时，退款等等。")]),v._v(" "),_("h3",{attrs:{id:"拆分原则"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#拆分原则"}},[v._v("#")]),v._v(" 拆分原则")]),v._v(" "),_("h4",{attrs:{id:"什么时候拆分"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么时候拆分"}},[v._v("#")]),v._v(" 什么时候拆分")]),v._v(" "),_("h3",{attrs:{id:"微服务项目结构说明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#微服务项目结构说明"}},[v._v("#")]),v._v(" 微服务项目结构说明")]),v._v(" "),_("p",[v._v("工程结构有两种：")]),v._v(" "),_("ul",[_("li",[v._v("独立project")]),v._v(" "),_("li",[v._v("maven聚合")])]),v._v(" "),_("h3",{attrs:{id:"拆分商品服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#拆分商品服务"}},[v._v("#")]),v._v(" 拆分商品服务")]),v._v(" "),_("blockquote",[_("p",[v._v("商品&&购物车")])]),v._v(" "),_("p",[v._v("父工程pom文件")]),v._v(" "),_("p",[v._v("不需要的依赖 直接去掉")]),v._v(" "),_("p",[v._v("yml文件 端口，name")]),v._v(" "),_("p",[v._v("controller/domain/mapper/service")]),v._v(" "),_("p",[v._v("各种文件夹区分一下")]),v._v(" "),_("h3",{attrs:{id:"拆分购物车服务"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#拆分购物车服务"}},[v._v("#")]),v._v(" 拆分购物车服务")]),v._v(" "),_("p",[v._v("一样的改改")]),v._v(" "),_("p",[v._v("购物车要调用其他的模块")]),v._v(" "),_("h3",{attrs:{id:"远程调用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#远程调用"}},[v._v("#")]),v._v(" 远程调用")]),v._v(" "),_("p",[v._v("需要信息，但是信息在别的模块里面。")]),v._v(" "),_("p",[v._v("通过网络去查别人的数据。")]),v._v(" "),_("p",[v._v("RestTemplate 请求，服务启动！！！")]),v._v(" "),_("p",[v._v("拿到结果！！")]),v._v(" "),_("h2",{attrs:{id:"服务治理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务治理"}},[v._v("#")]),v._v(" 服务治理")]),v._v(" "),_("h3",{attrs:{id:"注册中心原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注册中心原理"}},[v._v("#")]),v._v(" 注册中心原理")]),v._v(" "),_("p",[v._v("动态的访问服务")]),v._v(" "),_("p",[v._v("不知道地址？？")]),v._v(" "),_("p",[v._v("访问哪一个？")]),v._v(" "),_("h4",{attrs:{id:"注册中心"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注册中心"}},[v._v("#")]),v._v(" 注册中心")]),v._v(" "),_("p",[v._v("多实例部署")]),v._v(" "),_("h5",{attrs:{id:"服务治理三角色"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务治理三角色"}},[v._v("#")]),v._v(" 服务治理三角色")]),v._v(" "),_("ul",[_("li",[v._v("服务提供者")]),v._v(" "),_("li",[v._v("服务调用者")]),v._v(" "),_("li",[v._v("注册中心")])]),v._v(" "),_("h5",{attrs:{id:"注册中心的原理"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#注册中心的原理"}},[v._v("#")]),v._v(" 注册中心的原理")]),v._v(" "),_("ol",[_("li",[v._v("注册服务信息")]),v._v(" "),_("li",[v._v("订阅服务")]),v._v(" "),_("li",[v._v("负载均衡 策略很多")]),v._v(" "),_("li",[v._v("远程调用")])]),v._v(" "),_("p",[_("em",[v._v("心跳续约")]),v._v(" "),_("em",[v._v("推送变更")])]),v._v(" "),_("h3",{attrs:{id:"搭建nacos注册中心"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#搭建nacos注册中心"}},[v._v("#")]),v._v(" 搭建Nacos注册中心")]),v._v(" "),_("p",[v._v("nacos的数据表，也有数据管理")]),v._v(" "),_("p",[v._v("docker部署，custom.env配置nacos和数据库配置的信息")]),v._v(" "),_("p",[v._v("上传服务器，拉镜像，创建并运行容器")]),v._v(" "),_("p",[v._v("访问nacos中心地址")]),v._v(" "),_("h2",{attrs:{id:"服务治理相关"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务治理相关"}},[v._v("#")]),v._v(" 服务治理相关")]),v._v(" "),_("h3",{attrs:{id:"服务注册"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务注册"}},[v._v("#")]),v._v(" 服务注册")]),v._v(" "),_("ul",[_("li",[v._v("引入依赖")])]),v._v(" "),_("p",[v._v("哪个模块需要，哪个模块引入依赖")]),v._v(" "),_("ul",[_("li",[v._v("配置文件")])]),v._v(" "),_("p",[v._v("启动项目，并直接注册")]),v._v(" "),_("p",[v._v("讲了一下怎么启动两个相同的服务，配置不同的端口即可")]),v._v(" "),_("p",[v._v("添加一个vm参数，指定端口")]),v._v(" "),_("p",[v._v("服务一启动，自动注册到nacos")]),v._v(" "),_("h3",{attrs:{id:"服务发现和负载均衡"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#服务发现和负载均衡"}},[v._v("#")]),v._v(" 服务发现和负载均衡")]),v._v(" "),_("ul",[_("li",[v._v("引入nacos discovery依赖")]),v._v(" "),_("li",[v._v("配置nacos地址")]),v._v(" "),_("li",[v._v("服务发现")])]),v._v(" "),_("p",[v._v("根据服务名称，获取服务列表")]),v._v(" "),_("p",[v._v("然后根据负载均衡策略，选择一个实例（夸张的手写负载均衡）")]),v._v(" "),_("h2",{attrs:{id:"openfeign"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#openfeign"}},[v._v("#")]),v._v(" OpenFeign")]),v._v(" "),_("h3",{attrs:{id:"快速入门"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#快速入门"}},[v._v("#")]),v._v(" 快速入门")]),v._v(" "),_("ul",[_("li",[v._v("引入依赖\n"),_("ul",[_("li",[v._v("负载均衡")])])]),v._v(" "),_("li",[v._v("@EnableFeignClients 启用feign")]),v._v(" "),_("li",[v._v("编写FeginClient")]),v._v(" "),_("li",[v._v("使用FeginClient，实现远程调用")])]),v._v(" "),_("p",[v._v("相当于直接调mapper")]),v._v(" "),_("h3",{attrs:{id:"连接池"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#连接池"}},[v._v("#")]),v._v(" 连接池")]),v._v(" "),_("p",[v._v("底层http请求，依赖其他的框架，框架可以自己选择，包括以下三种")]),v._v(" "),_("ul",[_("li",[v._v("apache httpclient 支持连接池")]),v._v(" "),_("li",[v._v("okhttp 支持连接池")]),v._v(" "),_("li",[v._v("httpurlconnection 默认实现，不支持连接池")])]),v._v(" "),_("p",[v._v("okHttp代替\n引入依赖")]),v._v(" "),_("ul",[_("li",[v._v("开启")]),v._v(" "),_("li",[v._v("配置")])]),v._v(" "),_("h3",{attrs:{id:"最佳实践"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#最佳实践"}},[v._v("#")]),v._v(" 最佳实践")]),v._v(" "),_("p",[v._v("优化，不需要在每个模块里面都写一遍，直接抽取出来")]),v._v(" "),_("p",[v._v("拆分一个公共服务，专门做client/config/dto")]),v._v(" "),_("p",[v._v("横向纵向的考虑")]),v._v(" "),_("p",[v._v("抽取一个之后，需要之一公共模块的扫描包问题")]),v._v(" "),_("h3",{attrs:{id:"日志输出"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#日志输出"}},[v._v("#")]),v._v(" 日志输出")]),v._v(" "),_("p",[v._v("openFeign日志级别，默认none，定一个一个默认类是枚举的")]),v._v(" "),_("ul",[_("li",[v._v("放到@FeignClinet注解上")]),v._v(" "),_("li",[v._v("放到@EableFeignClients注解上")])]),v._v(" "),_("p",[v._v("一般不建议开启，影响性能")])])}),[],!1,null,null,null);_.default=s.exports}}]);
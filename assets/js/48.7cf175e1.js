(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{458:function(t,a,v){"use strict";v.r(a);var _=v(2),r=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"网关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网关"}},[t._v("#")]),t._v(" 网关")]),t._v(" "),a("h2",{attrs:{id:"什么是网关"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是网关"}},[t._v("#")]),t._v(" 什么是网关")]),t._v(" "),a("p",[t._v("网络入口，负责请求的路由、转发、身份校验")]),t._v(" "),a("p",[t._v("网关8080然后转发到8081等入口")]),t._v(" "),a("h2",{attrs:{id:"网关路由"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网关路由"}},[t._v("#")]),t._v(" 网关路由")]),t._v(" "),a("h3",{attrs:{id:"快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速入门"}},[t._v("#")]),t._v(" 快速入门")]),t._v(" "),a("ul",[a("li",[t._v("创建模块")]),t._v(" "),a("li",[t._v("引入依赖")]),t._v(" "),a("li",[t._v("编写启动类")]),t._v(" "),a("li",[t._v("配置路由规则")])]),t._v(" "),a("h3",{attrs:{id:"路由属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#路由属性"}},[t._v("#")]),t._v(" 路由属性")]),t._v(" "),a("p",[t._v("RouteDefinition")]),t._v(" "),a("ul",[a("li",[t._v("id 路由唯一标示")]),t._v(" "),a("li",[t._v("uri 路由目标地址")]),t._v(" "),a("li",[t._v("predicates 路由断言")]),t._v(" "),a("li",[t._v("filters 路由过滤器")])]),t._v(" "),a("p",[t._v("过滤器可以配置请求头")]),t._v(" "),a("h2",{attrs:{id:"网关登录校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网关登录校验"}},[t._v("#")]),t._v(" 网关登录校验")]),t._v(" "),a("h3",{attrs:{id:"思路分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#思路分析"}},[t._v("#")]),t._v(" 思路分析")]),t._v(" "),a("p",[t._v("网关处理流程：")]),t._v(" "),a("ul",[a("li",[t._v("客户端发送请求")]),t._v(" "),a("li",[t._v("路由映射器 HandlerMapping")]),t._v(" "),a("li",[t._v("请求处理器 WebHandler")]),t._v(" "),a("li",[t._v("过滤器 最后一个是nettyRoutingFilter pre/post")]),t._v(" "),a("li",[t._v("需要自定义一个过滤器")])]),t._v(" "),a("p",[t._v("网关把Jwt校验，保存到请求头，发送给后续的微服务")]),t._v(" "),a("h3",{attrs:{id:"自定义globalfilter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义globalfilter"}},[t._v("#")]),t._v(" 自定义GlobalFilter")]),t._v(" "),a("ul",[a("li",[t._v("ServerWebExchange 作用：请求上下文，包含整个过滤器链内共享数据")]),t._v(" "),a("li",[t._v("GatewayFilterChain 作用：过滤器链，可以继续执行下一个过滤器")])]),t._v(" "),a("p",[t._v("这个和nodeJs里面的有一节很像")]),t._v(" "),a("p",[t._v("Ctrl+H 可以快速看见一个类被有哪些类继承")]),t._v(" "),a("p",[t._v("传递上下文")]),t._v(" "),a("p",[t._v("实现了Ordered接口，值越小优先级越高。")]),t._v(" "),a("h3",{attrs:{id:"自定义gatewayfilter"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义gatewayfilter"}},[t._v("#")]),t._v(" 自定义GatewayFilter")]),t._v(" "),a("p",[t._v("自定义GatewayFilter不是直接实现GatewayFilter， 而是实现AbstractGatewayFilterFactory")]),t._v(" "),a("p",[t._v("固定的类名称后缀，方便配置使用。")]),t._v(" "),a("p",[t._v("讲了一个装饰器模式，当一个匿名函数没有办法实现接口的时候，可以写一个装饰类，返回我们想要的结果。")]),t._v(" "),a("p",[t._v("带参数过滤器。")]),t._v(" "),a("h3",{attrs:{id:"实现登录校验"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实现登录校验"}},[t._v("#")]),t._v(" 实现登录校验")]),t._v(" "),a("p",[t._v("密钥读取，加密，感觉需要熟悉一下密钥的生成，实现，公钥私钥。")]),t._v(" "),a("p",[t._v("部分路径进行放行。")]),t._v(" "),a("h3",{attrs:{id:"网关传递到微服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网关传递到微服务"}},[t._v("#")]),t._v(" 网关传递到微服务")]),t._v(" "),a("p",[t._v("微服务的拦截器，获取token，添加到ThreadLocal")]),t._v(" "),a("ul",[a("li",[t._v("mutate方法，修改请求头")]),t._v(" "),a("li",[t._v("拦截器完成登录用户的信息")]),t._v(" "),a("li",[t._v("单例模式完成数据存储，看来"),a("strong",[t._v("TreadLocal")]),t._v("需要经常看一下")]),t._v(" "),a("li",[t._v("配置累，拦截器完成自动装配")]),t._v(" "),a("li",[t._v("在不需要的模块，可以自己调整条件，完成需要的模块进行注入@ConditionalOnClass")])]),t._v(" "),a("h3",{attrs:{id:"openfeign传递用户信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#openfeign传递用户信息"}},[t._v("#")]),t._v(" openFeign传递用户信息")]),t._v(" "),a("p",[t._v("调用链如果比较长，用户信息传递就比较长")]),t._v(" "),a("p",[t._v("OpenFeign发起请求的时候会有一个拦截器，把用户信息传递过去")]),t._v(" "),a("p",[t._v("启动类配置，感觉东西确实挺多的")])])}),[],!1,null,null,null);a.default=r.exports}}]);
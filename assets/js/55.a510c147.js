(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{466:function(t,e,l){"use strict";l.r(e);var a=l(2),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"java类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java类"}},[t._v("#")]),t._v(" Java类")]),t._v(" "),e("h2",{attrs:{id:"optional"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optional"}},[t._v("#")]),t._v(" Optional")]),t._v(" "),e("p",[t._v("Optional 是 Java 8 引入的一个容器对象，用于可能存在或可能不存在的值。它是一个可以为 null 的容器对象，但使用 Optional 的目的是让你更明确地表达一个值存在或不存在，从而避免空指针异常（NullPointerException）。")]),t._v(" "),e("p",[t._v("Optional 提供了多种方法来处理值的存在性，如：")]),t._v(" "),e("ul",[e("li",[t._v("isPresent()：检查值是否存在。")]),t._v(" "),e("li",[t._v("get()：如果值存在，则返回该值；否则抛出 NoSuchElementException。")]),t._v(" "),e("li",[t._v("orElse(T other)：如果值存在，则返回该值；否则返回指定的其他值。")]),t._v(" "),e("li",[t._v("orElseGet(Supplier<? extends T> other)：如果值存在，则返回该值；否则返回由 Supplier 提供的值。")]),t._v(" "),e("li",[t._v("orElseThrow(Supplier<? extends X> exceptionSupplier)：如果值存在，则返回该值；否则抛出由 Supplier 提供的异常。")]),t._v(" "),e("li",[t._v("ifPresent(Consumer<? super T> consumer)：如果值存在，则使用该值调用指定的消费函数。")]),t._v(" "),e("li",[t._v("map(Function<? super T, ? extends U> mapper)：如果值存在，则对该值应用提供的映射函数。")]),t._v(" "),e("li",[t._v("flatMap(Function<? super T, Optional"),e("U",[t._v("> mapper)：如果值存在，则对该值应用提供的映射函数，并返回一个 Optional 描述的结果。")])],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);
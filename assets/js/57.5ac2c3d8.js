(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{464:function(a,s,t){"use strict";t.r(s);var _=t(2),v=Object(_.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h3",{attrs:{id:"初识nodejs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初识nodejs"}},[a._v("#")]),a._v(" 初识nodeJs")]),a._v(" "),s("h4",{attrs:{id:"不同的浏览器使用不同的js解析引擎"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不同的浏览器使用不同的js解析引擎"}},[a._v("#")]),a._v(" 不同的浏览器使用不同的js解析引擎")]),a._v(" "),s("h4",{attrs:{id:"js操作dom和bom"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js操作dom和bom"}},[a._v("#")]),a._v(" js操作dom和bom")]),a._v(" "),s("p",[a._v("调用web api")]),a._v(" "),s("h5",{attrs:{id:"运行环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行环境"}},[a._v("#")]),a._v(" 运行环境")]),a._v(" "),s("p",[a._v("代码运行所需的必要环境")]),a._v(" "),s("p",[a._v("内置api是运行环境提供的特殊接口，只能在所属的运行环境中被调用")]),a._v(" "),s("blockquote",[s("p",[a._v("node.js可以 用于后端开发")])]),a._v(" "),s("h3",{attrs:{id:"什么是node"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是node"}},[a._v("#")]),a._v(" 什么是node")]),a._v(" "),s("p",[a._v("node.js是一个v8引擎的js运行环境")]),a._v(" "),s("h4",{attrs:{id:"前后端js区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前后端js区别"}},[a._v("#")]),a._v(" 前后端js区别")]),a._v(" "),s("p",[a._v("浏览器是js的前端运行环境")]),a._v(" "),s("p",[a._v("node.js是js的后端运行环境，所以无法调用dom和bom等浏览器内置api")]),a._v(" "),s("h4",{attrs:{id:"nodejs能做什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nodejs能做什么"}},[a._v("#")]),a._v(" nodeJs能做什么")]),a._v(" "),s("p",[a._v("有多种框架可以用，还能读写操作数据库")]),a._v(" "),s("h4",{attrs:{id:"学习路线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#学习路线"}},[a._v("#")]),a._v(" 学习路线")]),a._v(" "),s("h5",{attrs:{id:"浏览器中的js学习路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#浏览器中的js学习路径"}},[a._v("#")]),a._v(" 浏览器中的js学习路径")]),a._v(" "),s("p",[a._v("js语法 + 内置api + 第三方库")]),a._v(" "),s("h5",{attrs:{id:"node-js的学习路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js的学习路径"}},[a._v("#")]),a._v(" node.js的学习路径")]),a._v(" "),s("p",[a._v("js语法 + node.js的内置api + 第三方api模块")]),a._v(" "),s("h3",{attrs:{id:"node-js环境安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#node-js环境安装"}},[a._v("#")]),a._v(" node.js环境安装")]),a._v(" "),s("h4",{attrs:{id:"安装包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#安装包"}},[a._v("#")]),a._v(" 安装包")]),a._v(" "),s("p",[a._v("已经安装了，mac可以用homebrew下载")]),a._v(" "),s("h4",{attrs:{id:"什么是终端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是终端"}},[a._v("#")]),a._v(" 什么是终端")]),a._v(" "),s("p",[a._v("程序员每天都在用的")]),a._v(" "),s("h3",{attrs:{id:"使用node运行js代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用node运行js代码"}},[a._v("#")]),a._v(" 使用node运行js代码")]),a._v(" "),s("h4",{attrs:{id:"怎么运行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#怎么运行"}},[a._v("#")]),a._v(" 怎么运行")]),a._v(" "),s("p",[a._v("node 要执行的文件.js")]),a._v(" "),s("h4",{attrs:{id:"终端中的快捷键"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#终端中的快捷键"}},[a._v("#")]),a._v(" 终端中的快捷键")]),a._v(" "),s("p",[a._v("方向键上 能定位上一次的终端命令")]),a._v(" "),s("p",[a._v("使用tab键 可以快速补全路径，mac可以使用终端插件完成这个功能")]),a._v(" "),s("p",[a._v("esc可以快速清空命令")]),a._v(" "),s("p",[a._v("win cls清空 mac clear清空")]),a._v(" "),s("h3",{attrs:{id:"fs-读取文件内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs-读取文件内容"}},[a._v("#")]),a._v(" fs-读取文件内容")]),a._v(" "),s("h4",{attrs:{id:"什么是fs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么是fs"}},[a._v("#")]),a._v(" 什么是fs")]),a._v(" "),s("p",[a._v("用来操作文件的api")]),a._v(" "),s("h5",{attrs:{id:"fs-readfile-读取"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs-readfile-读取"}},[a._v("#")]),a._v(" fs.readFile() 读取")]),a._v(" "),s("p",[a._v("fs.readFile(path[,options],callback)")]),a._v(" "),s("p",[a._v("fs.writeFile() 写入")]),a._v(" "),s("h6",{attrs:{id:"判断读取是否成功"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断读取是否成功"}},[a._v("#")]),a._v(" 判断读取是否成功")]),a._v(" "),s("p",[a._v("判断err对象是否为null，从而判断文件是否读取成功")]),a._v(" "),s("h3",{attrs:{id:"fs-向指定的文件写入内容"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs-向指定的文件写入内容"}},[a._v("#")]),a._v(" fs-向指定的文件写入内容")]),a._v(" "),s("p",[a._v("fs.write(file, data[,options], callback)")]),a._v(" "),s("h4",{attrs:{id:"判断写入是否成功了"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断写入是否成功了"}},[a._v("#")]),a._v(" 判断写入是否成功了")]),a._v(" "),s("h3",{attrs:{id:"fs-整理成绩的案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs-整理成绩的案例"}},[a._v("#")]),a._v(" fs-整理成绩的案例")]),a._v(" "),s("p",[a._v("怎么用js处理数组")]),a._v(" "),s("h3",{attrs:{id:"fs-处理路径问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#fs-处理路径问题"}},[a._v("#")]),a._v(" fs-处理路径问题")]),a._v(" "),s("p",[a._v("执行node命令时，会用所处的目录进行拼接，可能出现问题")]),a._v(" "),s("p",[a._v("动态拼接目录会出现问题")]),a._v(" "),s("p",[a._v("以./ 或 ../ 命名的路径")]),a._v(" "),s("p",[a._v("换成绝对路径就可以，但是每个人的目录也不一样，所以这样的方式也不是最好的、")]),a._v(" "),s("p",[a._v("然后nodeJs也提供了一个方法来解决")]),a._v(" "),s("h4",{attrs:{id:"路径拼接问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路径拼接问题"}},[a._v("#")]),a._v(" 路径拼接问题")]),a._v(" "),s("p",[a._v("__dirname 为当前文件所处的目录")]),a._v(" "),s("h3",{attrs:{id:"path-使用path模块处理路径"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#path-使用path模块处理路径"}},[a._v("#")]),a._v(" path-使用path模块处理路径")]),a._v(" "),s("p",[a._v("用来处理路径模块")]),a._v(" "),s("p",[a._v("path.join() 将多个路径拼接成一个路径字符串")]),a._v(" "),s("p",[a._v("path.basename() 用来从路径的字符串中，将文件名解析出来，获取最后一个位置的东西")]),a._v(" "),s("p",[a._v("../会抵消一层路径")]),a._v(" "),s("p",[a._v("path.extname() 获得路径文件的拓展名")]),a._v(" "),s("h3",{attrs:{id:"时钟案例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#时钟案例"}},[a._v("#")]),a._v(" 时钟案例")]),a._v(" "),s("ol",[s("li",[a._v("创建正则表达式，获得内容")]),a._v(" "),s("li",[a._v("使用文件模块，读取html文件")]),a._v(" "),s("li",[a._v("使用方法拆分css、js、html")]),a._v(" "),s("li",[a._v("拼接成一个新的html文件")])]),a._v(" "),s("h4",{attrs:{id:"案例注意"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#案例注意"}},[a._v("#")]),a._v(" 案例注意")]),a._v(" "),s("ol",[s("li",[a._v("只能创建文件，路径需要自己写")]),a._v(" "),s("li",[a._v("write是覆盖不是添加")])])])}),[],!1,null,null,null);s.default=v.exports}}]);
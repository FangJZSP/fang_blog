(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{507:function(e,t,a){"use strict";a.r(t);var l=a(2),s=Object(l.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"flutter中的key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flutter中的key"}},[e._v("#")]),e._v(" flutter中的key")]),e._v(" "),t("h2",{attrs:{id:"key作用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#key作用"}},[e._v("#")]),e._v(" key作用")]),e._v(" "),t("ol",[t("li",[e._v("仅当widget有状态时，才需要设置key。如果是无状态的widget则不需要设置key。")]),e._v(" "),t("li",[e._v("是否复用旧元素根据widget类型和key值决定，若在没用key的情况下，若类型相同则表示新旧widget可复用。")]),e._v(" "),t("li",[e._v("使用了key stf组件不会出发didUpdateWidget；不使用key，stf的state类里面的属性更新需要通过didUpdateWidget来改变state类里的属性。")])]),e._v(" "),t("h2",{attrs:{id:"key类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#key类型"}},[e._v("#")]),e._v(" key类型")]),e._v(" "),t("h3",{attrs:{id:"local-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#local-key"}},[e._v("#")]),e._v(" local key")]),e._v(" "),t("ul",[t("li",[e._v("ValueKey 接受字母数字值。它们通常用于子列表中，其中每个子项的值是唯一且恒定的。")]),e._v(" "),t("li",[e._v("ObjectKey 接受一个包含数据的类对象。其他和值键一样。")]),e._v(" "),t("li",[e._v("UniqueKey 没有值的情况下")])]),e._v(" "),t("h3",{attrs:{id:"global-key"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#global-key"}},[e._v("#")]),e._v(" global key")]),e._v(" "),t("ul",[t("li",[e._v("LabeledGlobalKey")]),e._v(" "),t("li",[e._v("GlobalObjectKey")])])])}),[],!1,null,null,null);t.default=s.exports}}]);
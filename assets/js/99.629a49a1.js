(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{509:function(a,t,r){"use strict";r.r(t);var s=r(2),e=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"核心原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心原理"}},[a._v("#")]),a._v(" 核心原理")]),a._v(" "),t("h2",{attrs:{id:"flutter-ui-框架-framework"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#flutter-ui-框架-framework"}},[a._v("#")]),a._v(" Flutter UI 框架（Framework）")]),a._v(" "),t("h3",{attrs:{id:"什么是ui框架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#什么是ui框架"}},[a._v("#")]),a._v(" 什么是UI框架")]),a._v(" "),t("p",[a._v("UI框架（UI Framework）特指：基于一个平台，在此平台上实现一个能快速开发GUI（图形用户接口）的框架，这里的平台主要指操作系统和浏览器。")]),a._v(" "),t("p",[a._v("通常来讲平台只提供非常基础的图形API，比如画线、画几何图形等，在大多数平台中，这些基础的图形API通常会被封装在一个Canvas对象中来集中管理。")]),a._v(" "),t("p",[a._v("如果没有UI框架的封装而直接用Canvas来构建用户界面，体验差和效率低！所以，UI框架解决的主要问题就是：如何基于基础的图形API（Canvas）来封装一套可以高效创建UI的框架。")]),a._v(" "),t("h3",{attrs:{id:"硬件绘图基本原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#硬件绘图基本原理"}},[a._v("#")]),a._v(" 硬件绘图基本原理")]),a._v(" "),t("h3",{attrs:{id:"操作系统绘制api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#操作系统绘制api"}},[a._v("#")]),a._v(" 操作系统绘制API")])])}),[],!1,null,null,null);t.default=e.exports}}]);